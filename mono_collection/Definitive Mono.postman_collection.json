{
	"info": {
		"_postman_id": "b50876b3-b58f-49a6-884a-ec284a6a9675",
		"name": "Definitive Mono",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20762171"
	},
	"item": [
		{
			"name": "Apps",
			"item": [
				{
					"name": "Get Brand Apps",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/branding/brands/:brand_id/apps",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"branding",
								"brands",
								":brand_id",
								"apps"
							],
							"variable": [
								{
									"key": "brand_id",
									"value": "{{brand_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api/2/api authorizations",
			"item": [
				{
					"name": "{api auth id}",
					"item": [
						{
							"name": "claims",
							"item": [
								{
									"name": "{claim id}",
									"item": [
										{
											"name": "Update Api Auth Server Claim",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"email_address\",\n    \"name\": \"email_address\",\n    \"user_attribute_mappings\": \"email\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims/:claim_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"claims",
														":claim_id"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														},
														{
															"key": "claim_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														}
													]
												},
												"description": "Update Api Auth Server Claim"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"label\": \"email_address\",\n    \"name\": \"email_address\",\n    \"user_attribute_mappings\": \"email\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims/:claim_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"api_authorizations",
																":api_auth_id",
																"claims",
																":claim_id"
															],
															"variable": [
																{
																	"key": "api_auth_id"
																},
																{
																	"key": "claim_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Api Auth Server Claim",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims/:claim_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"claims",
														":claim_id"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														},
														{
															"key": "claim_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete Api Auth Server Claim"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims/:claim_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"api_authorizations",
																":api_auth_id",
																"claims",
																":claim_id"
															],
															"variable": [
																{
																	"key": "api_auth_id"
																},
																{
																	"key": "claim_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Api Auth Server Claims",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id",
												"claims"
											],
											"variable": [
												{
													"key": "api_auth_id",
													"value": "{{api_auth_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get Api Auth Server Claims"
									},
									"response": [
										{
											"name": "200 - Empty",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"claims"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "private, max-age=0, must-revalidate"
												},
												{
													"key": "Content-Length",
													"value": "2"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Current-Page",
													"value": "1"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 19:57:45 GMT"
												},
												{
													"key": "Etag",
													"value": "\"d751713988987e9331980363e24189ce\""
												},
												{
													"key": "Page-Items",
													"value": "1000"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "Total-Count",
													"value": "0"
												},
												{
													"key": "Total-Pages",
													"value": "0"
												},
												{
													"key": "X-Request-Id",
													"value": "8a781bbc-605e-4501-b5bb-56c2980ffe76"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "200 - 1 item",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"claims"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "private, max-age=0, must-revalidate"
												},
												{
													"key": "Content-Length",
													"value": "278"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Current-Page",
													"value": "1"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 20:11:01 GMT"
												},
												{
													"key": "Etag",
													"value": "\"6121a9e2eeaa5603dd6aa7ef79c2a45c\""
												},
												{
													"key": "Page-Items",
													"value": "1000"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "Total-Count",
													"value": "1"
												},
												{
													"key": "Total-Pages",
													"value": "1"
												},
												{
													"key": "X-Request-Id",
													"value": "41e12f89-2d87-4cd6-bf3c-05afeb7062ac"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"attributes_transformations\": null,\n        \"user_attribute_mappings\": null,\n        \"skip_if_blank\": null,\n        \"id\": 362603,\n        \"user_attribute_macros\": null,\n        \"name\": \"email_address\",\n        \"values\": null,\n        \"default_values\": null,\n        \"safe_entitlements_enabled\": null,\n        \"provisioned_entitlements\": null,\n        \"label\": \"email_address\"\n    }\n]"
										},
										{
											"name": "200 - inherited + non-inherited",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"claims"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "private, max-age=0, must-revalidate"
												},
												{
													"key": "Content-Length",
													"value": "472"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Current-Page",
													"value": "1"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 20:34:18 GMT"
												},
												{
													"key": "Etag",
													"value": "\"f37fbcfc57316d40e9843cb146aedf3c\""
												},
												{
													"key": "Page-Items",
													"value": "1000"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "Total-Count",
													"value": "2"
												},
												{
													"key": "Total-Pages",
													"value": "1"
												},
												{
													"key": "X-Request-Id",
													"value": "e08c572b-ac7d-46f1-8c1c-1920070b487b"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"attributes_transformations\": null,\n        \"user_attribute_mappings\": null,\n        \"skip_if_blank\": null,\n        \"inherited\": false,\n        \"user_attribute_macros\": null,\n        \"values\": null,\n        \"default_values\": null,\n        \"safe_entitlements_enabled\": null,\n        \"provisioned_entitlements\": null\n    },\n    {\n        \"attributes_transformations\": null,\n        \"user_attribute_mappings\": null,\n        \"skip_if_blank\": null,\n        \"inherited\": true,\n        \"user_attribute_macros\": null,\n        \"values\": null,\n        \"default_values\": null,\n        \"safe_entitlements_enabled\": null,\n        \"provisioned_entitlements\": null\n    }\n]"
										}
									]
								},
								{
									"name": "Create Api Auth Server Claim",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"email_address\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id",
												"claims"
											],
											"variable": [
												{
													"key": "api_auth_id",
													"value": "{{api_auth_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Create Api Auth Server Claim"
									},
									"response": [
										{
											"name": "500 - Internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"email_address\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"claims"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache"
												},
												{
													"key": "Content-Length",
													"value": "29082"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 20:05:38 GMT"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "X-Request-Id",
													"value": "0eb1bc3b-e379-4d56-8576-dea3373c513c"
												}
											],
											"cookie": [],
											"body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n    <head>\n        <title>Action Controller: Exception caught</title>\n        <style>\n    body { background-color: #fff; color: #333; }\n\n    body, p, ol, ul, td {\n      font-family: verdana, arial, helvetica, sans-serif;\n      font-size:   13px;\n      line-height: 18px;\n    }\n\n    pre {\n      background-color: #eee;\n      padding: 10px;\n      font-size: 11px;\n    }\n\n    a { color: #000; }\n    a:visited { color: #666; }\n    a:hover { color: #fff; background-color:#000; }\n  </style>\n    </head>\n    <body>\n        <h1>\n  NoMethodError\n  \n    in Api/v5/api auth claimsController#create\n  \n</h1>\n        <pre>undefined method `to_hash&#39; for #&lt;Api::Parameter:0x7f92bdef58d8&gt;</pre>\n        <p>\n            <code>RAILS_ROOT: /onelogin/src</code>\n        </p>\n        <div id=\"traces\">\n            <a href=\"#\" onclick=\"document.getElementById('Framework-Trace').style.display='none';document.getElementById('Full-Trace').style.display='none';document.getElementById('Application-Trace').style.display='block';; return false;\">Application Trace</a> |\n            <a href=\"#\" onclick=\"document.getElementById('Application-Trace').style.display='none';document.getElementById('Full-Trace').style.display='none';document.getElementById('Framework-Trace').style.display='block';; return false;\">Framework Trace</a> |\n            <a href=\"#\" onclick=\"document.getElementById('Application-Trace').style.display='none';document.getElementById('Framework-Trace').style.display='none';document.getElementById('Full-Trace').style.display='block';; return false;\">Full Trace</a>\n            <div id=\"Application-Trace\" style=\"display: block;\">\n                <pre>\n                    <code>/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb:275:in `method_missing&#39;\n/onelogin/src/vendor/plugins/cross_site_sniper/lib/cross_site_sniper.rb:78:in `method_missing&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:99:in `to_hash&#39;\n/onelogin/src/lib/controller_customization/resource_manager.rb:34:in `render_response&#39;\n/onelogin/src/app/controllers/api/v5/api_auth_claims_controller.rb:40:in `create&#39;</code>\n                </pre>\n            </div>\n            <div id=\"Framework-Trace\" style=\"display: none;\">\n                <pre>\n                    <code>/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb:275:in `method_missing&#39;\n/onelogin/src/vendor/plugins/cross_site_sniper/lib/cross_site_sniper.rb:78:in `method_missing&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `perform_action_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:617:in `call_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:610:in `perform_action_without_benchmark&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/usr/local/lib/ruby/1.8/benchmark.rb:308:in `realtime&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/rescue.rb:160:in `perform_action_without_flash&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/flash.rb:151:in `perform_action_without_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:105:in `perform_action&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:363:in `perform_action_with_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:104:in `perform_action&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `process_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:606:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:391:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:386:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/routing/route_set.rb:438:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:87:in `dispatch&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:121:in `_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:130:in `build_middleware_stack&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:34:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:9:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:28:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:361:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:186:in `call!&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:164:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/builder.rb:63:in `call&#39;\n/onelogin/src/vendor/bundle/gems/sass-3.4.16/lib/sass/plugin/rack.rb:54:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/agent_hooks.rb:30:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/developer_mode.rb:48:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/string_coercion.rb:25:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/head.rb:9:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/request_store/middleware.rb:23:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/methodoverride.rb:24:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/params_parser.rb:15:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/session/cookie_store.rb:99:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/rack.rb:45:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/failsafe.rb:26:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:16:in `_call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:12:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `synchronize&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:28:in `do_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:18:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:114:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/reloader.rb:34:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:108:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/static.rb:33:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/log_tailer.rb:17:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/content_length.rb:13:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:48:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:95:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `each&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:23:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:82:in `start&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:14:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/commands/server.rb:111\nscript/server:5:in `gem_original_require&#39;\nscript/server:5:in `require&#39;\nscript/server:5\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `kernel_load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:28:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:463:in `exec&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `__send__&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor.rb:387:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:27:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/base.rb:466:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:18:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:30\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/friendly_errors.rb:124:in `with_friendly_errors&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:22</code>\n                </pre>\n            </div>\n            <div id=\"Full-Trace\" style=\"display: none;\">\n                <pre>\n                    <code>/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb:275:in `method_missing&#39;\n/onelogin/src/vendor/plugins/cross_site_sniper/lib/cross_site_sniper.rb:78:in `method_missing&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:99:in `to_hash&#39;\n/onelogin/src/lib/controller_customization/resource_manager.rb:34:in `render_response&#39;\n/onelogin/src/app/controllers/api/v5/api_auth_claims_controller.rb:40:in `create&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `perform_action_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:617:in `call_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:610:in `perform_action_without_benchmark&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/usr/local/lib/ruby/1.8/benchmark.rb:308:in `realtime&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/rescue.rb:160:in `perform_action_without_flash&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/flash.rb:151:in `perform_action_without_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:105:in `perform_action&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:363:in `perform_action_with_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:104:in `perform_action&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `process_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:606:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:391:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:386:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/routing/route_set.rb:438:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:87:in `dispatch&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:121:in `_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:130:in `build_middleware_stack&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:34:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:9:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:28:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:361:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:186:in `call!&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:164:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/builder.rb:63:in `call&#39;\n/onelogin/src/vendor/bundle/gems/sass-3.4.16/lib/sass/plugin/rack.rb:54:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/agent_hooks.rb:30:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/developer_mode.rb:48:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/lib/middlewares/request_id.rb:22:in `_call&#39;\n/onelogin/src/lib/middlewares/request_id.rb:14:in `call&#39;\n/onelogin/src/lib/middlewares/js_hijack_deflector.rb:32:in `_call&#39;\n/onelogin/src/lib/middlewares/js_hijack_deflector.rb:28:in `call&#39;\n/onelogin/src/lib/middlewares/x_runtime_header_delete.rb:8:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/string_coercion.rb:25:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/head.rb:9:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/request_store/middleware.rb:23:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/methodoverride.rb:24:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/params_parser.rb:15:in `call&#39;\n/onelogin/src/lib/middlewares/catch_api_json_parse_errors.rb:12:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/session/cookie_store.rb:99:in `call&#39;\n/onelogin/src/lib/middlewares/remove_samesite.rb:43:in `_call&#39;\n/onelogin/src/lib/middlewares/remove_samesite.rb:39:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/rack.rb:45:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/failsafe.rb:26:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:16:in `_call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:12:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `synchronize&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:28:in `do_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:18:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:114:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/reloader.rb:34:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:108:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/static.rb:33:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/log_tailer.rb:17:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/content_length.rb:13:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:48:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:95:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `each&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:23:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:82:in `start&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:14:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/commands/server.rb:111\nscript/server:5:in `gem_original_require&#39;\nscript/server:5:in `require&#39;\nscript/server:5\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `kernel_load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:28:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:463:in `exec&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `__send__&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor.rb:387:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:27:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/base.rb:466:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:18:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:30\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/friendly_errors.rb:124:in `with_friendly_errors&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:22\n/usr/local/bin/bundle:19:in `load&#39;\n/usr/local/bin/bundle:19</code>\n                </pre>\n            </div>\n        </div>\n        <h2 style=\"margin-top: 30px\">Request</h2>\n        <p>\n            <b>Parameters</b>:\n            <pre>{&quot;name&quot;=&gt;&quot;email_address&quot;,\n &quot;api_authorization_id&quot;=&gt;&quot;1&quot;}</pre>\n        </p>\n        <p>\n            <a href=\"#\" onclick=\"document.getElementById('session_dump').style.display='block'; return false;\">Show session dump</a>\n        </p>\n        <div id=\"session_dump\" style=\"display:none\">\n            <pre class='debug_dump'>--- \n</pre>\n        </div>\n        <h2 style=\"margin-top: 30px\">Response</h2>\n        <p>\n            <b>Headers</b>:\n            <pre>{&quot;Cache-Control&quot;=&gt;&quot;no-cache&quot;,\n &quot;Content-Type&quot;=&gt;&quot;&quot;}</pre>\n        </p>\n    </body>\n</html>\n<script type=\"text/javascript\">\nvar Airbrake = {\n  host    : \"api.airbrake.io\",\n  api_key : \"\",\n  notice  : {\"file\":\"[PROJECT_ROOT]/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb\",\"error_class\":\"NoMethodError\",\"action\":\"create\",\"environment_name\":\"production\",\"line_number\":\"275\",\"component\":\"api/v5/api_auth_claims\"},\n  message : 'This error exists in production!',\n\n  initialize: function() {\n    if (this.initialized) {\n      return;\n    } else {\n      this.initialized = true;\n    }\n\n    var data = [];\n\n    for (var key in this.notice) {\n      data[data.length] = 'notice[' + key + ']=' + this.notice[key];\n    }\n\n    data[data.length] = 'notice[api_key]=' + this.api_key;\n    data[data.length] = 'callback=Airbrake.onSuccess';\n    data[data.length] = '_=' + (new Date()).getTime();\n\n    var head = document.getElementsByTagName('head')[0];\n    var done = false;\n\n    var\n    script = document.createElement('script');\n    script.src  = 'http://' + this.host + '/notices_api/v1/notices/exist?' +\n                  data.join('&');\n    script.type = 'text/javascript';\n    script.onload = script.onreadystatechange = function(){\n      if (!done && (!this.readyState ||\n          this.readyState == 'loaded' || this.readyState == 'complete')) {\n\n        done = true;\n\n        // Handle memory leak in IE. (via jQuery)\n        script.onload = script.onreadystatechange = null;\n        head.removeChild(script);\n      }\n    };\n\n    head.appendChild(script);\n  },\n\n  onSuccess: function(error) {\n    var body    = document.getElementsByTagName('body')[0];\n    var text    = document.createTextNode(this.message);\n    var element = document.createElement('a');\n\n    element.id   = 'airbrake';\n    element.href = 'http://' + error.subdomain + '.' + this.host +\n                   '/projects/' + error.project_id + '/errors/' + error.id;\n    element.appendChild(text);\n\n    body.insertBefore(element, body.firstChild);\n\n    var h1      = document.getElementsByTagName('h1')[0];\n    var pre     = document.getElementsByTagName('pre')[0];\n    var wrapper = document.createElement('div');\n\n    wrapper.id = 'wrapper';\n    wrapper.appendChild(h1);\n    wrapper.appendChild(pre);\n\n    body.insertBefore(wrapper, body.children[1]);\n  }\n};\n\nwindow.onload = function() {\n  Airbrake.initialize.apply(Airbrake);\n};\n</script>\n<style type=\"text/css\">\n#airbrake {\n  background: #FFF url(http://airbrake.io/images/fell-off-the-toad.gif) no-repeat top right;\n  color: #F00;\n  padding: 45px 101px 45px 12px;\n  font-size: 14px;\n  font-weight: bold;\n  display: block;\n  float: right;\n}\n\n#wrapper {\n  padding-right: 360px;\n}\n</style>"
										},
										{
											"name": "422 - Validation error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"email_address\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/claims",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"claims"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache"
												},
												{
													"key": "Content-Length",
													"value": "111"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 20:10:07 GMT"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "X-Request-Id",
													"value": "6179f53a-221b-4167-838d-19da210114d5"
												}
											],
											"cookie": [],
											"body": "{\n    \"statusCode\": 422,\n    \"message\": \"Validation failed: Name has already been taken\",\n    \"name\": \"UnprocessableEntityError\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "clients",
							"item": [
								{
									"name": "{client app id}",
									"item": [
										{
											"name": "Update Api Auth Server Client",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"scopes\": [\n        51,\n        53\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients/:client_app_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"clients",
														":client_app_id"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														},
														{
															"key": "client_app_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														}
													]
												},
												"description": "Update Api Auth Server Client"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"scopes\": [\n        51,\n        53\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients/:client_app_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"api_authorizations",
																":api_auth_id",
																"clients",
																":client_app_id"
															],
															"variable": [
																{
																	"key": "api_auth_id"
																},
																{
																	"key": "client_app_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove Api Auth Server Client",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients/:client_app_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"clients",
														":client_app_id"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														},
														{
															"key": "client_app_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														}
													]
												},
												"description": "Remove Api Auth Server Client"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients/:client_app_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"api_authorizations",
																":api_auth_id",
																"clients",
																":client_app_id"
															],
															"variable": [
																{
																	"key": "api_auth_id"
																},
																{
																	"key": "client_app_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Api Auth Server Clients",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id",
												"clients"
											],
											"variable": [
												{
													"key": "api_auth_id",
													"value": "sit fugiat nisi",
													"description": "(Required) "
												}
											]
										},
										"description": "Get Api Auth Server Clients"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"clients"
													],
													"variable": [
														{
															"key": "api_auth_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add Api Auth Server Client",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"app_id\": 1026152,\n    \"scopes\": [\n        31\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id",
												"clients"
											],
											"variable": [
												{
													"key": "api_auth_id",
													"value": "sit fugiat nisi",
													"description": "(Required) "
												}
											]
										},
										"description": "Add Api Auth Server Client"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"app_id\": 1026152,\n    \"scopes\": [\n        31\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/clients",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"clients"
													],
													"variable": [
														{
															"key": "api_auth_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "scopes",
							"item": [
								{
									"name": "{scope id}",
									"item": [
										{
											"name": "Update Api Auth Server Scope",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"write:contacts\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes/:scope_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"scopes",
														":scope_id"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														},
														{
															"key": "scope_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														}
													]
												},
												"description": "Update Api Auth Server Scope"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "\"write:contacts\""
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes/:scope_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"api_authorizations",
																":api_auth_id",
																"scopes",
																":scope_id"
															],
															"variable": [
																{
																	"key": "api_auth_id"
																},
																{
																	"key": "scope_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Api Auth Server Scope",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes/:scope_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"scopes",
														":scope_id"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														},
														{
															"key": "scope_id",
															"value": "sit fugiat nisi",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete Api Auth Server Scope"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes/:scope_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"api_authorizations",
																":api_auth_id",
																"scopes",
																":scope_id"
															],
															"variable": [
																{
																	"key": "api_auth_id"
																},
																{
																	"key": "scope_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Api Auth Server Scopes",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id",
												"scopes"
											],
											"variable": [
												{
													"key": "api_auth_id",
													"value": "{{api_auth_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get Api Auth Server Scopes"
									},
									"response": [
										{
											"name": "200 - Empty",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"scopes"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "private, max-age=0, must-revalidate"
												},
												{
													"key": "Content-Length",
													"value": "2"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 17:48:40 GMT"
												},
												{
													"key": "Etag",
													"value": "\"d751713988987e9331980363e24189ce\""
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "X-Request-Id",
													"value": "eaf71492-1416-4d5d-98bc-ca1786aa3a88"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "200 - With inherited scope",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"scopes"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "private, max-age=0, must-revalidate"
												},
												{
													"key": "Content-Length",
													"value": "165"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Current-Page",
													"value": "1"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 19:39:20 GMT"
												},
												{
													"key": "Etag",
													"value": "\"6a9485204ad9220e06f78856f186f8a9\""
												},
												{
													"key": "Page-Items",
													"value": "1000"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "Total-Count",
													"value": "2"
												},
												{
													"key": "Total-Pages",
													"value": "1"
												},
												{
													"key": "X-Request-Id",
													"value": "d5d54c04-a6de-429c-8c28-522448669b8f"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 1,\n        \"inherited\": false,\n        \"value\": \"custom:scope1\",\n        \"description\": \"My first scope\"\n    },\n    {\n        \"id\": 2,\n        \"inherited\": true,\n        \"value\": \"genericscope1\",\n        \"description\": \"Generic Scope 1\"\n    }\n]"
										},
										{
											"name": "200 - With non-inherited scopes",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"scopes"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "private, max-age=0, must-revalidate"
												},
												{
													"key": "Content-Length",
													"value": "165"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Current-Page",
													"value": "1"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 19:40:19 GMT"
												},
												{
													"key": "Etag",
													"value": "\"6a9485204ad9220e06f78856f186f8a9\""
												},
												{
													"key": "Page-Items",
													"value": "1000"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "Total-Count",
													"value": "2"
												},
												{
													"key": "Total-Pages",
													"value": "1"
												},
												{
													"key": "X-Request-Id",
													"value": "3e63c354-6b83-4224-aecf-9a27cf3d6195"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 1,\n        \"inherited\": false,\n        \"value\": \"custom:scope1\",\n        \"description\": \"My first scope\"\n    }\n]"
										},
										{
											"name": "500 - Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"scopes"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache"
												},
												{
													"key": "Content-Length",
													"value": "34291"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 17:50:36 GMT"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "X-Request-Id",
													"value": "7fdf778b-070f-4d8f-bd3a-b3a6371fa1f6"
												}
											],
											"cookie": [],
											"body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n    <head>\n        <title>Action Controller: Exception caught</title>\n        <style>\n    body { background-color: #fff; color: #333; }\n\n    body, p, ol, ul, td {\n      font-family: verdana, arial, helvetica, sans-serif;\n      font-size:   13px;\n      line-height: 18px;\n    }\n\n    pre {\n      background-color: #eee;\n      padding: 10px;\n      font-size: 11px;\n    }\n\n    a { color: #000; }\n    a:visited { color: #666; }\n    a:hover { color: #fff; background-color:#000; }\n  </style>\n    </head>\n    <body>\n        <h1>\n  NoMethodError\n  \n    in Api/v5/api auth scopesController#index\n  \n</h1>\n        <pre>undefined method `inherited&#39; for #&lt;ApiScope:0x7f1a04db1b70&gt;</pre>\n        <p>\n            <code>RAILS_ROOT: /onelogin/src</code>\n        </p>\n        <div id=\"traces\">\n            <a href=\"#\" onclick=\"document.getElementById('Framework-Trace').style.display='none';document.getElementById('Full-Trace').style.display='none';document.getElementById('Application-Trace').style.display='block';; return false;\">Application Trace</a> |\n            <a href=\"#\" onclick=\"document.getElementById('Application-Trace').style.display='none';document.getElementById('Full-Trace').style.display='none';document.getElementById('Framework-Trace').style.display='block';; return false;\">Framework Trace</a> |\n            <a href=\"#\" onclick=\"document.getElementById('Application-Trace').style.display='none';document.getElementById('Framework-Trace').style.display='none';document.getElementById('Full-Trace').style.display='block';; return false;\">Full Trace</a>\n            <div id=\"Application-Trace\" style=\"display: block;\">\n                <pre>\n                    <code>/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb:275:in `method_missing&#39;\n/onelogin/src/vendor/plugins/cross_site_sniper/lib/cross_site_sniper.rb:78:in `method_missing&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/dependencies.rb:406:in `to_proc&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:105:in `call&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:105:in `forge_valhash&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:99:in `forge_valhash&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:100:in `forge_valhash&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:99:in `forge_valhash&#39;\n/onelogin/src/app/presenters/api/v5/api_auth_scope_presenter.rb:40:in `to_hash&#39;\n/onelogin/src/app/controllers/api/v5/resource_adapters/api_auth_scope.rb:17:in `call_presenter&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:91:in `to_hash&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:91:in `map&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:91:in `to_hash&#39;\n/onelogin/src/lib/controller_customization/resource_manager.rb:34:in `render_response&#39;\n/onelogin/src/app/controllers/api/v5/api_auth_scopes_controller.rb:35:in `index&#39;</code>\n                </pre>\n            </div>\n            <div id=\"Framework-Trace\" style=\"display: none;\">\n                <pre>\n                    <code>/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb:275:in `method_missing&#39;\n/onelogin/src/vendor/plugins/cross_site_sniper/lib/cross_site_sniper.rb:78:in `method_missing&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/dependencies.rb:406:in `to_proc&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `tap&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `tap&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `perform_action_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:617:in `call_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:610:in `perform_action_without_benchmark&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/usr/local/lib/ruby/1.8/benchmark.rb:308:in `realtime&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/rescue.rb:160:in `perform_action_without_flash&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/flash.rb:151:in `perform_action_without_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:105:in `perform_action&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:363:in `perform_action_with_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:104:in `perform_action&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `process_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:606:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:391:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:386:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/routing/route_set.rb:438:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:87:in `dispatch&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:121:in `_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:130:in `build_middleware_stack&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:34:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:9:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:28:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:361:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:186:in `call!&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:164:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/builder.rb:63:in `call&#39;\n/onelogin/src/vendor/bundle/gems/sass-3.4.16/lib/sass/plugin/rack.rb:54:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/agent_hooks.rb:30:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/developer_mode.rb:48:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/string_coercion.rb:25:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/head.rb:9:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/request_store/middleware.rb:23:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/methodoverride.rb:24:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/params_parser.rb:15:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/session/cookie_store.rb:99:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/rack.rb:45:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/failsafe.rb:26:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:16:in `_call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:12:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `synchronize&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:28:in `do_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:18:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:114:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/reloader.rb:34:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:108:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/static.rb:33:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/log_tailer.rb:17:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/content_length.rb:13:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:48:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:95:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `each&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:23:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:82:in `start&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:14:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/commands/server.rb:111\nscript/server:5:in `gem_original_require&#39;\nscript/server:5:in `require&#39;\nscript/server:5\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `kernel_load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:28:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:463:in `exec&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `__send__&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor.rb:387:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:27:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/base.rb:466:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:18:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:30\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/friendly_errors.rb:124:in `with_friendly_errors&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:22</code>\n                </pre>\n            </div>\n            <div id=\"Full-Trace\" style=\"display: none;\">\n                <pre>\n                    <code>/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb:275:in `method_missing&#39;\n/onelogin/src/vendor/plugins/cross_site_sniper/lib/cross_site_sniper.rb:78:in `method_missing&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/dependencies.rb:406:in `to_proc&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:105:in `call&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:105:in `forge_valhash&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `tap&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `each_with_object&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:99:in `forge_valhash&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:100:in `forge_valhash&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:80:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:79:in `each_with_object&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `tap&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/enumerable.rb:78:in `each_with_object&#39;\n/onelogin/src/app/presenters/api/v5/base_presenter.rb:99:in `forge_valhash&#39;\n/onelogin/src/app/presenters/api/v5/api_auth_scope_presenter.rb:40:in `to_hash&#39;\n/onelogin/src/app/controllers/api/v5/resource_adapters/api_auth_scope.rb:17:in `call_presenter&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:91:in `to_hash&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:91:in `map&#39;\n/onelogin/src/lib/resource_adapters/abstract_base.rb:91:in `to_hash&#39;\n/onelogin/src/lib/controller_customization/resource_manager.rb:34:in `render_response&#39;\n/onelogin/src/app/controllers/api/v5/api_auth_scopes_controller.rb:35:in `index&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:1333:in `perform_action_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:617:in `call_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:610:in `perform_action_without_benchmark&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/usr/local/lib/ruby/1.8/benchmark.rb:308:in `realtime&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activesupport/lib/active_support/core_ext/benchmark.rb:17:in `ms&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/benchmarking.rb:68:in `perform_action_without_rescue&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/rescue.rb:160:in `perform_action_without_flash&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/flash.rb:151:in `perform_action_without_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:105:in `perform_action&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:363:in `perform_action_with_newrelic_trace&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/rails/action_controller.rb:104:in `perform_action&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `send&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:532:in `process_without_filters&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/filters.rb:606:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:391:in `process&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/base.rb:386:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/routing/route_set.rb:438:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:87:in `dispatch&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:121:in `_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:130:in `build_middleware_stack&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:29:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:34:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:9:in `cache&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/query_cache.rb:28:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:361:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:186:in `call!&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/strategy.rb:164:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/omniauth-1.4.2/lib/omniauth/builder.rb:63:in `call&#39;\n/onelogin/src/vendor/bundle/gems/sass-3.4.16/lib/sass/plugin/rack.rb:54:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/agent_hooks.rb:30:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/rack/developer_mode.rb:48:in `traced_call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/lib/middlewares/request_id.rb:22:in `_call&#39;\n/onelogin/src/lib/middlewares/request_id.rb:14:in `call&#39;\n/onelogin/src/lib/middlewares/js_hijack_deflector.rb:32:in `_call&#39;\n/onelogin/src/lib/middlewares/js_hijack_deflector.rb:28:in `call&#39;\n/onelogin/src/lib/middlewares/x_runtime_header_delete.rb:8:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/string_coercion.rb:25:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/head.rb:9:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/request_store/middleware.rb:23:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/methodoverride.rb:24:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/params_parser.rb:15:in `call&#39;\n/onelogin/src/lib/middlewares/catch_api_json_parse_errors.rb:12:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/session/cookie_store.rb:99:in `call&#39;\n/onelogin/src/lib/middlewares/remove_samesite.rb:43:in `_call&#39;\n/onelogin/src/lib/middlewares/remove_samesite.rb:39:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/rack.rb:45:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/failsafe.rb:26:in `call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:16:in `_call&#39;\n/onelogin/src/vendor/bundle/gems/airbrake-3.1.8/lib/airbrake/user_informer.rb:12:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `synchronize&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/lock.rb:11:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:28:in `do_call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/onelogin-ruby-tools-846476af9a65/lib/one_login/telemetry/middleware.rb:18:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:114:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/reloader.rb:34:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/actionpack/lib/action_controller/dispatcher.rb:108:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/static.rb:33:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/static.rb:31:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:47:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `each&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/urlmap.rb:41:in `call&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/rails/rack/log_tailer.rb:17:in `call&#39;\n/onelogin/src/vendor/bundle/gems/newrelic_rpm-3.18.1.330/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/content_length.rb:13:in `call&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:48:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&#39;\n/usr/local/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:95:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `each&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:92:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:23:in `start&#39;\n/usr/local/lib/ruby/1.8/webrick/server.rb:82:in `start&#39;\n/onelogin/src/vendor/bundle/gems/rack-1.1.6/lib/rack/handler/webrick.rb:14:in `run&#39;\n/onelogin/src/vendor/bundle/bundler/gems/rails-31a564b77c73/railties/lib/commands/server.rb:111\nscript/server:5:in `gem_original_require&#39;\nscript/server:5:in `require&#39;\nscript/server:5\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:74:in `kernel_load&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli/exec.rb:28:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:463:in `exec&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `__send__&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor.rb:387:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:27:in `dispatch&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/vendor/thor/lib/thor/base.rb:466:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/cli.rb:18:in `start&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:30\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/lib/bundler/friendly_errors.rb:124:in `with_friendly_errors&#39;\n/usr/local/lib/ruby/gems/1.8/gems/bundler-1.17.3.ol.0.1.0/exe/bundle:22\n/usr/local/bin/bundle:19:in `load&#39;\n/usr/local/bin/bundle:19</code>\n                </pre>\n            </div>\n        </div>\n        <h2 style=\"margin-top: 30px\">Request</h2>\n        <p>\n            <b>Parameters</b>:\n            <pre>{&quot;limit&quot;=&gt;1000,\n &quot;page&quot;=&gt;1,\n &quot;order&quot;=&gt;&quot;api_scopes.id&quot;,\n &quot;api_authorization_id&quot;=&gt;&quot;1&quot;}</pre>\n        </p>\n        <p>\n            <a href=\"#\" onclick=\"document.getElementById('session_dump').style.display='block'; return false;\">Show session dump</a>\n        </p>\n        <div id=\"session_dump\" style=\"display:none\">\n            <pre class='debug_dump'>--- \n</pre>\n        </div>\n        <h2 style=\"margin-top: 30px\">Response</h2>\n        <p>\n            <b>Headers</b>:\n            <pre>{&quot;Cache-Control&quot;=&gt;&quot;no-cache&quot;,\n &quot;Content-Type&quot;=&gt;&quot;&quot;}</pre>\n        </p>\n    </body>\n</html>\n<script type=\"text/javascript\">\nvar Airbrake = {\n  host    : \"api.airbrake.io\",\n  api_key : \"\",\n  notice  : {\"file\":\"[PROJECT_ROOT]/vendor/bundle/bundler/gems/rails-31a564b77c73/activerecord/lib/active_record/attribute_methods.rb\",\"error_class\":\"NoMethodError\",\"action\":\"index\",\"environment_name\":\"production\",\"line_number\":\"275\",\"component\":\"api/v5/api_auth_scopes\"},\n  message : 'This error exists in production!',\n\n  initialize: function() {\n    if (this.initialized) {\n      return;\n    } else {\n      this.initialized = true;\n    }\n\n    var data = [];\n\n    for (var key in this.notice) {\n      data[data.length] = 'notice[' + key + ']=' + this.notice[key];\n    }\n\n    data[data.length] = 'notice[api_key]=' + this.api_key;\n    data[data.length] = 'callback=Airbrake.onSuccess';\n    data[data.length] = '_=' + (new Date()).getTime();\n\n    var head = document.getElementsByTagName('head')[0];\n    var done = false;\n\n    var\n    script = document.createElement('script');\n    script.src  = 'http://' + this.host + '/notices_api/v1/notices/exist?' +\n                  data.join('&');\n    script.type = 'text/javascript';\n    script.onload = script.onreadystatechange = function(){\n      if (!done && (!this.readyState ||\n          this.readyState == 'loaded' || this.readyState == 'complete')) {\n\n        done = true;\n\n        // Handle memory leak in IE. (via jQuery)\n        script.onload = script.onreadystatechange = null;\n        head.removeChild(script);\n      }\n    };\n\n    head.appendChild(script);\n  },\n\n  onSuccess: function(error) {\n    var body    = document.getElementsByTagName('body')[0];\n    var text    = document.createTextNode(this.message);\n    var element = document.createElement('a');\n\n    element.id   = 'airbrake';\n    element.href = 'http://' + error.subdomain + '.' + this.host +\n                   '/projects/' + error.project_id + '/errors/' + error.id;\n    element.appendChild(text);\n\n    body.insertBefore(element, body.firstChild);\n\n    var h1      = document.getElementsByTagName('h1')[0];\n    var pre     = document.getElementsByTagName('pre')[0];\n    var wrapper = document.createElement('div');\n\n    wrapper.id = 'wrapper';\n    wrapper.appendChild(h1);\n    wrapper.appendChild(pre);\n\n    body.insertBefore(wrapper, body.children[1]);\n  }\n};\n\nwindow.onload = function() {\n  Airbrake.initialize.apply(Airbrake);\n};\n</script>\n<style type=\"text/css\">\n#airbrake {\n  background: #FFF url(http://airbrake.io/images/fell-off-the-toad.gif) no-repeat top right;\n  color: #F00;\n  padding: 45px 101px 45px 12px;\n  font-size: 14px;\n  font-weight: bold;\n  display: block;\n  float: right;\n}\n\n#wrapper {\n  padding-right: 360px;\n}\n</style>"
										}
									]
								},
								{
									"name": "Create Api Auth Server Scope",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"custom:scope\",\n  \"description\": \"My custom scope\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id",
												"scopes"
											],
											"variable": [
												{
													"key": "api_auth_id",
													"value": "{{api_auth_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Create Api Auth Server Scope"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer: <token>",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"custom:scope1\",\n  \"description\": \"My first scope\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"api_authorizations",
														":api_auth_id",
														"scopes"
													],
													"variable": [
														{
															"key": "api_auth_id",
															"value": "{{api_auth_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache"
												},
												{
													"key": "Content-Length",
													"value": "8"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Date",
													"value": "Tue, 21 Sep 2021 17:49:37 GMT"
												},
												{
													"key": "Server",
													"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
												},
												{
													"key": "X-Request-Id",
													"value": "d8465ed6-fc58-41e0-a0d5-fac0958bc528"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 1\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Api Auth Server",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										":api_auth_id"
									],
									"variable": [
										{
											"key": "api_auth_id",
											"value": "sit fugiat nisi",
											"description": "(Required) "
										}
									]
								},
								"description": "Get Api Auth Server"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id"
											],
											"variable": [
												{
													"key": "api_auth_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Api Auth Server",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {\n        \"access_token_expiration_minutes\": 15,\n        \"audiences\": [\n            \"http://myapi.com/contacts2\"\n        ],\n        \"refresh_token_expiration_minutes\": 35,\n        \"resource_identifier\": \"http://myapi.com/contacts2\"\n    },\n    \"description\": \"This is an api\",\n    \"name\": \"Contacts API\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										":api_auth_id"
									],
									"variable": [
										{
											"key": "api_auth_id",
											"value": "sit fugiat nisi",
											"description": "(Required) "
										}
									]
								},
								"description": "Update Api Auth Server"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"configuration\": {\n        \"access_token_expiration_minutes\": 15,\n        \"audiences\": [\n            \"http://myapi.com/contacts2\"\n        ],\n        \"refresh_token_expiration_minutes\": 35,\n        \"resource_identifier\": \"http://myapi.com/contacts2\"\n    },\n    \"description\": \"This is an api\",\n    \"name\": \"Contacts API\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id"
											],
											"variable": [
												{
													"key": "api_auth_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Api Auth Server",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										":api_auth_id"
									],
									"variable": [
										{
											"key": "api_auth_id",
											"value": "sit fugiat nisi",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete Api Auth Server"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/api_authorizations/:api_auth_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"api_authorizations",
												":api_auth_id"
											],
											"variable": [
												{
													"key": "api_auth_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List Api Auth Servers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/2/api_authorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations"
							]
						},
						"description": "List Api Auth Servers"
					},
					"response": [
						{
							"name": "200 - 1 item",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer: <token>",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/2/api_authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "private, max-age=0, must-revalidate"
								},
								{
									"key": "Content-Length",
									"value": "250"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Current-Page",
									"value": "1"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Sep 2021 17:45:11 GMT"
								},
								{
									"key": "Etag",
									"value": "\"a54562464b9e86dc1ffe7e0cc046ac0e\""
								},
								{
									"key": "Page-Items",
									"value": "1000"
								},
								{
									"key": "Server",
									"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
								},
								{
									"key": "Total-Count",
									"value": "1"
								},
								{
									"key": "Total-Pages",
									"value": "1"
								},
								{
									"key": "X-Request-Id",
									"value": "55b07228-42ea-403d-82b9-350303cefcb5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"description\": \"This is an example\",\n        \"configuration\": {\n            \"audiences\": [\n                \"http://myapi.com/example\"\n            ],\n            \"resource_identifier\": \"http://myapi.com/example\",\n            \"access_token_expiration_minutes\": 10,\n            \"refresh_token_expiration_minutes\": 30\n        },\n        \"name\": \"Contacts API Example\",\n        \"id\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Create Api Auth Server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"configuration\": {\n        \"access_token_expiration_minutes\": 10,\n        \"audiences\": [\n            \"http://myapi.com/contacts5\"\n        ],\n        \"refresh_token_expiration_minutes\": 30,\n        \"resource_identifier\": \"http://myapi.com/contacts5\"\n    },\n    \"description\": \"This is an api\",\n    \"name\": \"Contacts API\",\n    \"connector_id\": {{connector_id}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/2/api_authorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations"
							]
						},
						"description": "Create Api Auth Server"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer: <token>",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {\n        \"access_token_expiration_minutes\": 10,\n        \"audiences\": [\n            \"http://myapi.com/example\"\n        ],\n        \"refresh_token_expiration_minutes\": 30,\n        \"resource_identifier\": \"http://myapi.com/example\"\n    },\n    \"description\": \"This is an example\",\n    \"name\": \"Contacts API Example\",\n    \"connector_id\": 123\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/api_authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Length",
									"value": "8"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 21 Sep 2021 17:43:28 GMT"
								},
								{
									"key": "Server",
									"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
								},
								{
									"key": "X-Request-Id",
									"value": "36247ebe-1bac-4141-a299-fae425a459c6"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1\n}"
						}
					]
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "oauth2",
					"item": [
						{
							"name": "Revoke Tokens",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/oauth2/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"oauth2",
										"revoke"
									]
								},
								"description": "Revoke Tokens"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"access_token\": \"{{access_token}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/oauth2/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"oauth2",
												"revoke"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Generate Tokens",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"grant_type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/oauth2/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"oauth2",
										"v2",
										"token"
									]
								},
								"description": "Generate Tokens"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"grant_type\": \"client_credentials\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/oauth2/v2/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"oauth2",
												"v2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Rate Limit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/rate_limit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"rate_limit"
							]
						},
						"description": "Get Rate Limit"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/rate_limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"rate_limit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "oauth2",
					"item": [
						{
							"name": "Generate Tokens (Url Encoded)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"grant_type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/oauth2/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"oauth2",
										"v2",
										"token"
									]
								},
								"description": "Generate Tokens (Url Encoded)"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"grant_type\": \"client_credentials\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/oauth2/v2/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"oauth2",
												"v2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Revoke Tokens",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/oauth2/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"oauth2",
										"revoke"
									]
								},
								"description": "Revoke Tokens"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"access_token\": \"{{access_token}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/oauth2/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"oauth2",
												"revoke"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Rate Limit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/rate_limit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"rate_limit"
							]
						},
						"description": "Get Rate Limit"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/rate_limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"rate_limit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "List Rules",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules"
							],
							"query": [
								{
									"key": "has_condition",
									"value": "has_role:{{role_id}}",
									"disabled": true
								},
								{
									"key": "has_condition_type",
									"value": "none",
									"disabled": true
								},
								{
									"key": "has_action",
									"value": "set_status:*",
									"disabled": true
								},
								{
									"key": "has_action_type",
									"value": "none",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response ID is not null\", function () {",
									"    pm.response.json().id.not.equal(null);",
									"});",
									"",
									"postman.setEnvironmentVariable(\"mapping_id\", pm.response.json().id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sample Rule\",\n    \"match\": \"all\",\n    \"enabled\": true,\n    \"position\": 1,\n    \"conditions\": [\n        {\n            \"source\": \"has_role\",\n            \"operator\": \"ri\",\n            \"value\": \"272445\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_groups\",\n            \"value\": [\n                \"member_of\"\n            ],\n            \"expression\": \".*\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response ID is not null\", function () {",
									"    pm.response.json().id.not.equal(null);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sample Rule Updated\",\n    \"match\": \"all\",\n    \"enabled\": true,\n    \"position\": 1,\n    \"conditions\": [\n        {\n            \"source\": \"has_role\",\n            \"operator\": \"ri\",\n            \"value\": \"272445\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_groups\",\n            \"value\": [\n                \"member_of\"\n            ],\n            \"expression\": \".*\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Conditions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/conditions",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"conditions"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Conditions Operators",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/conditions/{{rule_condition_value}}/operators",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"conditions",
								"{{rule_condition_value}}",
								"operators"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Conditions Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/conditions/{{rule_condition_value}}/values",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"conditions",
								"{{rule_condition_value}}",
								"values"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/actions",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"actions"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Actions Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/actions/{{rule_action_value}}/values",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"actions",
								"{{rule_action_value}}",
								"values"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Sort",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t204500,\n    204499,\n    204503,\n    204502,\n    204501\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/sort",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules",
								"sort"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api/2",
			"item": [
				{
					"name": "apps",
					"item": [
						{
							"name": "{app id}",
							"item": [
								{
									"name": "rules",
									"item": [
										{
											"name": "actions",
											"item": [
												{
													"name": "List Actions",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"actions"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "{{app_id}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "List Actions"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"actions"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "List Actions Values",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions/:rule_action_value/values",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"actions",
																":rule_action_value",
																"values"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																},
																{
																	"key": "rule_action_value",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																}
															]
														},
														"description": "List Actions Values"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions/:rule_action_value/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"actions",
																		":rule_action_value",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_action_value"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "conditions",
											"item": [
												{
													"name": "{rule condition value}",
													"item": [
														{
															"name": "List Conditions Operators",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/operators",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"conditions",
																		":rule_condition_value",
																		"operators"
																	],
																	"variable": [
																		{
																			"key": "app_id",
																			"value": "magna Lorem occaecat",
																			"description": "(Required) "
																		},
																		{
																			"key": "rule_condition_value",
																			"value": "magna Lorem occaecat",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "List Conditions Operators"
															},
															"response": [
																{
																	"name": "response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/operators",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"2",
																				"apps",
																				":app_id",
																				"rules",
																				"conditions",
																				":rule_condition_value",
																				"operators"
																			],
																			"variable": [
																				{
																					"key": "app_id"
																				},
																				{
																					"key": "rule_condition_value"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "List Conditions Values",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"conditions",
																		":rule_condition_value",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "app_id",
																			"value": "magna Lorem occaecat",
																			"description": "(Required) "
																		},
																		{
																			"key": "rule_condition_value",
																			"value": "magna Lorem occaecat",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "List Conditions Values"
															},
															"response": [
																{
																	"name": "response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"2",
																				"apps",
																				":app_id",
																				"rules",
																				"conditions",
																				":rule_condition_value",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "app_id"
																				},
																				{
																					"key": "rule_condition_value"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List Conditions",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"conditions"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																}
															]
														},
														"description": "List Conditions"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"conditions"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "{rule id}",
											"item": [
												{
													"name": "Get Rule",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																},
																{
																	"key": "rule_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get Rule"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		":rule_id"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update Rule",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"actions\": [\n        {\n            \"action\": \"set_groups\",\n            \"expression\": \".*\",\n            \"value\": [\n                \"member_of\"\n            ]\n        }\n    ],\n    \"conditions\": [\n        {\n            \"operator\": \"ri\",\n            \"source\": \"has_role\",\n            \"value\": \"272445\"\n        }\n    ],\n    \"enabled\": true,\n    \"match\": \"all\",\n    \"name\": \"Sample Rule Updated\",\n    \"position\": 1\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																},
																{
																	"key": "rule_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update Rule"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"actions\": [\n        {\n            \"action\": \"set_groups\",\n            \"expression\": \".*\",\n            \"value\": [\n                \"member_of\"\n            ]\n        }\n    ],\n    \"conditions\": [\n        {\n            \"operator\": \"ri\",\n            \"source\": \"has_role\",\n            \"value\": \"272445\"\n        }\n    ],\n    \"enabled\": true,\n    \"match\": \"all\",\n    \"name\": \"Sample Rule Updated\",\n    \"position\": 1\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		":rule_id"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete Rule",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																},
																{
																	"key": "rule_id",
																	"value": "magna Lorem occaecat",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete Rule"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		":rule_id"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List Rules",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.us.onelogin.com/api/2/apps/1644846/rules/actions/set_groups/values",
													"protocol": "https",
													"host": [
														"api",
														"us",
														"onelogin",
														"com"
													],
													"path": [
														"api",
														"2",
														"apps",
														"1644846",
														"rules",
														"actions",
														"set_groups",
														"values"
													]
												},
												"description": "List Rules"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules?has_condition=has_role:{{role_id}}&has_condition_type=none&has_action=set_status:*&has_action_type=none",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules"
															],
															"query": [
																{
																	"key": "has_condition",
																	"value": "has_role:{{role_id}}"
																},
																{
																	"key": "has_condition_type",
																	"value": "none"
																},
																{
																	"key": "has_action",
																	"value": "set_status:*"
																},
																{
																	"key": "has_action_type",
																	"value": "none"
																}
															],
															"variable": [
																{
																	"key": "app_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bulk Sort",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    204500,\n    204499,\n    204503,\n    204502,\n    204501\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/sort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id",
														"rules",
														"sort"
													],
													"variable": [
														{
															"key": "app_id",
															"value": "magna Lorem occaecat",
															"description": "(Required) "
														}
													]
												},
												"description": "Bulk Sort"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n    204500,\n    204499,\n    204503,\n    204502,\n    204501\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/sort",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"sort"
															],
															"variable": [
																{
																	"key": "app_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get App",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id?name=&connector_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "connector_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "app_id",
													"value": "magna Lorem occaecat",
													"description": "(Required) "
												}
											]
										},
										"description": "Get App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id?name=&connector_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id"
													],
													"query": [
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "connector_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update App",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {\n        \"saml_username\": {\n            \"user_attribute_mappings\": \"email\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id?name=&connector_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "connector_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "app_id",
													"value": "magna Lorem occaecat",
													"description": "(Required) "
												}
											]
										},
										"description": "Update App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameters\": {\n        \"saml_username\": {\n            \"user_attribute_mappings\": \"email\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id?name=&connector_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id"
													],
													"query": [
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "connector_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete App",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id"
											],
											"variable": [
												{
													"key": "app_id",
													"value": "magna Lorem occaecat",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id"
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Parameter from App",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id/parameters/:parameter_id?name=&connector_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id",
												"parameters",
												":parameter_id"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "connector_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "app_id",
													"value": "magna Lorem occaecat",
													"description": "(Required) "
												},
												{
													"key": "parameter_id",
													"value": "magna Lorem occaecat",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Parameter from App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id/parameters/:parameter_id?name=&connector_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id",
														"parameters",
														":parameter_id"
													],
													"query": [
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "connector_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "app_id"
														},
														{
															"key": "parameter_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get App Users",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id",
												"users"
											],
											"variable": [
												{
													"key": "app_id",
													"value": "magna Lorem occaecat",
													"description": "(Required) "
												}
											]
										},
										"description": "Get App Users"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id",
														"users"
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List Apps",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/apps?connector_id=magna Lorem occaecat&auth_method=magna Lorem occaecat&fields=policy_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"apps"
									],
									"query": [
										{
											"key": "connector_id",
											"value": "magna Lorem occaecat"
										},
										{
											"key": "auth_method",
											"value": "magna Lorem occaecat"
										},
										{
											"key": "fields",
											"value": "policy_id"
										}
									]
								},
								"description": "List Apps"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps?connector_id=magna Lorem occaecat&auth_method=magna Lorem occaecat&fields=policy_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps"
											],
											"query": [
												{
													"key": "connector_id",
													"value": "magna Lorem occaecat"
												},
												{
													"key": "auth_method",
													"value": "magna Lorem occaecat"
												},
												{
													"key": "fields",
													"value": "policy_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create App",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"configuration\": {\n        \"signature_algorithm\": \"SHA-1\"\n    },\n    \"connector_id\": 50534,\n    \"description\": \"\",\n    \"name\": \"Amazon Web Services (AWS) Multi Role\",\n    \"parameters\": {\n        \"saml_username\": {\n            \"user_attribute_mappings\": \"email\"\n        }\n    },\n    \"sso\": {\n        \"certificate\": {\n            \"id\": 170216\n        }\n    },\n    \"visible\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/apps?name=&connector_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"apps"
									],
									"query": [
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "connector_id",
											"value": ""
										}
									]
								},
								"description": "Create App"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"configuration\": {\n        \"signature_algorithm\": \"SHA-1\"\n    },\n    \"connector_id\": 50534,\n    \"description\": \"\",\n    \"name\": \"Amazon Web Services (AWS) Multi Role\",\n    \"parameters\": {\n        \"saml_username\": {\n            \"user_attribute_mappings\": \"email\"\n        }\n    },\n    \"sso\": {\n        \"certificate\": {\n            \"id\": 170216\n        }\n    },\n    \"visible\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/apps?name=&connector_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "connector_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List Connectors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/2/connectors?auth_method=2&limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"connectors"
							],
							"query": [
								{
									"key": "auth_method",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "List Connectors"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/connectors?auth_method=2&limit=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"connectors"
									],
									"query": [
										{
											"key": "auth_method",
											"value": "2"
										},
										{
											"key": "limit",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test API Rule\",\n  \"match\": \"all\",\n  \"enabled\": true,\n  \"position\": null,\n  \"conditions\": [\n    {\n      \"source\": \"member_of\",\n      \"operator\": \"=\",\n      \"value\": \"Engineering\"\n    }\n  ],\n  \"actions\": [\n    {\n      \"action\": \"set_role\",\n      \"value\": [\n        \"arn:aws:iam::596734802384:role/AWS-Admin_Access\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/2/apps/{{app_id}}/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"rules"
							]
						},
						"description": "Create Rule"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"actions\": [\n        {\n            \"action\": \"set_status\",\n            \"value\": [\n                \"2\"\n            ]\n        }\n    ],\n    \"conditions\": [\n        {\n            \"operator\": \">\",\n            \"source\": \"last_login\",\n            \"value\": \"90\"\n        }\n    ],\n    \"enabled\": true,\n    \"match\": \"all\",\n    \"name\": \"Suspend after 90 days inactive\",\n    \"position\": null\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"mappings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Scopes",
			"item": [
				{
					"name": "Get Api Auth Server Scopes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"scopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Api Auth Server Scope",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"value\": \"custom:scope\",\n\t\"description\": \"A custom scope\"\n}\n\n"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"scopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Api Auth Server Scope",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"value\": \"write:contacts\",\n \"description\": \"Create some contacts\"\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes/{{scope_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"scopes",
								"{{scope_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Api Auth Server Scope",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes/{{scope_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"scopes",
								"{{scope_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Claims",
			"item": [
				{
					"name": "Get Api Auth Server Claims",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"claims"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Api Auth Server Claim",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"email_address\"\n}\n"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"claims"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Api Auth Server Claim",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_attribute_mappings\": \"email\",\n    \"label\": \"email_address\",\n    \"name\": \"email_address\"\n}\n"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims/{{claim_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"claims",
								"{{claim_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Api Auth Server Claim",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims/{{claim_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"claims",
								"{{claim_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client Apps",
			"item": [
				{
					"name": "Get Api Auth Server Clients",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Api Auth Server Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"app_id\": 1026152,\n\t\"scopes\": [31]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Api Auth Server Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"scopes\": [51,53]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients/{{client_app_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"clients",
								"{{client_app_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Api Auth Server Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients/{{client_app_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}",
								"clients",
								"{{client_app_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api/2/branding",
			"item": [
				{
					"name": "brands",
					"item": [
						{
							"name": "{brand id}",
							"item": [
								{
									"name": "Get Brand",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands",
												":brand_id"
											],
											"variable": [
												{
													"key": "brand_id",
													"value": "{{brand_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Retrieve a single brand via ID"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Brand",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"custom_accent_color\": \"#feeeeb\",\n    \"custom_color\": \"#beeeef\",\n    \"custom_label_text_for_login_screen\": \"YOUR TRUE NAME\",\n    \"enable_custom_label_for_login_screen\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands",
												":brand_id"
											],
											"variable": [
												{
													"key": "brand_id",
													"value": "{{brand_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Update Brand"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"custom_accent_color\": \"#feeeeb\",\n    \"custom_color\": \"#beeeef\",\n    \"custom_label_text_for_login_screen\": \"YOUR TRUE NAME\",\n    \"enable_custom_label_for_login_screen\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Brand",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands",
												":brand_id"
											],
											"variable": [
												{
													"key": "brand_id",
													"value": "{{brand_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Brand"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Brand Apps",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id/apps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands",
												":brand_id",
												"apps"
											],
											"variable": [
												{
													"key": "brand_id",
													"value": "{{brand_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get Brand Apps"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id/apps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id",
														"apps"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List Brands",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/branding/brands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"branding",
										"brands"
									]
								},
								"description": "List Brands"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Brand",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"background\": \"iVBORw0KGgoAAAANSUhEUgAAAb8AAAG/CAYAAADIE9lyAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAFXxJREFUeNrs3b9vJOd9wOERoVY61rEOt+kEEQGZIoFVcf+Do4EgXXCrwEiRABFlpEshKpWqiNe4Mqy9pEpsQLzSDgwti+CEqDCvYODOS5yU+qj7A5h5jy/lPYt34pI7M++P5wGIlQHDImfX/PD7zjszr52dnTUAUJM1hwAA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QNA/ABA/ABA/ABA/ABA/AAgba87BNCN26ONrfZl/Qb/E/Mn8+O5Iwmr99rZ2ZmjAK+O2Kh9GcX/OI6vIWpbC/+18M+3evh2TkIUF/7zLL4+bb+O4j8ftdF86p0D8YNXxe0iZBeR21qI262Mf7SLUF58hTg+bcM4864jfuJHfRPceCF025UejtMYw6OFMJoYET8oIHTjhdjlPsX1OS1eRHEmiIgfpBu6iyXKsdB1GsSLGM4cEsQPhondeOFr01Hp3WGM4UwMET/oLng7YpdFDA/aGB45HIgfXC92o/blInh3HZGshM00BwsxdM4Q8YNXBG8cgxe+7jgixXjcfk1jCOcOB+KH4J0vZ1582aRSvpM4FU4tjyJ+CB5CCOJHgcELlx9M4pfgcVkI9xtLo4gfBQRvFKe73cY5PK4u7BydNjbLIH5kFr2dOOHZpclNXOwa3bcsiviR8pQ3iV+mPFYt7BjdNw0ifqQSvXFzvqxpyqOvaXAap8G5w4H40Xf0woS3Z8pjQA9jBGcOBeJHl8Fbj1Ne+LJjk1SEnaJ7bQSnDgXixyqjN4pTnuvySD2C0zgNOi+I+HHj6N1zNMhIOC+4L4KIH6KHCIL4IXqIIOKH6IkeIoj4UUn01mP03nc0qCyCYXfovkMhftQXPZcsUDuXSIgfFYVv0rg4HRYdxgjOHArxo7zojWP0th0NuNSDGMG5QyF+5B+9sMQZzm3YzALf7/mmmDaAew6F+JFv+HbjtOe8HiwnnA+cWAoVP/KK3jhOe5uOBtxIuHn2rqVQ8SPt6Ll0AVbPpRHiR8LhCzednjaWOKErh3EK9FR58SORaS9Ez8NkoR8f2RAjfpj2oEaPm/MNMaZA8cO0B6ZAxA/THtQyBe7YESp+dDfthb8w7eSE9NgRKn50EL6tOO25bg/SFq4LnHhkUvrWHILkwxfu0vJb4YMshPPw83ijCUx+XCN6NrVA3myGET+WDF9Y5jxoPHYIchcujN+xDJoey57phW/SnC9zCh/kLzxCbB7/oMXkxyXR8+ghKNsHdoOKHy+Gb9ScL3Pa1AJlCw/M3bUMKn7Cd74rLITPRetQh3BR/FgAh+Wc37Dhm7QvnwsfVCWs8DgPKH7Vhm/avnzqSECVwh+8v41/ADMAy579Ry9sbAnLnNuOBtC6/2R+vOswiF/J4Rs1NrYA3/WgDaApUPyKDF9Y3581zu8Bl7MRpkfO+fUTvrHwAd8jrAjN4goR4pd9+CaNHZ3A1QN4ZCeo+JUQPjs6gWXcihOgAIpfluHbFz7ghgGcOBTdsOGlm/BNG/foBFbjvSfz46nDYPITPqAmn5oAxU/4AAFE/IQPEEDET/gAAUT8hA8QQMRP+AABFD+EDxBA8UP4AAEUP4QPEMCSuMPLcuELHzC3LANSc9qcPw7pyKEw+QkfUAs3wzb5dRK+nfblM0cCyGAC3GonwLlDYfK7afjCX1JTRwLIZAI8aH9vrTsU4nfT8M0aD6IF8rEZf28hftcK33qc+IQPyC6AcWc64re0WfwLCiBH9+JDtRG/K099U+EDCvC+awAvZ7fnd8O327584kgABflz1wCK36vC55IGoEQugfgjlj3/ED6XNAClcgmE+F0aPjs7gdKFfQw2wIjfC6aNDS5A+e7FfQ3Vq/6cnw0uQIWq3wBTdfza8I3bl8/9/wCoTNgAM2oD+LTWA1Dtsmc8z3fg/wNAhW7V/vuv5nN+B40NLkC9ttshYE/86pr6whu+7bMPVO7DePqnOtWd83OeD+AFVZ7/q2ryW7ieD4Bzt2r8vVjbsmd4g+/4rAO84G5t1/9Vs+wZ72z+qc84wKWquv9nFZNfG75R47Y+AK9S1eUPtSx7ThuXNQB8n81aLn8oftnT7csAllb87c+KnvzicueezzHAUqal/4BrFbyBljsBllP88mexy56WOwFurNjlzyInP8udACtR7C75tYLfMMudADezXerF78Ute7Zv1E778pnPLMBKFHnxe1GTX7x3p4vZAVbnVom/V0tb9gzjuXt3AqzW3dIefVTMsmfc5PJ7n1GATpw8mR+PTH7pmfpsAnTmTknX/hUx+dnkAtCLYja/lDL52eQC0L2w+aWI6S/7+MUx3CYXgH7cK2HzS9bxi5c27PosAvQq++kv98nPnVwA+hfu/DLJ+QfIdsOLSxsABpX1pQ85T35Tnz2AwdzJ+b6fWU5+8WTr5z57AIMKlz6M2gnwqcmvH3s+cwCDC3suspz+spv8TH0Apr8aJz9TH4Dpr57Jz9QHYPqrcfIz9QGY/uqZ/Ex9AKa/Gic/Ux+A6a+eyc/UB2D6q3HyM/UBmP7qiV879W21L9s+UwBZmIjfanhkEUA+7uTwxIekz/l5cgNAlpJ/4kPqk9/EZwggy+lvLH7Xm/o8pR0gX3vidz07jae0A+RqO566Er+S/moA4Hslu3qX5IYXF7UDFCHZi95TnfwmPjMA2QunrnZS/MaSi1/c6HLPZwagCEkufaY4+Zn6AMqxGe/UJX45/pUAQDm/15OKX9zocsfnBKAoO/GUlvi9xMRnBKA4yW18SSZ+8a+CHZ8RgCIlNdykNPm5owtAuZK640tq8QOgXMn8nk8ifvGvgbs+FwBFS2bXZyqTn6kPoHx3UrnmL5X4TXwmAKqQxO/7weMXlzw3fR4AqpDESt/rDgQ5evPNN5q//qsfNe+++xfP/5lXOz7+XfOzn/9789VXXzsYDO350ueT+fHRkN/E4I80ag/CkcmPZWy883bzi/+YNm+8IXrL+vHf/WPzq1//xoFgaPfb+A26+WXQ+MUlz9/7HLDMxPfFf/+X8F3Ts2fPmnf+7IcOBEM7aeM3GvIbGPqcnyVPlhKWOoXv+sKxC5MzDGzwXZ9Dx2/sM8Aywjk+bj49QwIG/f0/WPzivTxd2I5f3FCnSa2TnyVPgHptDvmYoyHjN/beA1RtsCHI5AdAdUPQIPGLu3w8vgjA5FfV5Df2ngNU79ZQlzwMFT9LngAM1oOh4rft/QagGWglsPf4tSPu2HsNwJDD0BCTn/gBMOhQJH4ADK2K+DnfB0A98XO+D4AUhqK+Jz/xA2Dw4Uj8AEhBrxe7r5X8wwGQjTInv3akHTXu5wlAZZPf2HsLwEvc6fP5fn3Gz5InAEkMSeIHQCp660Sf8XNxOwD1xC9udgGAqiY/S54AfJ/eNr2IHwDVTX/iB4D4dWTk/QQglV70Fb9N7ycA1Ux+t0cbljwBqCt+jSVPAK6ul3tA9xE/kx8AV9bHs/1MfgCkpvNr/cQPgNR0vmIofgCkpvNu9BG/O95HAKqJnxtaA1Dj5Cd+ACyr8xXDruO37j0EYFldP92h6/i5xg+A5Pqx5viSk2++eeYgAMnHb+wQs0qPHn3pIIDJz+RHXf7zl581z56Z/qACWZ/zg5UKy54ffvSxAAI38nrH//vbDjGr9otfHjSPvviy+fHf/k2zsfF289ZbP2je+sGfODBQlnHO8YNOfPXV183ev3w8yL/7J7v/0Hyw+/feBMiYZU8AxG9VPMEdgBsY5Tr5ubsLANfV6S3OLHsCUB3xA0D8AED8rm/s8AJwXV1unDT5AZCqzjZOih8A1RE/AMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAPqO35HDC8B1PZkfz3KM31NvHQC1TX4AIH4AIH4AcLnTLOPX5YlKAIrX6aZJkx8A1RE/AMRvxR47xABcQ9bLnq71AyC5flj2BKA6XcfPLc4AuI5ZzvGz7AlAdZPf3CEGILV+iB8AyXkyP846fpY9AVjWadf/gk7j15bbhhcAltV5O/q41OHU+wjAEjpfNewjfqY/AKqb/Jz3A2AZc5MfAOKXYfzm3kcAUhqaxA+ApDyZH+e/4cUT3QFYwmEf/5K+nupw4v0E4ArmJcVv7v0EoLb4zbyfAKTSC5MfACY/8QNgIKddP82h1/jZ8QnAFfR2U5S1Hn+ox95XAGqLn9ucASB+ACB+ANTqtM8HoPcWP5teAEhlQFrr+Yc79P4CcIleB6S+42fpE4Dq4jfz/gIw9HAkfgAM7XEfz/AbLH7xh3OxOwCDDkZrNfyQAIif+AEgfuIHwEB6P983SPyc9wNg6IForaYfFgDxEz8ABvVkfnxQTfyG+mEBSMpgt7xcG/CHfuh9B6jaYIPQkPGbed8BxK+2+Fn6BKjXyZP58by6+MUf2iUPAKa+qia/YOb9BxC/2uI39f4DVOf0yfx40OFn0Pi1P3x4ftOJzwGAqa+myS+JgwCA+PVt6nMAUI3TFG50Mnj8LH0CmPpqnPySORgAiF+fpj4PAMU7TeXezknEz9InQBWSGXTWEjoo+z4XAOJXW/yc9wMo10lc5RO/RfFenx5zBFCmpFb31hI7OKY/knf8v79zECDz3+9Jxa+d/qbty6nPCCn75ptvMv/+n3kT6dvDIR9flMPkZ/ojeY+++LJ59izPgHz19f+ZXBnCNLVvKMX42fVJ8v71k59m+X3vffSxN4++naRybV/S8Yu7gQ59XkjZz37+b80n+z/NZgIM3+dP/umfm1/9+jfePKqf+oLXzs7Okvumbo82Ju3Lpz4zpO7NN99o3v3hXzYb77yd7PcYljkfffE/zvUxlD9N7XxfsvGLAXzavtzyuQHIVtjospPiN7aW8EFz7g8gb8n+Hk85flOfG4BshY0uM/FbUlwjfuDzA5ClvZS/ubXED57pDyA/p/GmJeJ3zekvjMwuewDIS/J7NtYcRABWOfWJ32qmv3BnAA+6BcjDQft7+6n4rcaezxOA39dVxS+eODX9AaTtQYp3c8l58jP9Afg9XV/8TH8Apr4aJz/TH4Dfz/XFz/QHYOqrcfIz/QH4vVxf/Ex/AKa+Gic/0x+A38f1xc/0B2Dqq3HyCyY+dwCDCffw3M31m882fp74ADCo/Rzu4Vni5Bfs+fwB9C6cdsr6iTtZxy9Of572DtDz4JHz1FfC5Hcx/Z36LAL04nHqT2mvIn5xp5EH3gL0Y7eEH+K1s7OzIt6N26ONEME7PpcAnQmXNkxK+EHWCnpTdn0uATqT9aUNxcav/WvkoHHpA0BXst/kUurkF0wam18AVi1scilqb0VR8bP5BaATxZ1WKmbDy6Lbo42j9mXT5xXgxu63g0Vx8Vsr9M2y+QXg5sJppL0Sf7Ai4xfv/HLf5xbgRiYlbXKpYfJr4l8rHnsEcD0P4y76IhUbv/jXysTnF2Bpp6X//ix58rP8CXA9xS53VhG/aK+x/AlwVUUvd1YTP8ufAFdW/HJnTZOf5U+Aqyl+ufNCkRe5v4yL3wFeqsiL2aue/Bb/qvH5BviOx02hF7OLX/N8+TNMfh/4nAO8OBjUstxZ6+TXxDuTP/RZB3jugzgYVGWt0jd70rj8AeBhaY8qEr9XT39hvN/xuQcqdtJUvA+i1snP+T+gdju1necTvz8E0Pk/oEZVnucTvxeFsf+xwwBU4kGt5/nE78Xp7+L2Z6f+PwEULvyh72Hf4vdtAI8aF8ADZQt/4Fd9nk/8Lg9guIv5R44EUKgQvrnDIH6XBXCvfXngSACFeS/e4B/xe6mwHm4DDFCKsMFl6jC8qKqnOlzV7dHGevsSlgduORpAxg7b8I0dBpPflcQTwuEDYwcokKuwguVOVuK3dADtAAVyZWen+N0ogGEH6HuOBJBZ+MZ2dorfTQM4bV/uOxJAJia137pM/FYXwLAD1CUQQOreiytWiN/KAjgRQCDx8E0dBvHrgmsAgRS5lk/8Op3+Li6BEEAgpfBNHAbxE0BA+BA/AQSED/ETQED4xA8BBIRP/BBAQPjEDwEEhE/8EEBA+MQPAQSET/wEUAAB4RO/KgP40NEArukD4evOa2dnZ45Ch26PNqbtyz1HAliCm1Sb/LKfAsNfbp4HCFzFqfCZ/EqbAEMEP3UkgFeEb+xBtCa/0ibA8Jfcj+IHHGDRY+Ez+ZU+AW61L7P265ajASyE76lDIX6lB3A9BnDT0YCquZRhIJY9B7BwKcQDRwOq5VIGk1/VU+Be+/KhIwHVCOf9J234DhwK8as9gDvty7RxHhBK9ziGz8aWgVn2TED8C3DcuCUalCzc8cmOTpMfl0yA63ECvOtoQFE+aqO35zCIH6+O4G778okjAdkL5/d22vDNHArx42oBDNcDhuXQO44GZOkwhs/1e+LHkgG0DAp5sswpfqwggpZBIQ8nzfluzplDIX6sJoBbcQp0VxhI08MYPsuc4kcHEdxvX953JCAZYVPLrscQiR/dB3Acp0CbYWBYh3HamzsU4kc/AQybYfZMgTDYtLfXRm/foRA/TIFg2kP8MAWCaQ/xwxQIeQo7OXdNe+JH2hEMU2C4NtBTIuBmTmL0PH5I/MgkgKM4BW47GnAt95vzZU7X7YkfGUYwPCswnKOwFApXcxinPY8eEj8yD2DYELPbWAqFV7HEKX4UGsFRc74r9J6jAd8KuzjD6si+JU7xo+wIjmMEnQ+kdg/itCd64kdlEZw2zgdSHxeqi5/4ieDGJE6CIkgN0dvzyCHEDxFE9BA/EEFED/FDBEUQ0UP8EEEQPcSPeiIY7hYTLpR3iQSpCZcs7LsrC+JHlxEcty9hGnSxPEMKF6dPY/TmDgfiR18RHMUIum0afQq3Idtrvw5cnI74MXQIJzGElkTpSljanDqfh/iRYgS34iS4YxpkRVPeNEZv7nAgfpgGKVU4l3dgykP8yD2CozgJhonQ5RK8zGGc8pzLQ/woLoRbcRrcEUJajxeCN3c4ED+EEMED8aOSEI7br01HpDhhSfNA8BA/eHkIR3EaDCG864hk6WLTyqxxDg/xg2vF8CKEpsL0p7uL2LnNGOIHKwzh+sJUuCWGg8fuKMZu5nAgftBvDMcLMXRNYTdOY+hC5GZih/hBekG8COGW6fDGU93zL8uYiB/kG8RR/LqIo9uvnd8+7Gjhay50iB/UFcUQxPUCwxgCN1/4EjnET/zgpWFcjOH6wj83MZYpXJgfLhi/uIxgFl+/DZ1r6kD8oOsJctFiKG9i9kf/+amJDcQPAJa25hAAIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AiB8AiB8AiB8AiB8AiB8ApO3/BRgAt/sE3Me4zZAAAAAASUVORK5CYII=\",\n    \"custom_accent_color\": \"#7AC18E\",\n    \"custom_color\": \"#C31A0F\",\n    \"custom_label_text_for_login_screen\": \"Employee ID\",\n    \"custom_masking_color\": \"#EEFFEE\",\n    \"custom_masking_opacity\": 80,\n    \"custom_support_enabled\": true,\n    \"enable_custom_label_for_login_screen\": true,\n    \"enabled\": true,\n    \"hide_onelogin_footer\": true,\n    \"login_instruction\": \"Please log in!\",\n    \"login_instruction_title\": \"Welcome!\",\n    \"mfa_enrollment_message\": \"You need to enroll in MFA to continue to your portal\",\n    \"name\": \"Sample Brand\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/branding/brands?=tempor consectetur sed dolore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"branding",
										"brands"
									],
									"query": [
										{
											"key": "",
											"value": "tempor consectetur sed dolore"
										}
									]
								},
								"description": "Create a new Account Brand"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"background\": \"iVBORw0KGgoAAAANSUhEUgAAAb8AAAG/CAYAAADIE9lyAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAFXxJREFUeNrs3b9vJOd9wOERoVY61rEOt+kEEQGZIoFVcf+Do4EgXXCrwEiRABFlpEshKpWqiNe4Mqy9pEpsQLzSDgwti+CEqDCvYODOS5yU+qj7A5h5jy/lPYt34pI7M++P5wGIlQHDImfX/PD7zjszr52dnTUAUJM1hwAA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QNA/ABA/ABA/ABA/ABA/AAgba87BNCN26ONrfZl/Qb/E/Mn8+O5Iwmr99rZ2ZmjAK+O2Kh9GcX/OI6vIWpbC/+18M+3evh2TkIUF/7zLL4+bb+O4j8ftdF86p0D8YNXxe0iZBeR21qI262Mf7SLUF58hTg+bcM4864jfuJHfRPceCF025UejtMYw6OFMJoYET8oIHTjhdjlPsX1OS1eRHEmiIgfpBu6iyXKsdB1GsSLGM4cEsQPhondeOFr01Hp3WGM4UwMET/oLng7YpdFDA/aGB45HIgfXC92o/blInh3HZGshM00BwsxdM4Q8YNXBG8cgxe+7jgixXjcfk1jCOcOB+KH4J0vZ1582aRSvpM4FU4tjyJ+CB5CCOJHgcELlx9M4pfgcVkI9xtLo4gfBQRvFKe73cY5PK4u7BydNjbLIH5kFr2dOOHZpclNXOwa3bcsiviR8pQ3iV+mPFYt7BjdNw0ifqQSvXFzvqxpyqOvaXAap8G5w4H40Xf0woS3Z8pjQA9jBGcOBeJHl8Fbj1Ne+LJjk1SEnaJ7bQSnDgXixyqjN4pTnuvySD2C0zgNOi+I+HHj6N1zNMhIOC+4L4KIH6KHCIL4IXqIIOKH6IkeIoj4UUn01mP03nc0qCyCYXfovkMhftQXPZcsUDuXSIgfFYVv0rg4HRYdxgjOHArxo7zojWP0th0NuNSDGMG5QyF+5B+9sMQZzm3YzALf7/mmmDaAew6F+JFv+HbjtOe8HiwnnA+cWAoVP/KK3jhOe5uOBtxIuHn2rqVQ8SPt6Ll0AVbPpRHiR8LhCzednjaWOKErh3EK9FR58SORaS9Ez8NkoR8f2RAjfpj2oEaPm/MNMaZA8cO0B6ZAxA/THtQyBe7YESp+dDfthb8w7eSE9NgRKn50EL6tOO25bg/SFq4LnHhkUvrWHILkwxfu0vJb4YMshPPw83ijCUx+XCN6NrVA3myGET+WDF9Y5jxoPHYIchcujN+xDJoey57phW/SnC9zCh/kLzxCbB7/oMXkxyXR8+ghKNsHdoOKHy+Gb9ScL3Pa1AJlCw/M3bUMKn7Cd74rLITPRetQh3BR/FgAh+Wc37Dhm7QvnwsfVCWs8DgPKH7Vhm/avnzqSECVwh+8v41/ADMAy579Ry9sbAnLnNuOBtC6/2R+vOswiF/J4Rs1NrYA3/WgDaApUPyKDF9Y3581zu8Bl7MRpkfO+fUTvrHwAd8jrAjN4goR4pd9+CaNHZ3A1QN4ZCeo+JUQPjs6gWXcihOgAIpfluHbFz7ghgGcOBTdsOGlm/BNG/foBFbjvSfz46nDYPITPqAmn5oAxU/4AAFE/IQPEEDET/gAAUT8hA8QQMRP+AABFD+EDxBA8UP4AAEUP4QPEMCSuMPLcuELHzC3LANSc9qcPw7pyKEw+QkfUAs3wzb5dRK+nfblM0cCyGAC3GonwLlDYfK7afjCX1JTRwLIZAI8aH9vrTsU4nfT8M0aD6IF8rEZf28hftcK33qc+IQPyC6AcWc64re0WfwLCiBH9+JDtRG/K099U+EDCvC+awAvZ7fnd8O327584kgABflz1wCK36vC55IGoEQugfgjlj3/ED6XNAClcgmE+F0aPjs7gdKFfQw2wIjfC6aNDS5A+e7FfQ3Vq/6cnw0uQIWq3wBTdfza8I3bl8/9/wCoTNgAM2oD+LTWA1Dtsmc8z3fg/wNAhW7V/vuv5nN+B40NLkC9ttshYE/86pr6whu+7bMPVO7DePqnOtWd83OeD+AFVZ7/q2ryW7ieD4Bzt2r8vVjbsmd4g+/4rAO84G5t1/9Vs+wZ72z+qc84wKWquv9nFZNfG75R47Y+AK9S1eUPtSx7ThuXNQB8n81aLn8oftnT7csAllb87c+KnvzicueezzHAUqal/4BrFbyBljsBllP88mexy56WOwFurNjlzyInP8udACtR7C75tYLfMMudADezXerF78Ute7Zv1E778pnPLMBKFHnxe1GTX7x3p4vZAVbnVom/V0tb9gzjuXt3AqzW3dIefVTMsmfc5PJ7n1GATpw8mR+PTH7pmfpsAnTmTknX/hUx+dnkAtCLYja/lDL52eQC0L2w+aWI6S/7+MUx3CYXgH7cK2HzS9bxi5c27PosAvQq++kv98nPnVwA+hfu/DLJ+QfIdsOLSxsABpX1pQ85T35Tnz2AwdzJ+b6fWU5+8WTr5z57AIMKlz6M2gnwqcmvH3s+cwCDC3suspz+spv8TH0Apr8aJz9TH4Dpr57Jz9QHYPqrcfIz9QGY/uqZ/Ex9AKa/Gic/Ux+A6a+eyc/UB2D6q3HyM/UBmP7qiV879W21L9s+UwBZmIjfanhkEUA+7uTwxIekz/l5cgNAlpJ/4kPqk9/EZwggy+lvLH7Xm/o8pR0gX3vidz07jae0A+RqO566Er+S/moA4Hslu3qX5IYXF7UDFCHZi95TnfwmPjMA2QunrnZS/MaSi1/c6HLPZwagCEkufaY4+Zn6AMqxGe/UJX45/pUAQDm/15OKX9zocsfnBKAoO/GUlvi9xMRnBKA4yW18SSZ+8a+CHZ8RgCIlNdykNPm5owtAuZK640tq8QOgXMn8nk8ifvGvgbs+FwBFS2bXZyqTn6kPoHx3UrnmL5X4TXwmAKqQxO/7weMXlzw3fR4AqpDESt/rDgQ5evPNN5q//qsfNe+++xfP/5lXOz7+XfOzn/9789VXXzsYDO350ueT+fHRkN/E4I80ag/CkcmPZWy883bzi/+YNm+8IXrL+vHf/WPzq1//xoFgaPfb+A26+WXQ+MUlz9/7HLDMxPfFf/+X8F3Ts2fPmnf+7IcOBEM7aeM3GvIbGPqcnyVPlhKWOoXv+sKxC5MzDGzwXZ9Dx2/sM8Aywjk+bj49QwIG/f0/WPzivTxd2I5f3FCnSa2TnyVPgHptDvmYoyHjN/beA1RtsCHI5AdAdUPQIPGLu3w8vgjA5FfV5Df2ngNU79ZQlzwMFT9LngAM1oOh4rft/QagGWglsPf4tSPu2HsNwJDD0BCTn/gBMOhQJH4ADK2K+DnfB0A98XO+D4AUhqK+Jz/xA2Dw4Uj8AEhBrxe7r5X8wwGQjTInv3akHTXu5wlAZZPf2HsLwEvc6fP5fn3Gz5InAEkMSeIHQCp660Sf8XNxOwD1xC9udgGAqiY/S54AfJ/eNr2IHwDVTX/iB4D4dWTk/QQglV70Fb9N7ycA1Ux+t0cbljwBqCt+jSVPAK6ul3tA9xE/kx8AV9bHs/1MfgCkpvNr/cQPgNR0vmIofgCkpvNu9BG/O95HAKqJnxtaA1Dj5Cd+ACyr8xXDruO37j0EYFldP92h6/i5xg+A5Pqx5viSk2++eeYgAMnHb+wQs0qPHn3pIIDJz+RHXf7zl581z56Z/qACWZ/zg5UKy54ffvSxAAI38nrH//vbDjGr9otfHjSPvviy+fHf/k2zsfF289ZbP2je+sGfODBQlnHO8YNOfPXV183ev3w8yL/7J7v/0Hyw+/feBMiYZU8AxG9VPMEdgBsY5Tr5ubsLANfV6S3OLHsCUB3xA0D8AED8rm/s8AJwXV1unDT5AZCqzjZOih8A1RE/AMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAPqO35HDC8B1PZkfz3KM31NvHQC1TX4AIH4AIH4AcLnTLOPX5YlKAIrX6aZJkx8A1RE/AMRvxR47xABcQ9bLnq71AyC5flj2BKA6XcfPLc4AuI5ZzvGz7AlAdZPf3CEGILV+iB8AyXkyP846fpY9AVjWadf/gk7j15bbhhcAltV5O/q41OHU+wjAEjpfNewjfqY/AKqb/Jz3A2AZc5MfAOKXYfzm3kcAUhqaxA+ApDyZH+e/4cUT3QFYwmEf/5K+nupw4v0E4ArmJcVv7v0EoLb4zbyfAKTSC5MfACY/8QNgIKddP82h1/jZ8QnAFfR2U5S1Hn+ox95XAGqLn9ucASB+ACB+ANTqtM8HoPcWP5teAEhlQFrr+Yc79P4CcIleB6S+42fpE4Dq4jfz/gIw9HAkfgAM7XEfz/AbLH7xh3OxOwCDDkZrNfyQAIif+AEgfuIHwEB6P983SPyc9wNg6IForaYfFgDxEz8ABvVkfnxQTfyG+mEBSMpgt7xcG/CHfuh9B6jaYIPQkPGbed8BxK+2+Fn6BKjXyZP58by6+MUf2iUPAKa+qia/YOb9BxC/2uI39f4DVOf0yfx40OFn0Pi1P3x4ftOJzwGAqa+myS+JgwCA+PVt6nMAUI3TFG50Mnj8LH0CmPpqnPySORgAiF+fpj4PAMU7TeXezknEz9InQBWSGXTWEjoo+z4XAOJXW/yc9wMo10lc5RO/RfFenx5zBFCmpFb31hI7OKY/knf8v79zECDz3+9Jxa+d/qbty6nPCCn75ptvMv/+n3kT6dvDIR9flMPkZ/ojeY+++LJ59izPgHz19f+ZXBnCNLVvKMX42fVJ8v71k59m+X3vffSxN4++naRybV/S8Yu7gQ59XkjZz37+b80n+z/NZgIM3+dP/umfm1/9+jfePKqf+oLXzs7Okvumbo82Ju3Lpz4zpO7NN99o3v3hXzYb77yd7PcYljkfffE/zvUxlD9N7XxfsvGLAXzavtzyuQHIVtjospPiN7aW8EFz7g8gb8n+Hk85flOfG4BshY0uM/FbUlwjfuDzA5ClvZS/ubXED57pDyA/p/GmJeJ3zekvjMwuewDIS/J7NtYcRABWOfWJ32qmv3BnAA+6BcjDQft7+6n4rcaezxOA39dVxS+eODX9AaTtQYp3c8l58jP9Afg9XV/8TH8Apr4aJz/TH4Dfz/XFz/QHYOqrcfIz/QH4vVxf/Ex/AKa+Gic/0x+A38f1xc/0B2Dqq3HyCyY+dwCDCffw3M31m882fp74ADCo/Rzu4Vni5Bfs+fwB9C6cdsr6iTtZxy9Of572DtDz4JHz1FfC5Hcx/Z36LAL04nHqT2mvIn5xp5EH3gL0Y7eEH+K1s7OzIt6N26ONEME7PpcAnQmXNkxK+EHWCnpTdn0uATqT9aUNxcav/WvkoHHpA0BXst/kUurkF0wam18AVi1scilqb0VR8bP5BaATxZ1WKmbDy6Lbo42j9mXT5xXgxu63g0Vx8Vsr9M2y+QXg5sJppL0Sf7Ai4xfv/HLf5xbgRiYlbXKpYfJr4l8rHnsEcD0P4y76IhUbv/jXysTnF2Bpp6X//ix58rP8CXA9xS53VhG/aK+x/AlwVUUvd1YTP8ufAFdW/HJnTZOf5U+Aqyl+ufNCkRe5v4yL3wFeqsiL2aue/Bb/qvH5BviOx02hF7OLX/N8+TNMfh/4nAO8OBjUstxZ6+TXxDuTP/RZB3jugzgYVGWt0jd70rj8AeBhaY8qEr9XT39hvN/xuQcqdtJUvA+i1snP+T+gdju1necTvz8E0Pk/oEZVnucTvxeFsf+xwwBU4kGt5/nE78Xp7+L2Z6f+PwEULvyh72Hf4vdtAI8aF8ADZQt/4Fd9nk/8Lg9guIv5R44EUKgQvrnDIH6XBXCvfXngSACFeS/e4B/xe6mwHm4DDFCKsMFl6jC8qKqnOlzV7dHGevsSlgduORpAxg7b8I0dBpPflcQTwuEDYwcokKuwguVOVuK3dADtAAVyZWen+N0ogGEH6HuOBJBZ+MZ2dorfTQM4bV/uOxJAJia137pM/FYXwLAD1CUQQOreiytWiN/KAjgRQCDx8E0dBvHrgmsAgRS5lk/8Op3+Li6BEEAgpfBNHAbxE0BA+BA/AQSED/ETQED4xA8BBIRP/BBAQPjEDwEEhE/8EEBA+MQPAQSET/wEUAAB4RO/KgP40NEArukD4evOa2dnZ45Ch26PNqbtyz1HAliCm1Sb/LKfAsNfbp4HCFzFqfCZ/EqbAEMEP3UkgFeEb+xBtCa/0ibA8Jfcj+IHHGDRY+Ez+ZU+AW61L7P265ajASyE76lDIX6lB3A9BnDT0YCquZRhIJY9B7BwKcQDRwOq5VIGk1/VU+Be+/KhIwHVCOf9J234DhwK8as9gDvty7RxHhBK9ziGz8aWgVn2TED8C3DcuCUalCzc8cmOTpMfl0yA63ECvOtoQFE+aqO35zCIH6+O4G778okjAdkL5/d22vDNHArx42oBDNcDhuXQO44GZOkwhs/1e+LHkgG0DAp5sswpfqwggpZBIQ8nzfluzplDIX6sJoBbcQp0VxhI08MYPsuc4kcHEdxvX953JCAZYVPLrscQiR/dB3Acp0CbYWBYh3HamzsU4kc/AQybYfZMgTDYtLfXRm/foRA/TIFg2kP8MAWCaQ/xwxQIeQo7OXdNe+JH2hEMU2C4NtBTIuBmTmL0PH5I/MgkgKM4BW47GnAt95vzZU7X7YkfGUYwPCswnKOwFApXcxinPY8eEj8yD2DYELPbWAqFV7HEKX4UGsFRc74r9J6jAd8KuzjD6si+JU7xo+wIjmMEnQ+kdg/itCd64kdlEZw2zgdSHxeqi5/4ieDGJE6CIkgN0dvzyCHEDxFE9BA/EEFED/FDBEUQ0UP8EEEQPcSPeiIY7hYTLpR3iQSpCZcs7LsrC+JHlxEcty9hGnSxPEMKF6dPY/TmDgfiR18RHMUIum0afQq3Idtrvw5cnI74MXQIJzGElkTpSljanDqfh/iRYgS34iS4YxpkRVPeNEZv7nAgfpgGKVU4l3dgykP8yD2CozgJhonQ5RK8zGGc8pzLQ/woLoRbcRrcEUJajxeCN3c4ED+EEMED8aOSEI7br01HpDhhSfNA8BA/eHkIR3EaDCG864hk6WLTyqxxDg/xg2vF8CKEpsL0p7uL2LnNGOIHKwzh+sJUuCWGg8fuKMZu5nAgftBvDMcLMXRNYTdOY+hC5GZih/hBekG8COGW6fDGU93zL8uYiB/kG8RR/LqIo9uvnd8+7Gjhay50iB/UFcUQxPUCwxgCN1/4EjnET/zgpWFcjOH6wj83MZYpXJgfLhi/uIxgFl+/DZ1r6kD8oOsJctFiKG9i9kf/+amJDcQPAJa25hAAIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AiB8AiB8AiB8AiB8AiB8ApO3/BRgAt/sE3Me4zZAAAAAASUVORK5CYII=\",\n    \"custom_accent_color\": \"#7AC18E\",\n    \"custom_color\": \"#C31A0F\",\n    \"custom_label_text_for_login_screen\": \"Employee ID\",\n    \"custom_masking_color\": \"#EEFFEE\",\n    \"custom_masking_opacity\": 80,\n    \"custom_support_enabled\": true,\n    \"enable_custom_label_for_login_screen\": true,\n    \"enabled\": true,\n    \"hide_onelogin_footer\": true,\n    \"login_instruction\": \"Please log in!\",\n    \"login_instruction_title\": \"Welcome!\",\n    \"mfa_enrollment_message\": \"You need to enroll in MFA to continue to your portal\",\n    \"name\": \"Sample Brand\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands?=tempor consectetur sed dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands"
											],
											"query": [
												{
													"key": "",
													"value": "tempor consectetur sed dolore"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "email settings",
					"item": [
						{
							"name": "Get Email Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/branding/email_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"branding",
										"email_settings"
									]
								},
								"description": "Get Email Settings"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Custom Email Settings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": \"smtp.sendgrid.net\",\n    \"domain\": \"example.com\",\n    \"from\": \"email@example.com\",\n    \"password\": \"password\",\n    \"port\": 587,\n    \"use_tls\": true,\n    \"user_name\": \"user-name\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/branding/email_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"branding",
										"email_settings"
									]
								},
								"description": "Create Custom Email Settings"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"smtp.sendgrid.net\",\n    \"domain\": \"example.com\",\n    \"from\": \"email@example.com\",\n    \"password\": \"password\",\n    \"port\": 587,\n    \"use_tls\": true,\n    \"user_name\": \"user-name\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Custom Email Settings",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/branding/email_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"branding",
										"email_settings"
									]
								},
								"description": "Delete Custom Email Settings"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Test Email Settings Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/branding/email_settings/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"branding",
										"email_settings",
										"test"
									]
								},
								"description": "Test Email Settings Configuration"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings",
												"test"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "api/1/events",
			"item": [
				{
					"name": "Create Events",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event_type_id\": 5,\n  \"account_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/1/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"events"
							]
						},
						"description": "Generate an Event"
					},
					"response": [
						{
							"name": "Event successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/1/events?sort=-id&event_type_ids[]=149&fields=event_type_id,created_at&event_type_ids[]=11",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"events"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"disabled": true
								},
								{
									"key": "directory_id",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "created_at",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "resolution",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "since",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "until",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "user_id",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "-id"
								},
								{
									"key": "since",
									"value": "2020-11-29T11%3A00%3A00Z",
									"disabled": true
								},
								{
									"key": "until",
									"value": "2021-11-30T12%3A00%3A00Z",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "-created_at",
									"disabled": true
								},
								{
									"key": "event_type_ids[]",
									"value": "149"
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "event_type_id,created_at"
								},
								{
									"key": "after_cursor",
									"value": "YWNjb3VudF9pZDo6OjEtLSMjaWQ6Ojox",
									"disabled": true
								},
								{
									"key": "event_type_ids[]",
									"value": "11"
								}
							]
						},
						"description": "Get Events"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/events?event_type_id=&client_id=&directory_id=&created_at=&id=&resolution=&since=&until=&user_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"events"
									],
									"query": [
										{
											"key": "event_type_id",
											"value": ""
										},
										{
											"key": "client_id",
											"value": ""
										},
										{
											"key": "directory_id",
											"value": ""
										},
										{
											"key": "created_at",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "resolution",
											"value": ""
										},
										{
											"key": "since",
											"value": ""
										},
										{
											"key": "until",
											"value": ""
										},
										{
											"key": "user_id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Event Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/1/events/types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"events",
								"types"
							]
						},
						"description": "Get Event Types"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/events/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"events",
										"types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Event by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/1/events/:event_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"events",
								":event_id"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Get Event by ID"
					},
					"response": [
						{
							"name": "Event ID could not be found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "api/ldap/v2",
			"item": [
				{
					"name": "Configuration endpoint: LDC Retrieves the Configuration settings for a given Directory Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set API Key and Directory ID\", function () {",
									"    var config = pm.response.json();",
									"    pm.environment.set(\"api_key\", config.api_key);",
									"    pm.environment.set(\"directory_id\", config.directory_id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/ldap/v2/configuration?token={{token}}&version=2.3.18",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ldap",
								"v2",
								"configuration"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}",
									"description": "(Required) Installation Token (LDC Token)"
								},
								{
									"key": "version",
									"value": "2.3.18",
									"description": "(Required) LDC Version"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ldap/v2/configuration?token=<string>&version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ldap",
										"v2",
										"configuration"
									],
									"query": [
										{
											"key": "token",
											"value": "<string>"
										},
										{
											"key": "version",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Directory Configuration: Details of the Directory settings",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ldap/v2/configuration?token=<string>&version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ldap",
										"v2",
										"configuration"
									],
									"query": [
										{
											"key": "token",
											"value": "<string>"
										},
										{
											"key": "version",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"schema type not provided\""
						},
						{
							"name": "Invalid Connector: DC Not Found by token",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ldap/v2/configuration?token=<string>&version=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ldap",
										"v2",
										"configuration"
									],
									"query": [
										{
											"key": "token",
											"value": "<string>"
										},
										{
											"key": "version",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Health endpoint: Uploads a Health Report for a single LDAP Directory Connector",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"healthReport\": {\n      \"machineName\":\"mbp13-jennifer.rubio-C02Y80K2JHD5\",\n      \"currentTime\":\"2020-06-12 02:23:47.445\",\n      \"profile\":\"Active\",\n      \"lastUserSync\":\"2020-06-12 02:23:47.230\",\n      \"currentlySyncing\":false,\n      \"userQueueCount\":110,\n      \"entries\":{\n         \"DirectoryHealth\":[\n             {\n                \"OUCount\":5,\n                \"canReachDC\":true,\n                \"name\":\"DC=onelogin,DC=test\",\n                \"SyncStatus\":{\n                \"potentialUserCount\":100,\n                \"success\":true,\n                \"lastSuccess\":\"2020-06-12 02:23:47.230\",\n                \"firstFailure\":\"\",\n                \"failureCount\":0\n                },\n                \"ErrorMessages\":[\n                ]\n            },\n            {\n                \"OUCount\":50,\n                \"canReachDC\":true,\n                \"name\":\"DC=onelogin,DC=test2\",\n                \"SyncStatus\":{\n                \"potentialUserCount\":10,\n                \"success\":true,\n                \"lastSuccess\":\"2020-06-12 02:23:47.230\",\n                \"firstFailure\":\"\",\n                \"failureCount\":2\n                },\n                \"ErrorMessages\":[\n                    \"lel\"\n                ]\n            }\n         ]\n      }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/ldap/v2/health?directory_id={{directory_id}}&api_key={{api_key}}&ldcVersion=2.3.18&directory_token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ldap",
								"v2",
								"health"
							],
							"query": [
								{
									"key": "directory_id",
									"value": "{{directory_id}}"
								},
								{
									"key": "api_key",
									"value": "{{api_key}}"
								},
								{
									"key": "ldcVersion",
									"value": "2.3.18"
								},
								{
									"key": "directory_token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Invalid Connector: DC Not Found by token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"healthReport\": \"<object>\",\n    \"api_key\": \"<string>\",\n    \"directory_id\": \"<integer>\",\n    \"required\": \"schema type not provided\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ldap/v2/health?directory_id=<integer>&api_key=<string>&ldcVersion=<string>&directory_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ldap",
										"v2",
										"health"
									],
									"query": [
										{
											"key": "directory_id",
											"value": "<integer>"
										},
										{
											"key": "api_key",
											"value": "<string>"
										},
										{
											"key": "ldcVersion",
											"value": "<string>"
										},
										{
											"key": "directory_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Health upload response: Details about a user by ID",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"healthReport\": \"<object>\",\n    \"api_key\": \"<string>\",\n    \"directory_id\": \"<integer>\",\n    \"required\": \"schema type not provided\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ldap/v2/health?directory_id=<integer>&api_key=<string>&ldcVersion=<string>&directory_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ldap",
										"v2",
										"health"
									],
									"query": [
										{
											"key": "directory_id",
											"value": "<integer>"
										},
										{
											"key": "api_key",
											"value": "<string>"
										},
										{
											"key": "ldcVersion",
											"value": "<string>"
										},
										{
											"key": "directory_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-next",
									"value": "<string>",
									"description": "A link to the next page of responses"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"healthReport\": \"<object>\",\n \"api_key\": \"<string>\",\n \"directory_id\": \"<integer>\",\n \"required\": \"schema type not provided\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"healthReport\": \"<object>\",\n    \"api_key\": \"<string>\",\n    \"directory_id\": \"<integer>\",\n    \"required\": \"schema type not provided\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ldap/v2/health?directory_id=<integer>&api_key=<string>&ldcVersion=<string>&directory_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ldap",
										"v2",
										"health"
									],
									"query": [
										{
											"key": "directory_id",
											"value": "<integer>"
										},
										{
											"key": "api_key",
											"value": "<string>"
										},
										{
											"key": "ldcVersion",
											"value": "<string>"
										},
										{
											"key": "directory_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "User Mappings",
			"item": [
				{
					"name": "User Mapping List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.UserMappingList, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_list\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping List Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.UserMappingList, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_mapping_list\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings?has_action=add_role:5688",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings"
							],
							"query": [
								{
									"key": "has_action",
									"value": "add_role:5688"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.IdObject, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_id\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"blargè\",\n    \"match\": \"any\",\n    \"position\": 1,\n    \"enabled\": true,\n    \"conditions\": [\n        {\n            \"source\": \"has_role\",\n            \"operator\": \"ri\",\n            \"value\": \"295354\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_email\",\n            \"value\": [\"è@è.com\"]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping DryRun",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.DryrunUserList, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_dryrun\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[42225,42256]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/{{mapping_id}}/dryrun",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"{{mapping_id}}",
								"dryrun"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Apply",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.JobIdObject, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_apply\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/apply",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"apply"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.IdObject, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_id\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"blarg\",\n    \"match\": \"any\",\n    \"position\": 1,\n    \"enabled\": true,\n    \"conditions\": [\n        {\n            \"source\": \"has_role\",\n            \"operator\": \"ri\",\n            \"value\": \"334173\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_status\",\n            \"value\": [\"0\"]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/{{mapping_id}}",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"{{mapping_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.IdList, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_sort\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[3866, 3868, 3869]"
						},
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/sort",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Empty body\", function () {",
									"  pm.response.to.not.have.body();",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/{{mapping_id}}",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"{{mapping_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.UserMapping, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping\", JSON.parse(responseBody));",
									"    postman.setEnvironmentVariable(\"last_user_mapping_id\", JSON.parse(responseBody).id);",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/{{mapping_id}}",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"{{mapping_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Condition List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_condition_list\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/conditions",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"conditions"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Condition Operator List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_condition_op_list\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/conditions/{{mapping_condition_value}}/operators",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"conditions",
								"{{mapping_condition_value}}",
								"operators"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Condition Value List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  if(responseBody.length == 0) {",
									"    pm.response.to.not.have.body();",
									"    postman.setEnvironmentVariable(\"last_user_mapping_condition_value_list\", null);",
									"  } else {",
									"    TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
									"        try {",
									"        postman.setEnvironmentVariable(\"last_user_mapping_condition_value_list\", JSON.parse(responseBody));",
									"    } catch(error){",
									"    }",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/conditions/{{mapping_condition_value}}/values",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"conditions",
								"{{mapping_condition_value}}",
								"values"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Action List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
									"  try {",
									"    postman.setEnvironmentVariable(\"last_user_mapping_action_list\", JSON.parse(responseBody));",
									"  } catch(error){",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/actions",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"actions"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Mapping Action Value List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"TestUtils = eval(environment.TestUtils)();",
									"",
									"pm.test(\"Response code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  if(responseBody.length == 0) {",
									"    pm.response.to.not.have.body();",
									"    postman.setEnvironmentVariable(\"last_user_mapping_action_value_list\", null);",
									"  } else {",
									"    TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
									"        try {",
									"        postman.setEnvironmentVariable(\"last_user_mapping_action_value_list\", JSON.parse(responseBody));",
									"    } catch(error){",
									"    }",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mappings-api-baseurl}}/api/2/mappings/actions/{{action_value}}/values",
							"host": [
								"{{mappings-api-baseurl}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"actions",
								"{{action_value}}",
								"values"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "App Rules",
			"item": [
				{
					"name": "Testcases",
					"item": [
						{
							"name": "Single value rule",
							"item": [
								{
									"name": "Create bad rule multiple values",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  TestUtils.expect_error_422(responseBody);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Bad single value rule multiple values\",\n  \"enabled\": true,\n  \"position\": 1,\n  \"match\": \"all\",\n  \"conditions\": [{\n    \"source\": \"email\",\n    \"operator\": \"=\",\n    \"value\": \"nelson.enzo@onelogin.com\"\n  }],\n  \"actions\": [{\n    \"action\": \"set_role\",\n    \"value\": [\"4\", \"2\"]\n  }]\n}"
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create bad rule no values",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  TestUtils.expect_error_422(responseBody);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Bad single value rule no values\",\n  \"enabled\": true,\n  \"position\": 1,\n  \"match\": \"all\",\n  \"conditions\": [{\n    \"source\": \"email\",\n    \"operator\": \"=\",\n    \"value\": \"nelson.enzo@onelogin.com\"\n  }],\n  \"actions\": [{\n    \"action\": \"set_role\",\n    \"value\": []\n  }]\n}"
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"UserMappingsUtils = eval(environment.UserMappingsUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(201);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  let rule = TestUtils.validate_schema(UserMappingsUtils.IdObject, responseBody);",
													"  postman.setEnvironmentVariable(\"rule_id\", rule.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{good_rule_obj}}"
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"UserMappingsUtils = eval(environment.UserMappingsUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  let rule = TestUtils.validate_schema(UserMappingsUtils.AppRule, responseBody);",
													"  let answer = JSON.parse(pm.variables.get(\"good_rule_obj\"));",
													"  answer.id = parseInt(pm.variables.get(\"rule_id\"));",
													"  TestUtils.expect_obj_equals(\"Content equality\", rule, answer);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(204);",
													"});",
													"",
													"pm.test(\"Empty body\", function () {",
													"  pm.response.to.not.have.body();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get non-existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  TestUtils.expect_error_404(responseBody);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete non-existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  TestUtils.expect_error_404(responseBody);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.setEnvironmentVariable(\"app_id\", 19320);",
											"",
											"postman.setEnvironmentVariable(\"good_rule_obj\", JSON.stringify({",
											"  \"name\": \"Good single value rule\",",
											"  \"enabled\": true,",
											"  \"position\": 1,",
											"  \"match\": \"all\",",
											"  \"conditions\": [{",
											"    \"source\": \"email\",",
											"    \"operator\": \"=\",",
											"    \"value\": \"nelson.enzo@onelogin.com\"",
											"  }],",
											"  \"actions\": [{",
											"    \"action\": \"set_role\",",
											"    \"value\": [\"4\"]",
											"  }]",
											"}));",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Multilist value rule",
							"item": [
								{
									"name": "Create bad rule no values",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  TestUtils.expect_error_422(responseBody);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Bad multilist value rule no values\",\n  \"enabled\": true,\n  \"position\": 1,\n  \"match\": \"all\",\n  \"conditions\": [{\n    \"source\": \"email\",\n    \"operator\": \"=\",\n    \"value\": \"nelson.enzo@onelogin.com\"\n  }],\n  \"actions\": [{\n    \"action\": \"set_groups\",\n    \"value\": []\n  }]\n}"
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"UserMappingsUtils = eval(environment.UserMappingsUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(201);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  let rule = TestUtils.validate_schema(UserMappingsUtils.IdObject, responseBody);",
													"  postman.setEnvironmentVariable(\"rule_id\", rule.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{good_rule_obj}}"
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"UserMappingsUtils = eval(environment.UserMappingsUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  let rule = TestUtils.validate_schema(UserMappingsUtils.AppRule, responseBody);",
													"  let answer = JSON.parse(pm.variables.get(\"good_rule_obj\"));",
													"  answer.id = parseInt(pm.variables.get(\"rule_id\"));",
													"  TestUtils.expect_obj_equals(\"Content equality\", rule, answer);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(204);",
													"});",
													"",
													"pm.test(\"Empty body\", function () {",
													"  pm.response.to.not.have.body();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get non-existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  TestUtils.expect_error_404(responseBody);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete non-existing rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"TestUtils = eval(environment.TestUtils)();",
													"",
													"pm.test(\"Response code\", function () {",
													"  pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Schema\", function () {",
													"  TestUtils.expect_error_404(responseBody);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
											"host": [
												"{{mappings-api-baseurl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												"{{app_id}}",
												"rules",
												"{{rule_id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.setEnvironmentVariable(\"app_id\", 19320);",
											"",
											"postman.setEnvironmentVariable(\"good_rule_obj\", JSON.stringify({",
											"  \"name\": \"Good multilist value rule\",",
											"  \"enabled\": true,",
											"  \"position\": 1,",
											"  \"match\": \"all\",",
											"  \"conditions\": [{",
											"    \"source\": \"email\",",
											"    \"operator\": \"=\",",
											"    \"value\": \"nelson.enzo@onelogin.com\"",
											"  }],",
											"  \"actions\": [{",
											"    \"action\": \"set_groups\",",
											"    \"value\": [\"45168\",\"45349\"]",
											"  }]",
											"}));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Templates - Currently Broken",
					"item": [
						{
							"name": "App Rule List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.AppRuleList, responseBody);",
											"  postman.setEnvironmentVariable(\"last_app_rule_list\", JSON.parse(responseBody));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.IdObject, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_id\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"scriptlet\",\n\t\"enabled\": true,\n\t\"position\": 1,\n\t\"match\": \"all\",\n\t\"conditions\": [\n\t\t{\n    \t\t\"source\": \"email\",\n    \t\t\"operator\": \"=\",\n    \t\t\"value\": \"nelson.enzo@onelogin.com\"\n    \t}\n    ],\n\t\"actions\": [\n            {\n                \"action\": \"set_groups\",\n                \"value\": [\"83953\",\"83953\"]\n            }\n\t]\n}"
								},
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule DryRun",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.DryrunUserList, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_dryrun\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[40823,34761,36245]"
								},
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}/dryrun",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"{{rule_id}}",
										"dryrun"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Apply",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.JobIdObject, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_apply\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/apply",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"apply"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.IdObject, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_id\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test\",\n    \"match\": \"all\",\n    \"enabled\": false,\n    \"position\": 1,\n    \"conditions\": [\n        {\n            \"source\": \"status\",\n            \"operator\": \"!=\",\n            \"value\": \"\"\n        },\n        {\n            \"source\": \"status\",\n            \"operator\": \"=\",\n            \"value\": \"5\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"target\": \"set_role\",\n            \"value\": \"4\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Sort",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.IdList, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_sort\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[88, 137, 139, 140, 142, 152, 154, 155, 156, 159, 160, 161, 163, 164]"
								},
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/mappings/sort",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"mappings",
										"sort"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Empty body\", function () {",
											"  pm.response.to.not.have.body();",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.AppRule, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule\", JSON.parse(responseBody));",
											"    postman.setEnvironmentVariable(\"last_app_rule_id\", JSON.parse(responseBody).id);",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Condition List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_condition_list\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/conditions",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"conditions"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Condition Operator List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_condition_op_list\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/conditions/{{rule_condition_value}}/operators",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"conditions",
										"{{rule_condition_value}}",
										"operators"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Condition Value List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  if(responseBody.length == 0) {",
											"    pm.response.to.not.have.body();",
											"    postman.setEnvironmentVariable(\"last_app_rule_condition_value_list\", null);",
											"  } else {",
											"    TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
											"        try {",
											"        postman.setEnvironmentVariable(\"last_app_rule_condition_value_list\", JSON.parse(responseBody));",
											"    } catch(error){",
											"    }",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/conditions/{{rule_condition_value}}/values",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"conditions",
										"{{rule_condition_value}}",
										"values"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Action List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
											"  try {",
											"    postman.setEnvironmentVariable(\"last_app_rule_action_list\", JSON.parse(responseBody));",
											"  } catch(error){",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/actions",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"actions"
									]
								}
							},
							"response": []
						},
						{
							"name": "App Rule Action Value List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"TestUtils = eval(environment.TestUtils)();",
											"",
											"pm.test(\"Response code\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Schema\", function () {",
											"  if(responseBody.length == 0) {",
											"    pm.response.to.not.have.body();",
											"    postman.setEnvironmentVariable(\"last_app_rule_action_value_list\", null);",
											"  } else {",
											"    TestUtils.validate_schema(TestUtils.NameValueList, responseBody);",
											"        try {",
											"        postman.setEnvironmentVariable(\"last_app_rule_action_value_list\", JSON.parse(responseBody));",
											"    } catch(error){",
											"    }",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{mappings-api-baseurl}}/api/2/apps/{{app_id}}/rules/actions/{{action_value}}/values",
									"host": [
										"{{mappings-api-baseurl}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"actions",
										"{{action_value}}",
										"values"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "users/{user id}",
			"item": [
				{
					"name": "registrations",
					"item": [
						{
							"name": "{registration id}",
							"item": [
								{
									"name": "get user registration",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"registrations",
												":registration_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) The user's id"
												},
												{
													"key": "registration_id",
													"value": "<UUID>",
													"description": "(Required) The id of a registration"
												}
											]
										},
										"description": "Get registration state by id"
									},
									"response": [
										{
											"name": "Get user registration",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer: {{access_token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
													"protocol": "https",
													"host": [
														"{{api-domain}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) The user's id"
														},
														{
															"key": "registration_id",
															"value": "<UUID>",
															"description": "(Required) The id of a registration"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Accept-Language",
													"value": "en-US,en;q=1"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, must-revalidate, no-store"
												},
												{
													"key": "Content-Length",
													"value": "64"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Request-Id",
													"value": "5F188C46-49E1609A-D47B-0A0B033A-01BB-11459E-43E7"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jul 2020 18:58:14 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"ca332b26-0d83-444f-956b-0dbf004a3f03\",\n    \"status\": \"pending\"\n}"
										}
									]
								},
								{
									"name": "verify user registration",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"506C45\"\n}"
										},
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"registrations",
												":registration_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "registration_id",
													"value": "<UUID>",
													"description": "(Required) The id of a registration"
												}
											]
										},
										"description": "Submit an otp for verification."
									},
									"response": [
										{
											"name": "Verify user registration",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "bearer: {{access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"506C45\"\n}"
												},
												"url": {
													"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
													"protocol": "https",
													"host": [
														"{{api-domain}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}"
														},
														{
															"key": "registration_id",
															"value": "<UUID>",
															"description": "(Required) The id of a registration"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Accept-Language",
													"value": "en-US,en;q=1"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, must-revalidate, no-store"
												},
												{
													"key": "Content-Length",
													"value": "87"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Request-Id",
													"value": "5F188CDE-49E1609A-D480-0A0B0591-01BB-3589-0813"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jul 2020 19:00:47 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"44aa6883-5048-4cd5-8cb2-64d47784230c\",\n    \"status\": \"accepted\",\n    \"device_id\": \"3926157\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "create user factor registration",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer: {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"factor_id\": \"58959\",\n    \"display_name\": \"SMS\"\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"registrations"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) The user's id"
										}
									]
								},
								"description": "Create a new registration process"
							},
							"response": [
								{
									"name": "Create user factor registration",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"factor_id\": \"58959\",\n    \"display_name\": \"SMS\"\n}"
										},
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"registrations"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) The user's id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Accept-Language",
											"value": "en-US,en;q=1"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, must-revalidate, no-store"
										},
										{
											"key": "Content-Length",
											"value": "186"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Request-Id",
											"value": "5F188C90-49E1609A-D47D-0A0B03ED-01BB-2869-1581"
										},
										{
											"key": "Date",
											"value": "Wed, 22 Jul 2020 18:59:30 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"44aa6883-5048-4cd5-8cb2-64d47784230c\",\n    \"status\": \"pending\",\n    \"auth_factor_name\": \"SMS\",\n    \"type_display_name\": \"OneLogin SMS\",\n    \"user_display_name\": \"SMS\",\n    \"expires_at\": \"2020-07-22T19:01:29Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "devices",
					"item": [
						{
							"name": "get user devices",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer:{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/devices",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"devices"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}"
										}
									]
								},
								"description": "Get a user authentication devices"
							},
							"response": [
								{
									"name": "A list of authentication devices",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"devices"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"type\": \"boolean\",\n  \"default\": \"<boolean>\"\n },\n {\n  \"type\": \"boolean\",\n  \"default\": \"<boolean>\"\n }\n]"
								}
							]
						},
						{
							"name": "delete user device",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer: {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/devices/:device_id",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"devices",
										":device_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}"
										},
										{
											"key": "device_id",
											"value": "<integer>",
											"description": "(Required) ID of the device"
										}
									]
								},
								"description": "Delete a user\\'s authentication device"
							},
							"response": [
								{
									"name": "The device has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/devices/:device_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"devices",
												":device_id"
											],
											"variable": [
												{
													"key": "user_id"
												},
												{
													"key": "device_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "verifications",
					"item": [
						{
							"name": "{verification id}",
							"item": [
								{
									"name": "get user verification",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/verifications/:verification_id",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"verifications",
												":verification_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) The user's id"
												},
												{
													"key": "verification_id",
													"value": "<UUID>",
													"description": "(Required) The id of a verification"
												}
											]
										},
										"description": "Get verification state by id"
									},
									"response": [
										{
											"name": "Retrieved verification state",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verifications/:verification_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verifications",
														":verification_id"
													],
													"variable": [
														{
															"key": "user_id"
														},
														{
															"key": "verification_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n \"status\": \"pending\",\n \"expires_at\": \"2020-07-11T22:24:50Z\",\n \"device_id\": \"331991\"\n}"
										}
									]
								},
								{
									"name": "verify user verification",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"42CFA7\"\n}"
										},
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/verifications/:verification_id",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"verifications",
												":verification_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) The user's id"
												},
												{
													"key": "verification_id",
													"value": "<UUID>",
													"description": "(Required) The id of a verification"
												}
											]
										},
										"description": "Submit an otp for verification."
									},
									"response": [
										{
											"name": "Verification code received. State updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"213932\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verifications/:verification_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verifications",
														":verification_id"
													],
													"variable": [
														{
															"key": "user_id"
														},
														{
															"key": "verification_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n \"status\": \"pending\",\n \"expires_at\": \"2020-07-11T22:24:50Z\",\n \"device_id\": \"331991\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "create user device verification",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer: {{access_token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"device_id\": \"3920371\",\n    \"expires_in\": 240\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/verifications",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"verifications"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) The user's id"
										}
									]
								},
								"description": "Create a new verification process"
							},
							"response": [
								{
									"name": "Created verification flow",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"device_id\": \"113242\",\n    \"expires_in\": 120\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/verifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"verifications"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"expires_at\": \"2020-07-11T22:24:50Z\",\n \"user_display_name\": \"Testing SMS DEMO\",\n \"type_display_name\": \"OneLogin SMS\",\n \"auth_factor_name\": \"SMS\",\n \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n \"status\": \"pending\",\n \"user_id\": 2323,\n \"device_id\": \"489339\",\n \"factor_data\": {\n  \"verification_token\": \"<string>\",\n  \"totp_url\": \"<string>\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "get user factors",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer: {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mfa/users/{{user_id}}/factors",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mfa",
								"users",
								"{{user_id}}",
								"factors"
							]
						},
						"description": "Get a user\\'s available authentication factors"
					},
					"response": [
						{
							"name": "A list of authentication factors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/factors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"factors"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"factor_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"auth_factor_name\": \"<string>\"\n },\n {\n  \"factor_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"auth_factor_name\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "issue user temp otp",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "bearer: {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expires_in\": 120,\n    \"reusable\": false\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/mfa_token",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mfa",
								"users",
								":user_id",
								"mfa_token"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "(Required) The user's id"
								}
							]
						},
						"description": "Create new MFA token on the user's account"
					},
					"response": [
						{
							"name": "Created Mfa Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expires_in\": 120,\n    \"reusable\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/temp_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"temp_otp"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"mfa_token\": \"UIOWE787979\",\n \"reusable\": true,\n \"expires_at\": \"2020-06-26T21:52:56Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "api/1/users/{user id}",
			"item": [
				{
					"name": "otp devices",
					"item": [
						{
							"name": "{device id}",
							"item": [
								{
									"name": "Remove an Enrolled Factor",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/octet-stream"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices/:device_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"users",
												":user_id",
												"otp_devices",
												":device_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) "
												},
												{
													"key": "device_id",
													"value": "{{device_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Remove an enrolled MFA device for a user"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices/:device_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"users",
														":user_id",
														"otp_devices",
														":device_id"
													],
													"variable": [
														{
															"key": "user_id"
														},
														{
															"key": "device_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Activate a Factor",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state_token_expires_in\": 300\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices/:device_id/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"users",
												":user_id",
												"otp_devices",
												":device_id",
												"trigger"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "ex occaecat in",
													"description": "(Required) "
												},
												{
													"key": "device_id",
													"value": "ex occaecat in",
													"description": "(Required) "
												}
											]
										},
										"description": "Activate a Factor"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"state_token_expires_in\": 300\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices/:device_id/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"users",
														":user_id",
														"otp_devices",
														":device_id",
														"trigger"
													],
													"variable": [
														{
															"key": "user_id"
														},
														{
															"key": "device_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Verify a Factor",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp_token\": \"{{otp_token}}\",\n    \"state_token\": \"{{state_token}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices/:device_id/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"users",
												":user_id",
												"otp_devices",
												":device_id",
												"verify"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "ex occaecat in",
													"description": "(Required) "
												},
												{
													"key": "device_id",
													"value": "ex occaecat in",
													"description": "(Required) "
												}
											]
										},
										"description": "Verify a Factor"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp_token\": \"{{otp_token}}\",\n    \"state_token\": \"{{state_token}}\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices/:device_id/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"users",
														":user_id",
														"otp_devices",
														":device_id",
														"verify"
													],
													"variable": [
														{
															"key": "user_id"
														},
														{
															"key": "device_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Enrolled Factors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"users",
										":user_id",
										"otp_devices"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get Enrolled Factors"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"users",
												":user_id",
												"otp_devices"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Enroll a Factor",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"factor_id\": {{factor_id}},\n  \"display_name\": \"{{name_for_the_factor}}\",\n  \"number\": \"{{phone_number}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"users",
										":user_id",
										"otp_devices"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Enroll an Authentication Factor"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"{\\n  \\\"factor_id\\\": {{factor_id}},\\n  \\\"display_name\\\":  \\\"{{name_for_the_factor}}\\\",\\n  \\\"number\\\": \\\"{{phone_number}}\\\"\\n}\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/users/:user_id/otp_devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"users",
												":user_id",
												"otp_devices"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Available Factors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/1/users/:user_id/auth_factors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"users",
								":user_id",
								"auth_factors"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "(Required) "
								}
							]
						},
						"description": "Get Available Factors"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/users/:user_id/auth_factors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"users",
										":user_id",
										"auth_factors"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Generate Temp MFA Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expires_in\": \"300\",\n    \"reusable\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/1/users/:user_id/mfa_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"users",
								":user_id",
								"mfa_token"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "146280738",
									"description": "(Required) "
								}
							]
						},
						"description": "Generate Temp MFA Token"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expires_in\": \"300\",\n    \"reusable\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/users/:user_id/mfa_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"users",
										":user_id",
										"mfa_token"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Internal",
			"item": [
				{
					"name": "User Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/v3/oidc/user_info",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"v3",
								"oidc",
								"user_info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pre-Test Endpoint (DO NOT RUN)",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "Generate an access token and refresh token that you can use to call our resource APIs.\n\nValidates correct status code and sets up {{access_token} for future API calls.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{clientId}} & {{clientSecret}} - Both values can be retrieved from OL Administration page : Developers > Access Credentials > New Credentials\n    \n\n**Response Environment variables setup after execution:**\n\n*   {{access_token}} - Use this token to call OL resource APIs."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "Use this API to generate a session login token in scenarios in which MFA may or may not be required. Both scenarios are supported. A session login token expires two minutes after creation.\n\nValidates correct status code and sets up {{auth_session_token}} for future API calls.\n\n**Request Environment variables setup by the user:**\n\n*   {{oapiUrl}} - OL oAPI domain.\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_test_user_email}} & {{portal_test_user_password}} - *Request body variables.* User credentials for portal app authentication.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{access_token}} - Authentication header from */api/v3/custom_brand?session_token={{portal_old_session_token}}*.\n    \n\n**Response Environment variables setup after execution:**\n\n*   {{auth_session_token}} - Session token with an expiry date. Use this token to call OL resource APIs."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "For authorization use Authorization bearer token. \"access_token\" is used from the previous call.\n\nValidates correct status code. **The endpoint sends a cookie which sets a session on Postman cookies.**\n\nMore Info: [https://developers.onelogin.com/api-docs/1/login-page/create-session-via-token](https://developers.onelogin.com/api-docs/1/login-page/create-session-via-token)\n\n**Request Environment variables setup by the user:**\n\n*   {subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{access_token}} - Authentication header from */api/v3/custom_brand?session_token={{portal_old_session_token}}*.\n*   {{auth_session_token}} - *Body Request variable.* Env variable is set up from */api/1/login/auth*"
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    utils.clearCookies(pm.environment.get(\"subdomain\") + \".\" + pm.environment.get(\"host\"));",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "Retrieve session-cookie & session token.\n\nValidates the correct status and sets up the mobile {{portal_session_token}} used by future API calls.\n\n**Request Environment variables setup by the user:**\n\n*   {{dslUrl}} - OL DSL domain.\n*   {subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_test_user_email}} & {{portal_test_user_password}} - *Request body variables.* User credentials for portal app authentication.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{access_token}} - Authentication header from */api/v3/custom_brand?session_token={{portal_old_session_token}}*.\n    \n\n**Response Environment variables setup after execution:**\n\n*   {{portal_session_token}} - Mobile data token. Use this token to call OL mobile resource APIs."
					},
					"response": []
				}
			],
			"description": "**DO NOT RUN THIS FOLDER.**\n\nThis is just an example of the endpoints used to get the session token and add a description of each one. No need to run this suite."
		},
		{
			"name": "api/v3/custom_brand",
			"item": [
				{
					"name": "Mobile - Custom Brand (Retrieve branding info & renew session-cookie)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    utils.clearCookies(pm);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    utils.clearCookies(pm);",
									"});",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(utils.customBrandSchema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/api/v3/custom_brand?session_token={{portal_old_session_token}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"api",
								"v3",
								"custom_brand"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{portal_old_session_token}}"
								}
							]
						},
						"description": "Retrieve branding info & renew session cookie.\n\nTo execute this endpoint an old data-token should be as session token in the request param.\n\nHere correct status code 200 and response schema is validated.\n\n**Environment params:**\n\n*   {{portal_old_session_token}} - User sets up an environment variable. This can be get from any request from ***/users/device_login?subdomain={{subdomain}} (DSL - Device login (Retrieve session-cookie & session in token) this return a*** data-token **in the body response*)***\n*   {{subdomain}} - User sets up an environment variable. This is the tenant.\n*   {{host}} - User sets up an environment variable. This is the domain."
					},
					"response": []
				}
			],
			"description": "Retrieve branding info & renew session cookie."
		},
		{
			"name": "profile-service/me",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Profile service me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate email\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"portal_test_user_email\"));",
									"});",
									"",
									"pm.test(\"Validate username\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"portal_test_user_username\"));",
									"});",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(utils.profileSchema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/profile-service/me?session_token={{portal_session_token}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"profile-service",
								"me"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{portal_session_token}}"
								}
							]
						},
						"description": "Retrieve user’s profile info.\n\nValidates correct status code, schema and user data to verify user identity.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{portal_session_token}} and session cookies - Saved during execution of ***GET /users/device_login?subdomain={{subdomain}}***"
					},
					"response": []
				}
			],
			"description": "Retrieve user’s profile info."
		},
		{
			"name": "form-service/logins",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Logins (app list)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate user apps\", function () {",
									"    var jsonData = pm.response.json();",
									"    var expectedApps = pm.environment.get(\"portal_apps\").split(\",\");",
									"",
									"    pm.expect(jsonData.length).to.eql(expectedApps.length);",
									"",
									"    var allAppsFound = true;",
									"    jsonData.forEach(app => {",
									"        if (!expectedApps.includes(app.name)) {",
									"            allAppsFound = false;",
									"            console.log(\"App not found. Expected to found : \" + app.name)",
									"        }",
									"    });",
									"    pm.expect(allAppsFound).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/logins",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"logins"
							]
						},
						"description": "Retrieve list of available applications.\n\nPRE - CONDITIONS (OL PORTAL) : For this test to work the user should have a set of apps created and assigned to him/her. In the case of the endpoint tenant, the apps are set in a Default profile (GitHub, Crunchtime, Greenhouse Onboarding) and **should be saved in a Env Variable with the format of appA,appB,appC.....**\n\nA valid status code is verified and also that a set of apps ({{portal_apps}}) are retrieved in the body response.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_apps}} - A group of application assigned to the user. This are used in the API test."
					},
					"response": []
				}
			],
			"description": "Retrieve list of available applications."
		},
		{
			"name": "form-service/portal/logins/{_id}",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Logins (app list)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set sam app\", function () {",
									"    pm.environment.unset(\"portal_test_user_sam_app\");",
									"",
									"    var jsonData = pm.response.json();",
									"    const samApp = pm.environment.get(\"portal_test_user_sam_name\").toLowerCase();",
									"    const findApp = jsonData.filter(app => app.name.toLowerCase() === samApp.toLowerCase());",
									"",
									"    pm.environment.set(\"portal_test_user_sam_app\", findApp[0]._id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/logins",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"logins"
							]
						},
						"description": "Retrieve list of available applications.\n\nPRE - CONDITIONS (OL PORTAL) : For this test to work the user should have a set of apps created and assigned to him/her. One of those app should be an SAM Authentication app and **should be saved in the Env Variable \"portal_test_user_sam_name\".**\n\nA valid status code is verified and the details of {{portal_test_user_sam_name}} are retrieved in the body response to set its id for the next API call.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_test_user_sam_name}} - SAM authentication app (GitHub for endpoint tenant). This are used in the API test.\n    \n\n**Response Environment variables setup after execution:**\n\n*   {{portal_test_user_sam_app}} - The id of the app. It is used in the next API call."
					},
					"response": []
				},
				{
					"name": "Mobile - App details (settings and credentials)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[\"_id\"]).to.eql(pm.environment.get(\"portal_test_user_sam_app\"));",
									"});",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(utils.samAppSchema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/portal/logins/{{portal_test_user_sam_app}}?session_token={{portal_session_token}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"portal",
								"logins",
								"{{portal_test_user_sam_app}}"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{portal_session_token}}"
								}
							]
						},
						"description": "Retrieve settings & credentials for an app.\n\nValidate correct status code and app id and response body schema\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{access_token}} - Authentication header from */api/v3/custom_brand?session_token={{portal_old_session_token}}*\n*   {{portal_session_token}} - Session token retrieved during ***GET /users/device_login?subdomain={{subdomain}}*** call.\n*   {{portal_test_user_sam_app}} - SAM Auth app retrieved during the previous API call."
					},
					"response": []
				}
			],
			"description": "Retrieve settings & credentials for an app."
		},
		{
			"name": "form-service/login/{_id}",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Logins (app list)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set sam app\", function () {",
									"    pm.environment.unset(\"portal_test_user_sam_app\");",
									"    pm.environment.unset(\"portal_test_user_no_sam_app\");",
									"",
									"    var jsonData = pm.response.json();",
									"    const samApp = pm.environment.get(\"portal_test_user_sam_name\").toLowerCase();",
									"    const noSamApp = pm.environment.get(\"portal_test_user_no_sam_name\").toLowerCase();",
									"",
									"    const findAppSam = jsonData.filter(app => app.name.toLowerCase() === samApp.toLowerCase());",
									"    const findAppNoSam = jsonData.filter(app => app.name.toLowerCase() === noSamApp.toLowerCase());",
									"",
									"    pm.environment.set(\"portal_test_user_sam_app\", findAppSam[0]._id);",
									"    pm.environment.set(\"portal_test_user_no_sam_app\", findAppNoSam[0]._id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/logins",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"logins"
							]
						},
						"description": "Retrieve list of available applications.\n\nPRE - CONDITIONS (OL PORTAL) : For this test to work the user should have a set of apps created and assigned to him/her. One valid and invalid SAM Authentication app and **should be saved in the Env Variable \"portal_test_user_sam_name\" and \"portal_test_user_no_sam_app\".**\n\nA valid status code is verified and the details of {{portal_test_user_sam_name}} and {{portal_test_user_no_sam_app}} are retrieved in the body response to set its id for the next API call.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_test_user_sam_name}} - SAM authentication app (GitHub for endpoint tenant). This are used in the API test.\n*   {{portal_test_user_no_sam_app}} - Non valid SAM authentication app (Greenhouse Onboarding for endpoint tenant). This are used in the API test.\n    \n\n**Response Environment variables setup after execution:**\n\n*   {{portal_test_user_sam_app}} - The id of the app. It is used in the next API call.\n*   {{portal_test_user_no_sam_app}} - The id of the app. It is used in the next API call."
					},
					"response": []
				},
				{
					"name": "Mobile - App details (Login Steps)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate app id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.accountId).to.eql(pm.environment.get(\"portal_test_user_sam_app\"));",
									"});",
									"",
									"pm.test(\"Validate schema\", () => {",
									"     pm.response.to.have.jsonSchema(utils.loginAppSchema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/login/{{portal_test_user_sam_app}}?session_token={{portal_session_token}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"login",
								"{{portal_test_user_sam_app}}"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{portal_session_token}}"
								}
							]
						},
						"description": "Retrieve login steps from form service.\n\nValidate correct status code and app id and response body schema.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{access_token}} - Authentication header from ***POST /api/v3/custom_brand?session_token={{portal_old_session_token}}***\n*   {{portal_session_token}} - Session token retrieved during ***GET /users/device_login?subdomain={{subdomain}}*** call.\n*   {{portal_test_user_sam_app}} - SAM Auth app retrieved during the previous API call."
					},
					"response": []
				},
				{
					"name": "Mobile - App details (non valid app)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Validate response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(String(jsonData.name)).to.eql(\"ForbiddenError\");",
									"    pm.expect(String(jsonData.message)).to.eql(`Unhandled loginType 'saml' for account '${pm.environment.get(\"portal_test_user_no_sam_app\")}'`);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/login/{{portal_test_user_no_sam_app}}?session_token={{mob_session_token}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"login",
								"{{portal_test_user_no_sam_app}}"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{mob_session_token}}"
								}
							]
						},
						"description": "Retrieve login steps from form service.\n\n**Negative scenarios,** validate correct status code (403) and body response details.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{access_token}} - Authentication header from ***POST /api/v3/custom_brand?session_token={{portal_old_session_token}}***\n*   {{portal_session_token}} - Session token retrieved during ***GET /users/device_login?subdomain={{subdomain}}*** call.\n*   {{portal_test_user_no_sam_app}} - SAM Auth app retrieved during the previous API call."
					},
					"response": []
				}
			],
			"description": "Retrieve login steps from form service."
		},
		{
			"name": "form-service/portal/logins/{appId} (update)",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Logins (app list)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set sam app\", function () {",
									"    pm.environment.unset(\"portal_test_user_sam_app\");",
									"    pm.environment.unset(\"portal_test_user_no_sam_app\");",
									"",
									"    var jsonData = pm.response.json();",
									"    const samApp = pm.environment.get(\"portal_test_user_sam_name\").toLowerCase();",
									"    const noSamApp = pm.environment.get(\"portal_test_user_no_sam_name\").toLowerCase();",
									"",
									"    const findAppSam = jsonData.filter(app => app.name.toLowerCase() === samApp.toLowerCase());",
									"    const findAppNoSam = jsonData.filter(app => app.name.toLowerCase() === noSamApp.toLowerCase());",
									"",
									"    pm.environment.set(\"portal_test_user_sam_app\", findAppSam[0]._id);",
									"    pm.environment.set(\"portal_test_user_no_sam_app\", findAppNoSam[0]._id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/logins",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"logins"
							]
						},
						"description": "Retrieve list of available applications.\n\nPRE - CONDITIONS (OL PORTAL) : For this test to work the user should have a set of apps created and assigned to him/her. One valid and invalid SAM Authentication app and **should be saved in the Env Variable \"portal_test_user_sam_name\" and \"portal_test_user_no_sam_app\".**\n\nA valid status code is verified and the details of {{portal_test_user_sam_name}} and {{portal_test_user_no_sam_app}} are retrieved in the body response to set its id for the next API call.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_test_user_sam_name}} - SAM authentication app (GitHub for endpoint tenant). This are used in the API test.\n*   {{portal_test_user_no_sam_app}} - Non valid SAM authentication app (Greenhouse Onboarding for endpoint tenant). This are used in the API test.\n    \n\n**Response Environment variables setup after execution:**\n\n*   {{portal_test_user_sam_app}} - The id of the app. It is used in the next API call.\n*   {{portal_test_user_no_sam_app}} - The id of the app. It is used in the next API call."
					},
					"response": []
				},
				{
					"name": "Mobile - Update App credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Validate body response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.changed).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"TESTING\",\n  \"name\": \"GITHUB\",\n  \"parameters\": [\n    {\n      \"id\": \"50134\",\n      \"value\": \"{{$randomUserName}}\"\n    },\n    {\n      \"id\": \"50135\",\n      \"value\": \"{{$randomPassword}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/portal/logins/{{portal_test_user_sam_app}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"portal",
								"logins",
								"{{portal_test_user_sam_app}}"
							]
						},
						"description": "Update app’s credentials.\n\nValidate correct status code and response body.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   Session cookies - Create and set automatically by Postman during ***GET /users/device_login?subdomain={{subdomain}}*** call.\n*   {{portal_test_user_sam_app}} - SAM Auth app retrieved during the previous API call."
					},
					"response": []
				},
				{
					"name": "Mobile - Update App credentials (invalid app)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"TESTING\",\n  \"name\": \"Crunchtime\",\n  \"parameters\": [\n    {\n      \"id\": \"50134\",\n      \"value\": \"{{$randomUserName}}\"\n    },\n    {\n      \"id\": \"50135\",\n      \"value\": \"{{$randomPassword}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/portal/logins/{{portal_test_user_no_sam_app}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"portal",
								"logins",
								"{{portal_test_user_no_sam_app}}"
							]
						},
						"description": "**Negative scenario of update app’s credentials.**\n\nValidate status code 403 is retrieved.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   Session cookies - Create and set automatically by Postman during ***GET /users/device_login?subdomain={{subdomain}}*** call.\n*   {{portal_test_user_no_sam_app}} - SAM Auth app retrieved during the previous API call."
					},
					"response": []
				}
			],
			"description": "Update app’s credentials."
		},
		{
			"name": "/mobile/v1/login?session_token={session_token}&id={app_id}&version={version}",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Logins (app list)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set sam app\", function () {",
									"    pm.environment.unset(\"portal_test_user_sam_app\");",
									"    pm.environment.unset(\"portal_test_user_no_sam_app\");",
									"",
									"    var jsonData = pm.response.json();",
									"    const samApp = pm.environment.get(\"portal_test_user_sam_name\").toLowerCase();",
									"    const noSamApp = pm.environment.get(\"portal_test_user_no_sam_name\").toLowerCase();",
									"",
									"    const findAppSam = jsonData.filter(app => app.name.toLowerCase() === samApp.toLowerCase());",
									"    const findAppNoSam = jsonData.filter(app => app.name.toLowerCase() === noSamApp.toLowerCase());",
									"",
									"    pm.environment.set(\"portal_test_user_sam_app\", findAppSam[0]._id);",
									"    pm.environment.set(\"portal_test_user_no_sam_app\", findAppNoSam[0]._id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/form-service/logins",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"form-service",
								"logins"
							]
						},
						"description": "Retrieve list of available applications.\n\nPRE - CONDITIONS (OL PORTAL) : For this test to work the user should have a set of apps created and assigned to him/her. One valid and invalid SAM Authentication app and **should be saved in the Env Variable \"portal_test_user_sam_name\" and \"portal_test_user_no_sam_app\".**\n\nA valid status code is verified and the details of {{portal_test_user_sam_name}} and {{portal_test_user_no_sam_app}} are retrieved in the body response to set its id for the next API call.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_test_user_sam_name}} - SAM authentication app (GitHub for endpoint tenant). This are used in the API test.\n*   {{portal_test_user_no_sam_app}} - Non valid SAM authentication app (Greenhouse Onboarding for endpoint tenant). This are used in the API test.\n    \n\n**Response Environment variables setup after execution:**\n\n*   {{portal_test_user_sam_app}} - The id of the app. It is used in the next API call.\n*   {{portal_test_user_no_sam_app}} - The id of the app. It is used in the next API call."
					},
					"response": []
				},
				{
					"name": "Mobile - Retrieve Javascript login steps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/mobile/v1/login?session_token={{portal_session_token}}&id={{portal_test_user_sam_app}}&version=1",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"mobile",
								"v1",
								"login"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{portal_session_token}}"
								},
								{
									"key": "id",
									"value": "{{portal_test_user_sam_app}}"
								},
								{
									"key": "version",
									"value": "1"
								}
							]
						},
						"description": "Retrieve Javascript login steps.\n\nValidate correct status codey.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   Session cookies and {{portal_session_token}} - Create and set automatically by Postman during ***GET /users/device_login?subdomain={{subdomain}}*** call.\n*   {{portal_test_user_sam_app}} - SAM Auth app retrieved during the previous API call."
					},
					"response": []
				}
			],
			"description": "Update app’s credentials."
		},
		{
			"name": "/mobile/v2/change_password",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Update App credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    if (pm.response.code === 200) {",
									"        const newPass = JSON.parse(pm.request.body).new_password;",
									"        pm.environment.set(\"portal_test_user_password\", newPass);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{portal_test_user_password}}\",\n  \"new_password\": \"{{$randomPassword}}_{{$randomInt}}\",\n  \"session_token\": \"{{portal_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/mobile/v2/change_password",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"mobile",
								"v2",
								"change_password"
							]
						},
						"description": "Update user’s OL password.\n\nValidates correct status code.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n*   {{portal_test_user_password}} - User Password.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{portal_session_token}} & Session cookies - Create and set automatically by Postman during ***GET /users/device_login?subdomain={{subdomain}}*** call.\n*   {{portal_test_user_no_sam_app}} - SAM Auth app retrieved during the previous API call.\n*   new_password - A random password is created by Postman.\n    \n\n**Response Environment variables setup by Postman:**\n\n*   {{portal_test_user_password}} - If status code is received, the password is updated. In order to avoid issues in futures executions, the new password is set as an Env Variable."
					},
					"response": []
				}
			],
			"description": "Log user out of Portal application."
		},
		{
			"name": "mobile/v1/metadata",
			"item": [
				{
					"name": "Mobile - Subdomain metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate URL response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.dsl).to.eql(`https://${pm.environment.get(\"dslUrl\")}.${pm.environment.get(\"host\")}`);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/mobile/v1/metadata?domain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"mobile",
								"v1",
								"metadata"
							],
							"query": [
								{
									"key": "domain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "Retrieve metadata of domain.\n\nValidate status code and URL from the response body."
					},
					"response": []
				}
			],
			"description": "Retrieve metadata of domain."
		},
		{
			"name": "/logout",
			"item": [
				{
					"name": "oauth - Get Acces Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Token\", function () {",
									"    pm.environment.unset(\"access_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "client_id:{{clientId}}, client_secret:{{clientSecret}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/auth/oauth2/v2/token",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"auth",
								"oauth2",
								"v2",
								"token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "oauth - Auth Get Session Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"auth_session_token\");",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var data = pm.response.json().data[0];",
									"    pm.environment.set(\"auth_session_token\", data.session_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{portal_test_user_email}}\",\n    \"password\": \"{{portal_test_user_password}}\",\n    \"subdomain\": \"{{subdomain}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{oapiUrl}}.{{host}}/api/1/login/auth",
							"protocol": "https",
							"host": [
								"{{oapiUrl}}",
								"{{host}}"
							],
							"path": [
								"api",
								"1",
								"login",
								"auth"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_token\": \"{{auth_session_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/session_via_api_token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"session_via_api_token"
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "DSL - Device login (Retrieve session-cookie & session token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.environment.unset(\"portal_session_token\");",
									"    ",
									"    const $ = cheerio.load(pm.response.text());",
									"    const session_token = $(\"div\").attr('data-token');",
									"    pm.environment.set(\"portal_session_token\",session_token);",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dslUrl}}.{{host}}/users/device_login?subdomain={{subdomain}}",
							"protocol": "https",
							"host": [
								"{{dslUrl}}",
								"{{host}}"
							],
							"path": [
								"users",
								"device_login"
							],
							"query": [
								{
									"key": "subdomain",
									"value": "{{subdomain}}"
								}
							]
						},
						"description": "More information can be found on ***Pre-Test Endpoint folder*** in this suite."
					},
					"response": []
				},
				{
					"name": "Mobile - Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/logout?session_token={{mob_session_token}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"logout"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{mob_session_token}}"
								}
							]
						},
						"description": "Log user out of Portal application.\n\nCalling this endpoint, the session token and session cookie are disabled. In order to validate this, the next call tries to call profile service and validate 404 status.\n\n**Request Environment variables setup by the user:**\n\n*   {{subdomain}} - User tenant.\n*   {{host}} - User domain.\n    \n\n**Request Environment variables setup in previous calls:**\n\n*   {{portal_session_token}} & Session cookies - Create and set automatically by Postman during ***GET /users/device_login?subdomain={{subdomain}}*** call."
					},
					"response": []
				},
				{
					"name": "Mobile - Profile service me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{host}}/profile-service/me?session_token={{mob_session_token}}",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{host}}"
							],
							"path": [
								"profile-service",
								"me"
							],
							"query": [
								{
									"key": "session_token",
									"value": "{{mob_session_token}}"
								}
							]
						},
						"description": "This call is used to validate that the session token is expired. Any Portal API works."
					},
					"response": []
				}
			],
			"description": "Log user out of Portal application. The session cookie does not work anymore for the session."
		},
		{
			"name": "api/1/privileges",
			"item": [
				{
					"name": "{privilege id}",
					"item": [
						{
							"name": "roles",
							"item": [
								{
									"name": "Get Roles assigned to Privilege",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id",
												"roles"
											],
											"variable": [
												{
													"key": "privilege_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												}
											]
										},
										"description": "List roles for privilege"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"privileges",
														":privilege_id",
														"roles"
													],
													"variable": [
														{
															"key": "privilege_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Assign a Privilege to Roles",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"{\\n\\\"roles\\\": [{{role_id}}]\\n}\\n\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id",
												"roles"
											],
											"variable": [
												{
													"key": "privilege_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												}
											]
										},
										"description": "Add roles to privilege "
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"{\\n\\\"roles\\\": [{{role_id}}]\\n}\\n\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"privileges",
														":privilege_id",
														"roles"
													],
													"variable": [
														{
															"key": "privilege_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove a Privilege from a Role",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/roles/:role_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id",
												"roles",
												":role_id"
											],
											"variable": [
												{
													"key": "privilege_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												},
												{
													"key": "role_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												}
											]
										},
										"description": "Add roles to privilege"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"privileges",
														":privilege_id",
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "privilege_id"
														},
														{
															"key": "role_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "users",
							"item": [
								{
									"name": "Get Users assigned to a Privilege",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id",
												"users"
											],
											"variable": [
												{
													"key": "privilege_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												}
											]
										},
										"description": "Add privilege to user"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"privileges",
														":privilege_id",
														"users"
													],
													"variable": [
														{
															"key": "privilege_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Assign a Privilege to Users",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"{\\n\\\"users\\\": [{{user_id}}]\\n}\\n\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id",
												"users"
											],
											"variable": [
												{
													"key": "privilege_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												}
											]
										},
										"description": "Add users to privilege"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"{\\n\\\"users\\\": [{{user_id}}]\\n}\\n\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"privileges",
														":privilege_id",
														"users"
													],
													"variable": [
														{
															"key": "privilege_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove a Privilege from a User",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id",
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "privilege_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												},
												{
													"key": "user_id",
													"value": "occaecat proident labore",
													"description": "(Required) "
												}
											]
										},
										"description": "Add privilege to group of users"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/1/privileges/:privilege_id/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"1",
														"privileges",
														":privilege_id",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "privilege_id"
														},
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get a Privilege",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/privileges/:privilege_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"privileges",
										":privilege_id"
									],
									"variable": [
										{
											"key": "privilege_id",
											"value": "occaecat proident labore",
											"description": "(Required) "
										}
									]
								},
								"description": "List"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id"
											],
											"variable": [
												{
													"key": "privilege_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a Privilege",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"User Administrator\",\n    \"privilege\": {\n        \"Statement\": [\n            {\n                \"Action\": [\n                    \"users:Get\",\n                    \"users:Unlock\",\n                    \"users:ResetPassword\",\n                    \"users:ForceLogout\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Scope\": [\n                    \"roles/12\"\n                ]\n            }\n        ],\n        \"Version\": \"2018-05-18T00:00:00.000Z\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/privileges/:privilege_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"privileges",
										":privilege_id"
									],
									"variable": [
										{
											"key": "privilege_id",
											"value": "occaecat proident labore",
											"description": "(Required) "
										}
									]
								},
								"description": "Update"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"User Administrator\",\n    \"privilege\": {\n        \"Statement\": [\n            {\n                \"Action\": [\n                    \"users:Get\",\n                    \"users:Unlock\",\n                    \"users:ResetPassword\",\n                    \"users:ForceLogout\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Scope\": [\n                    \"roles/12\"\n                ]\n            }\n        ],\n        \"Version\": \"2018-05-18T00:00:00.000Z\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id"
											],
											"variable": [
												{
													"key": "privilege_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a Privilege",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"\""
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/privileges/:privilege_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"privileges",
										":privilege_id"
									],
									"variable": [
										{
											"key": "privilege_id",
											"value": "occaecat proident labore",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/1/privileges/:privilege_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"1",
												"privileges",
												":privilege_id"
											],
											"variable": [
												{
													"key": "privilege_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List Privileges",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/1/privileges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"privileges"
							]
						},
						"description": "List"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/1/privileges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"privileges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a Privilege",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Super Administrator\",\n    \"privilege\": {\n        \"Statement\": [\n            {\n                \"Action\": [\n                    \"*\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Scope\": [\n                    \"*\"\n                ]\n            }\n        ],\n        \"Version\": \"2018-05-18T00:00:00.000Z\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/1/privileges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"privileges"
							]
						},
						"description": "Create privilege"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Super Administrator\",\n    \"privilege\": {\n        \"Statement\": [\n            {\n                \"Action\": [\n                    \"*\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Scope\": [\n                    \"*\"\n                ]\n            }\n        ],\n        \"Version\": \"2018-05-18T00:00:00.000Z\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/privileges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"privileges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "api/2/hooks",
			"item": [
				{
					"name": "envs",
					"item": [
						{
							"name": "{hook env var id}",
							"item": [
								{
									"name": "Update Variable",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"super-secret-updated\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												"envs",
												":hook_env_var_id"
											],
											"variable": [
												{
													"key": "hook_env_var_id",
													"value": "{{hook_env_var_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Update Variable"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"super-secret-updated\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														"envs",
														":hook_env_var_id"
													],
													"variable": [
														{
															"key": "hook_env_var_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Variable",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												"envs",
												":hook_env_var_id"
											],
											"variable": [
												{
													"key": "hook_env_var_id",
													"value": "{{hook_env_var_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Variable"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														"envs",
														":hook_env_var_id"
													],
													"variable": [
														{
															"key": "hook_env_var_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List Variables",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks/envs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks",
										"envs"
									]
								},
								"description": "List Variables"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/envs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												"envs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Variable",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"foobarbaz\""
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks/envs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks",
										"envs"
									]
								},
								"description": "Create Variable"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"foobarbaz\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/envs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												"envs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{hook id}",
					"item": [
						{
							"name": "Get Hook",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "hook_id",
											"value": "{{pre_authentication_hook_id}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get Hook"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id"
											],
											"variable": [
												{
													"key": "hook_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Hook",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"env_vars\": [],\n    \"function\": \"{{base64Function}}\",\n    \"location_enabled\": false,\n    \"packages\": {},\n    \"retries\": 0,\n    \"risk_enabled\": false,\n    \"runtime\": \"nodejs12.x\",\n    \"timeout\": 1,\n    \"type\": \"pre-authentication\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "hook_id",
											"value": "{{pre_authentication_hook_id}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Update Hook"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"disabled\": false,\n    \"env_vars\": [],\n    \"function\": \"{{base64Function}}\",\n    \"location_enabled\": false,\n    \"packages\": {},\n    \"retries\": 0,\n    \"risk_enabled\": false,\n    \"runtime\": \"nodejs12.x\",\n    \"timeout\": 1,\n    \"type\": \"pre-authentication\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id"
											],
											"variable": [
												{
													"key": "hook_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Hook",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "hook_id",
											"value": "{{pre_authentication_hook_id}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete Hook"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id"
											],
											"variable": [
												{
													"key": "hook_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Hook Logs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks/:hook_id/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks",
										":hook_id",
										"logs"
									],
									"variable": [
										{
											"key": "hook_id",
											"value": "{{pre_authentication_hook_id}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get Hook Logs"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id/logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id",
												"logs"
											],
											"variable": [
												{
													"key": "hook_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List Hooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/2/hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"hooks"
							]
						},
						"description": "List Hooks"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Hook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"{\\n\\t\\\"type\\\": \\\"pre-authentication\\\",\\n\\t\\\"function\\\": \\\"{{base64Function}}\\\",\\n\\t\\\"disabled\\\": false,\\n    \\\"runtime\\\": \\\"nodejs12.x\\\",\\n\\t\\\"retries\\\": 0,\\n\\t\\\"timeout\\\": 1,\\n\\t\\\"risk_enabled\\\": false,\\n\\t\\\"location_enabled\\\": false,\\n    \\\"mfa_device_info_enabled\\\": true,\\n\\t\\\"env_vars\\\": [\\n\\t],\\n\\t\\\"packages\\\": {\\n\\t},\\n}\""
						},
						"url": {
							"raw": "{{baseUrl}}/api/2/hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"hooks"
							]
						},
						"description": "Create Hook"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"{\\n\\t\\\"type\\\": \\\"pre-authentication\\\",\\n\\t\\\"function\\\": \\\"{{base64Function}}\\\",\\n\\t\\\"disabled\\\": false,\\n    \\\"runtime\\\": \\\"nodejs12.x\\\",\\n\\t\\\"retries\\\": 0,\\n\\t\\\"timeout\\\": 1,\\n\\t\\\"risk_enabled\\\": false,\\n\\t\\\"location_enabled\\\": false,\\n    \\\"mfa_device_info_enabled\\\": true,\\n\\t\\\"env_vars\\\": [\\n\\t],\\n\\t\\\"packages\\\": {\\n\\t},\\n}\""
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "api/2",
			"item": [
				{
					"name": "apps",
					"item": [
						{
							"name": "{app id}",
							"item": [
								{
									"name": "rules",
									"item": [
										{
											"name": "actions",
											"item": [
												{
													"name": "List Actions",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"actions"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "commodo",
																	"description": "(Required) "
																}
															]
														},
														"description": "List Actions"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"actions"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "List Actions Values",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions/:rule_action_value/values",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"actions",
																":rule_action_value",
																"values"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "commodo",
																	"description": "(Required) "
																},
																{
																	"key": "rule_action_value",
																	"value": "commodo",
																	"description": "(Required) "
																}
															]
														},
														"description": "List Actions Values"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/actions/:rule_action_value/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"actions",
																		":rule_action_value",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_action_value"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "conditions",
											"item": [
												{
													"name": "{rule condition value}",
													"item": [
														{
															"name": "List Conditions Operators",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/operators",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"conditions",
																		":rule_condition_value",
																		"operators"
																	],
																	"variable": [
																		{
																			"key": "app_id",
																			"value": "commodo",
																			"description": "(Required) "
																		},
																		{
																			"key": "rule_condition_value",
																			"value": "commodo",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "List Conditions Operators"
															},
															"response": [
																{
																	"name": "response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/operators",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"2",
																				"apps",
																				":app_id",
																				"rules",
																				"conditions",
																				":rule_condition_value",
																				"operators"
																			],
																			"variable": [
																				{
																					"key": "app_id"
																				},
																				{
																					"key": "rule_condition_value"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "List Conditions Values",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"conditions",
																		":rule_condition_value",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "app_id",
																			"value": "commodo",
																			"description": "(Required) "
																		},
																		{
																			"key": "rule_condition_value",
																			"value": "commodo",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "List Conditions Values"
															},
															"response": [
																{
																	"name": "response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions/:rule_condition_value/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"2",
																				"apps",
																				":app_id",
																				"rules",
																				"conditions",
																				":rule_condition_value",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "app_id"
																				},
																				{
																					"key": "rule_condition_value"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List Conditions",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"conditions"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "commodo",
																	"description": "(Required) "
																}
															]
														},
														"description": "List Conditions"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/conditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		"conditions"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "{rule id}",
											"item": [
												{
													"name": "Get Rule",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "commodo",
																	"description": "(Required) "
																},
																{
																	"key": "rule_id",
																	"value": "commodo",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get Rule"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		":rule_id"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update Rule",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"actions\": [\n        {\n            \"action\": \"set_groups\",\n            \"expression\": \".*\",\n            \"value\": [\n                \"member_of\"\n            ]\n        }\n    ],\n    \"conditions\": [\n        {\n            \"operator\": \"ri\",\n            \"source\": \"has_role\",\n            \"value\": \"272445\"\n        }\n    ],\n    \"enabled\": true,\n    \"match\": \"all\",\n    \"name\": \"Sample Rule Updated\",\n    \"position\": 1\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "commodo",
																	"description": "(Required) "
																},
																{
																	"key": "rule_id",
																	"value": "commodo",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update Rule"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"actions\": [\n        {\n            \"action\": \"set_groups\",\n            \"expression\": \".*\",\n            \"value\": [\n                \"member_of\"\n            ]\n        }\n    ],\n    \"conditions\": [\n        {\n            \"operator\": \"ri\",\n            \"source\": \"has_role\",\n            \"value\": \"272445\"\n        }\n    ],\n    \"enabled\": true,\n    \"match\": \"all\",\n    \"name\": \"Sample Rule Updated\",\n    \"position\": 1\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		":rule_id"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete Rule",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "app_id",
																	"value": "commodo",
																	"description": "(Required) "
																},
																{
																	"key": "rule_id",
																	"value": "commodo",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete Rule"
													},
													"response": [
														{
															"name": "response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/:rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"2",
																		"apps",
																		":app_id",
																		"rules",
																		":rule_id"
																	],
																	"variable": [
																		{
																			"key": "app_id"
																		},
																		{
																			"key": "rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List Rules",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id/rules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id",
														"rules"
													],
													"query": [
														{
															"key": "has_condition",
															"value": "has_role:{{role_id}}",
															"disabled": true
														},
														{
															"key": "has_condition_type",
															"value": "none",
															"disabled": true
														},
														{
															"key": "has_action",
															"value": "set_status:*",
															"disabled": true
														},
														{
															"key": "has_action_type",
															"value": "none",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "app_id",
															"value": "{{app_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "List Rules"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules?has_condition=has_role:{{role_id}}&has_condition_type=none&has_action=set_status:*&has_action_type=none",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules"
															],
															"query": [
																{
																	"key": "has_condition",
																	"value": "has_role:{{role_id}}"
																},
																{
																	"key": "has_condition_type",
																	"value": "none"
																},
																{
																	"key": "has_action",
																	"value": "set_status:*"
																},
																{
																	"key": "has_action_type",
																	"value": "none"
																}
															],
															"variable": [
																{
																	"key": "app_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Bulk Sort",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    204500,\n    204499,\n    204503,\n    204502,\n    204501\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/sort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id",
														"rules",
														"sort"
													],
													"variable": [
														{
															"key": "app_id",
															"value": "commodo",
															"description": "(Required) "
														}
													]
												},
												"description": "Bulk Sort"
											},
											"response": [
												{
													"name": "response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    204500,\n    204499,\n    204503,\n    204502,\n    204501\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/apps/:app_id/rules/sort",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"apps",
																":app_id",
																"rules",
																"sort"
															],
															"variable": [
																{
																	"key": "app_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get App",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id"
											],
											"query": [
												{
													"key": "name",
													"value": "",
													"disabled": true
												},
												{
													"key": "connector_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "fields",
													"value": "role_ids",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "app_id",
													"value": "{{app_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id?name=&connector_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id"
													],
													"query": [
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "connector_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update App",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parameters\": {\n        \"saml_username\": {\n            \"user_attribute_mappings\": \"email\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id"
											],
											"query": [
												{
													"key": "name",
													"value": "{{$randomAdjective}}",
													"disabled": true
												},
												{
													"key": "connector_id",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "app_id",
													"value": "{{app_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Update App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parameters\": {\n        \"saml_username\": {\n            \"user_attribute_mappings\": \"email\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id?name=&connector_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id"
													],
													"query": [
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "connector_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete App",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id"
											],
											"variable": [
												{
													"key": "app_id",
													"value": "{{app_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id"
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Parameter from App",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id/parameters/:parameter_id?name=&connector_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id",
												"parameters",
												":parameter_id"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "connector_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "app_id",
													"value": "commodo",
													"description": "(Required) "
												},
												{
													"key": "parameter_id",
													"value": "commodo",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Parameter from App"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id/parameters/:parameter_id?name=&connector_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id",
														"parameters",
														":parameter_id"
													],
													"query": [
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "connector_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "app_id"
														},
														{
															"key": "parameter_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get App Users",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps/:app_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps",
												":app_id",
												"users"
											],
											"variable": [
												{
													"key": "app_id",
													"value": "{{app_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get App Users"
									},
									"response": [
										{
											"name": "response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/2/apps/:app_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"apps",
														":app_id",
														"users"
													],
													"variable": [
														{
															"key": "app_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List Apps",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"apps"
									],
									"query": [
										{
											"key": "connector_id",
											"value": "commodo",
											"disabled": true
										},
										{
											"key": "auth_method",
											"value": "commodo",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "id,name,provisioning",
											"disabled": true
										}
									]
								},
								"description": "List Apps"
							},
							"response": [
								{
									"name": "200 Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer: example",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/2/apps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps"
											],
											"query": [
												{
													"key": "connector_id",
													"value": "commodo",
													"disabled": true
												},
												{
													"key": "auth_method",
													"value": "commodo",
													"disabled": true
												},
												{
													"key": "fields",
													"value": "id,name,provisioning",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "cache-control",
											"value": "private, max-age=0, must-revalidate"
										},
										{
											"key": "content-length",
											"value": "66731"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "current-page",
											"value": "1"
										},
										{
											"key": "date",
											"value": "Mon, 18 Oct 2021 18:57:11 GMT"
										},
										{
											"key": "etag",
											"value": "\"5401cdce885d1caed00602dd55b0f2a9\""
										},
										{
											"key": "page-items",
											"value": "1000"
										},
										{
											"key": "status",
											"value": "200 OK"
										},
										{
											"key": "total-count",
											"value": "263"
										},
										{
											"key": "total-pages",
											"value": "1"
										},
										{
											"key": "x-request-id",
											"value": "616DC386-B1E32502-E8FA-0A0D1F5A-01BB-2F6D5C-0007"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 6765,\n        \"updated_at\": \"2016-01-27T02:53:27.598Z\",\n        \"visible\": true,\n        \"id\": 29288,\n        \"name\": \"Clarizen Provisioning\",\n        \"created_at\": \"2011-08-22T13:36:07.871Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 5555,\n        \"updated_at\": \"2016-01-27T02:53:30.762Z\",\n        \"visible\": true,\n        \"id\": 30666,\n        \"name\": \"Joomla\",\n        \"created_at\": \"2011-09-20T22:16:09.694Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2020-06-08T17:34:21.256Z\",\n        \"visible\": true,\n        \"id\": 54775,\n        \"name\": \"Zendesk Provisioning Test\",\n        \"created_at\": \"2012-10-02T22:36:13.282Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2021-01-28T08:49:05.373Z\",\n        \"visible\": true,\n        \"id\": 54776,\n        \"name\": \"Zendesk SAML Ma Ks!\",\n        \"created_at\": \"2012-10-02T22:44:22.136Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 14682,\n        \"updated_at\": \"2012-10-03T17:55:09.618Z\",\n        \"visible\": true,\n        \"id\": 54866,\n        \"name\": \"Testing CC1\",\n        \"created_at\": \"2012-10-03T17:55:00.269Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 22492,\n        \"updated_at\": \"2020-01-15T20:59:02.796Z\",\n        \"visible\": true,\n        \"id\": 158094,\n        \"name\": \"Dropbox SAML & Provisioning\",\n        \"created_at\": \"2013-05-30T19:25:30.736Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 2458,\n        \"updated_at\": \"2019-07-02T23:37:55.501Z\",\n        \"visible\": false,\n        \"id\": 165642,\n        \"name\": \"SAManage Provisioning\",\n        \"created_at\": \"2013-06-11T03:17:14.339Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 907,\n        \"updated_at\": \"2019-06-19T05:49:06.549Z\",\n        \"visible\": true,\n        \"id\": 184130,\n        \"name\": \"Google Apps Partnerbill\",\n        \"created_at\": \"2013-07-03T21:00:46.287Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"API\",\n        \"connector_id\": 1987,\n        \"updated_at\": \"2014-05-30T07:01:19.727Z\",\n        \"visible\": true,\n        \"id\": 213107,\n        \"name\": \"PBworks API test\",\n        \"created_at\": \"2013-08-01T16:29:07.858Z\",\n        \"auth_method\": 3\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"API\",\n        \"connector_id\": 5607,\n        \"updated_at\": \"2014-05-30T07:01:19.729Z\",\n        \"visible\": true,\n        \"id\": 213109,\n        \"name\": \"eCollege API test\",\n        \"created_at\": \"2013-08-01T16:31:30.012Z\",\n        \"auth_method\": 3\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 8744,\n        \"updated_at\": \"2020-03-16T16:09:10.806Z\",\n        \"visible\": true,\n        \"id\": 286460,\n        \"name\": \"Syncplicity\",\n        \"created_at\": \"2013-10-07T19:04:38.788Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 6901,\n        \"updated_at\": \"2016-01-27T02:57:55.900Z\",\n        \"visible\": true,\n        \"id\": 320210,\n        \"name\": \"Remedyforce Prov\",\n        \"created_at\": \"2013-11-04T17:55:33.411Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 912,\n        \"updated_at\": \"2016-01-27T02:58:04.906Z\",\n        \"visible\": true,\n        \"id\": 341187,\n        \"name\": \"SLO Client1\",\n        \"created_at\": \"2013-11-21T04:21:02.777Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 912,\n        \"updated_at\": \"2016-01-27T02:58:04.909Z\",\n        \"visible\": true,\n        \"id\": 341188,\n        \"name\": \"SLO Client2\",\n        \"created_at\": \"2013-11-21T04:22:20.899Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-03-10T05:11:25.543Z\",\n        \"visible\": true,\n        \"id\": 358893,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2014-03-06T22:31:11.140Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"API\",\n        \"connector_id\": 37375,\n        \"updated_at\": \"2014-05-30T07:03:13.700Z\",\n        \"visible\": true,\n        \"id\": 361080,\n        \"name\": \"Halogen SSO\",\n        \"created_at\": \"2014-03-20T01:07:41.142Z\",\n        \"auth_method\": 3\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 17211,\n        \"updated_at\": \"2016-07-25T20:53:48.139Z\",\n        \"visible\": true,\n        \"id\": 387907,\n        \"name\": \"NetSuite Entitlements Test\",\n        \"created_at\": \"2014-07-24T05:51:46.789Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2016-01-27T02:59:43.575Z\",\n        \"visible\": true,\n        \"id\": 393148,\n        \"name\": \"Zendesk SAML\",\n        \"created_at\": \"2014-08-20T21:24:38.421Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2016-01-27T02:59:44.282Z\",\n        \"visible\": true,\n        \"id\": 393519,\n        \"name\": \"Zendesk SAML\",\n        \"created_at\": \"2014-08-22T02:35:28.472Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 29255,\n        \"updated_at\": \"2020-03-16T16:12:14.168Z\",\n        \"visible\": true,\n        \"id\": 400694,\n        \"name\": \"Salesforce\",\n        \"created_at\": \"2014-10-02T05:47:14.678Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 29,\n        \"updated_at\": \"2014-10-22T03:18:07.351Z\",\n        \"visible\": true,\n        \"id\": 404384,\n        \"name\": \"Google Apps 43532452\",\n        \"created_at\": \"2014-10-22T03:18:07.351Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 8318,\n        \"updated_at\": \"2019-07-02T23:37:51.707Z\",\n        \"visible\": true,\n        \"id\": 405634,\n        \"name\": \"Jive Hosted SAML\",\n        \"created_at\": \"2014-10-28T21:57:03.596Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 42657,\n        \"updated_at\": \"2016-01-27T03:00:19.431Z\",\n        \"visible\": true,\n        \"id\": 407470,\n        \"name\": \"Test issue with SLO for Energysys\",\n        \"created_at\": \"2014-11-07T03:38:36.965Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 4,\n        \"updated_at\": \"2019-07-02T23:35:51.938Z\",\n        \"visible\": true,\n        \"id\": 413349,\n        \"name\": \"Zendesk Provisioning\",\n        \"created_at\": \"2014-12-08T22:21:34.357Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 43753,\n        \"updated_at\": \"2016-01-27T03:00:35.318Z\",\n        \"visible\": true,\n        \"id\": 413663,\n        \"name\": \"Wordpress Updated\",\n        \"created_at\": \"2014-12-10T06:42:33.417Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 9110,\n        \"updated_at\": \"2015-11-11T02:33:56.983Z\",\n        \"visible\": true,\n        \"id\": 415264,\n        \"name\": \"ProvTest\",\n        \"created_at\": \"2014-12-18T03:58:47.934Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 18199,\n        \"updated_at\": \"2016-03-10T00:47:22.169Z\",\n        \"visible\": true,\n        \"id\": 415894,\n        \"name\": \"Adobe CQ5 Conde Nast Stage\",\n        \"created_at\": \"2014-12-23T02:34:55.110Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 3037,\n        \"updated_at\": \"2016-01-27T03:01:12.354Z\",\n        \"visible\": true,\n        \"id\": 428474,\n        \"name\": \"WebEx Enterprise SAML Provisioning\",\n        \"created_at\": \"2015-02-20T06:18:18.048Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 45504,\n        \"updated_at\": \"2019-10-25T17:12:59.277Z\",\n        \"visible\": true,\n        \"id\": 436879,\n        \"name\": \"SCIM Provisioner with SAML (SCIM v2)\",\n        \"created_at\": \"2015-03-26T03:58:28.817Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 29,\n        \"updated_at\": \"2016-06-16T02:21:41.052Z\",\n        \"visible\": true,\n        \"id\": 443107,\n        \"name\": \"Google Apps Migration fixes\",\n        \"created_at\": \"2015-04-20T19:07:50.332Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 2458,\n        \"updated_at\": \"2017-01-10T19:45:53.294Z\",\n        \"visible\": true,\n        \"id\": 448592,\n        \"name\": \"Samanage TEST Provisioning\",\n        \"created_at\": \"2015-05-13T02:10:32.693Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 9110,\n        \"updated_at\": \"2015-05-28T01:54:39.968Z\",\n        \"visible\": true,\n        \"id\": 451703,\n        \"name\": \"ProvTest 15-10\",\n        \"created_at\": \"2015-05-28T01:54:16.042Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 9110,\n        \"updated_at\": \"2015-06-11T01:18:21.480Z\",\n        \"visible\": true,\n        \"id\": 454702,\n        \"name\": \"ProvTest 15-11\",\n        \"created_at\": \"2015-06-11T01:17:00.873Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 9110,\n        \"updated_at\": \"2015-06-11T01:27:06.337Z\",\n        \"visible\": true,\n        \"id\": 454703,\n        \"name\": \"ProvTest IE 15-11\",\n        \"created_at\": \"2015-06-11T01:24:49.283Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 43896,\n        \"updated_at\": \"2017-03-09T00:38:16.422Z\",\n        \"visible\": true,\n        \"id\": 456947,\n        \"name\": \"SAML ENCRYPTION TEST\",\n        \"created_at\": \"2015-06-22T22:02:26.095Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2019-07-02T22:14:06.424Z\",\n        \"visible\": true,\n        \"id\": 460294,\n        \"name\": \"Zendesk SAML Provisioning \",\n        \"created_at\": \"2015-07-10T01:59:11.477Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 6901,\n        \"updated_at\": \"2016-01-27T03:02:51.329Z\",\n        \"visible\": true,\n        \"id\": 465800,\n        \"name\": \"Remedyforce for Clients\",\n        \"created_at\": \"2015-08-03T18:03:16.043Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 22492,\n        \"updated_at\": \"2017-04-20T16:35:17.851Z\",\n        \"visible\": true,\n        \"id\": 466302,\n        \"name\": \"Dropbox Provisioning SAML\",\n        \"created_at\": \"2015-08-05T04:54:39.376Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2016-01-27T03:02:59.907Z\",\n        \"visible\": true,\n        \"id\": 468911,\n        \"name\": \"Zendesk SAML\",\n        \"created_at\": \"2015-08-17T17:06:08.944Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 53102,\n        \"updated_at\": \"2016-01-27T03:03:04.955Z\",\n        \"visible\": true,\n        \"id\": 470636,\n        \"name\": \"Insala SAML SOAP\",\n        \"created_at\": \"2015-08-25T02:50:45.208Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 42701,\n        \"updated_at\": \"2016-01-27T03:03:23.077Z\",\n        \"visible\": true,\n        \"id\": 477030,\n        \"name\": \"SCIM Provisioner with SAML\",\n        \"created_at\": \"2015-09-21T21:23:30.579Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 2801,\n        \"updated_at\": \"2019-10-21T23:13:29.154Z\",\n        \"visible\": true,\n        \"id\": 484801,\n        \"name\": \"Box SAML Provisioning\",\n        \"created_at\": \"2015-10-15T03:00:52.193Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4860,\n        \"updated_at\": \"2016-01-27T03:03:58.527Z\",\n        \"visible\": true,\n        \"id\": 489418,\n        \"name\": \"Concur Provisioning\",\n        \"created_at\": \"2015-11-03T19:24:26.331Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2017-05-02T23:54:00.582Z\",\n        \"visible\": true,\n        \"id\": 496049,\n        \"name\": \"Zendesk SAML New\",\n        \"created_at\": \"2015-12-01T02:49:11.103Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 2085,\n        \"updated_at\": \"2016-01-27T03:04:34.510Z\",\n        \"visible\": true,\n        \"id\": 500317,\n        \"name\": \"Yammer Provisioning\",\n        \"created_at\": \"2015-12-16T01:14:45.754Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 17,\n        \"updated_at\": \"2019-03-23T02:49:16.685Z\",\n        \"visible\": true,\n        \"id\": 500653,\n        \"name\": \"GoToMeeting PROV\",\n        \"created_at\": \"2015-12-17T02:18:30.638Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 2085,\n        \"updated_at\": \"2016-01-27T03:04:53.296Z\",\n        \"visible\": true,\n        \"id\": 505869,\n        \"name\": \"Yammer SAML Provisioning\",\n        \"created_at\": \"2016-01-13T00:12:39.683Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 8164,\n        \"updated_at\": \"2018-03-27T19:09:44.996Z\",\n        \"visible\": true,\n        \"id\": 505870,\n        \"name\": \"Egnyte SAML Provisioning\",\n        \"created_at\": \"2016-01-13T00:14:10.310Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 17835,\n        \"updated_at\": \"2018-07-26T23:34:54.052Z\",\n        \"visible\": true,\n        \"id\": 512284,\n        \"name\": \"ServiceNow Provisioning SAML\",\n        \"created_at\": \"2016-01-26T23:51:05.340Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 50534,\n        \"updated_at\": \"2016-02-10T22:27:11.159Z\",\n        \"visible\": true,\n        \"id\": 513630,\n        \"name\": \"Amazon Web Services (AWS) Multi Role\",\n        \"created_at\": \"2016-01-31T19:30:35.134Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 50534,\n        \"updated_at\": \"2016-02-01T23:24:31.401Z\",\n        \"visible\": true,\n        \"id\": 513888,\n        \"name\": \"Andrew AWS\",\n        \"created_at\": \"2016-02-01T23:16:27.658Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 50534,\n        \"updated_at\": \"2016-02-24T04:21:06.170Z\",\n        \"visible\": true,\n        \"id\": 520094,\n        \"name\": \"2 Amazon Web Services (AWS) Multi Role\",\n        \"created_at\": \"2016-02-24T04:11:53.823Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 32148,\n        \"updated_at\": \"2016-10-11T22:29:46.584Z\",\n        \"visible\": true,\n        \"id\": 524577,\n        \"name\": \"DocuSign - All Domains PROV\",\n        \"created_at\": \"2016-03-10T00:51:52.434Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML1.1\",\n        \"connector_id\": 48259,\n        \"updated_at\": \"2016-03-16T04:11:41.504Z\",\n        \"visible\": true,\n        \"id\": 526121,\n        \"name\": \"Egencia SAML 1.1\",\n        \"created_at\": \"2016-03-16T04:00:57.719Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 52610,\n        \"updated_at\": \"2017-06-14T00:22:46.614Z\",\n        \"visible\": true,\n        \"id\": 528470,\n        \"name\": \"AUTH-390 Reeher Platform (Encrypted Assertion)\",\n        \"created_at\": \"2016-03-24T01:59:49.809Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 907,\n        \"updated_at\": \"2017-01-10T19:43:44.660Z\",\n        \"visible\": true,\n        \"id\": 539411,\n        \"name\": \"Google Apps Mariana\",\n        \"created_at\": \"2016-05-04T16:57:23.578Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 44589,\n        \"updated_at\": \"2019-10-25T17:14:15.550Z\",\n        \"visible\": true,\n        \"id\": 539970,\n        \"name\": \"Slack Provisioning\",\n        \"created_at\": \"2016-05-05T22:10:27.742Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 52998,\n        \"updated_at\": \"2016-06-08T22:29:10.073Z\",\n        \"visible\": true,\n        \"id\": 554221,\n        \"name\": \"Cherwell Prod SAML Encrypted\",\n        \"created_at\": \"2016-06-08T21:54:21.783Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 52998,\n        \"updated_at\": \"2016-06-16T03:28:15.663Z\",\n        \"visible\": true,\n        \"id\": 555964,\n        \"name\": \"Cherwell Prod ENCRYPTED TEST\",\n        \"created_at\": \"2016-06-16T03:27:24.150Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 73236,\n        \"updated_at\": \"2018-01-05T21:06:23.925Z\",\n        \"visible\": true,\n        \"id\": 558562,\n        \"name\": \"Hipchat FINAL TEST\",\n        \"created_at\": \"2016-06-27T20:37:11.260Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"WS-Federation with SAML 1.1\",\n        \"connector_id\": 18985,\n        \"updated_at\": \"2020-03-16T16:22:17.932Z\",\n        \"visible\": true,\n        \"id\": 562363,\n        \"name\": \"Office 365 OLO365TEST ENC-256\",\n        \"created_at\": \"2016-07-12T21:45:51.636Z\",\n        \"auth_method\": 7\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 83,\n        \"updated_at\": \"2017-03-04T00:31:45.602Z\",\n        \"visible\": true,\n        \"id\": 570645,\n        \"name\": \"LinkedIn\",\n        \"created_at\": \"2016-07-27T05:11:07.909Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 7170,\n        \"updated_at\": \"2018-06-15T16:41:47.508Z\",\n        \"visible\": true,\n        \"id\": 572404,\n        \"name\": \"Google Apps (Shared Accounts)\",\n        \"created_at\": \"2016-08-01T19:45:07.018Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"WS-Federation with SAML 1.1\",\n        \"connector_id\": 18985,\n        \"updated_at\": \"2020-05-19T19:12:07.113Z\",\n        \"visible\": true,\n        \"id\": 578972,\n        \"name\": \"Office 365 CONNECT-212\",\n        \"created_at\": \"2016-08-24T01:56:08.996Z\",\n        \"auth_method\": 7\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 44589,\n        \"updated_at\": \"2019-10-25T17:14:47.409Z\",\n        \"visible\": true,\n        \"id\": 583551,\n        \"name\": \"Slack SAML\",\n        \"created_at\": \"2016-09-07T01:50:53.467Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 33166,\n        \"updated_at\": \"2016-09-07T02:33:09.562Z\",\n        \"visible\": true,\n        \"id\": 583577,\n        \"name\": \"Test & Connector\",\n        \"created_at\": \"2016-09-07T02:30:15.363Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 22492,\n        \"updated_at\": \"2016-11-03T16:53:08.105Z\",\n        \"visible\": true,\n        \"id\": 584588,\n        \"name\": \"Dropbox\",\n        \"created_at\": \"2016-09-09T17:31:50.216Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 78887,\n        \"updated_at\": \"2016-09-27T00:51:05.978Z\",\n        \"visible\": true,\n        \"id\": 589331,\n        \"name\": \"Amazon Web Services (AWS) Multi Account\",\n        \"created_at\": \"2016-09-27T00:48:06.308Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 78887,\n        \"updated_at\": \"2016-09-27T18:24:54.349Z\",\n        \"visible\": true,\n        \"id\": 589549,\n        \"name\": \"[STEF] Amazon Web Services (AWS) Multi Account\",\n        \"created_at\": \"2016-09-27T18:21:54.969Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 8318,\n        \"updated_at\": \"2016-10-11T23:15:11.228Z\",\n        \"visible\": true,\n        \"id\": 593350,\n        \"name\": \"Jive Hosted Provisioning\",\n        \"created_at\": \"2016-10-11T23:09:37.799Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 79910,\n        \"updated_at\": \"2016-10-19T02:02:41.794Z\",\n        \"visible\": true,\n        \"id\": 595253,\n        \"name\": \"DK Hostmaster selvbetjening - Velkommen til .dk selvbetjening\",\n        \"created_at\": \"2016-10-19T01:59:59.099Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 73236,\n        \"updated_at\": \"2018-08-29T17:45:35.621Z\",\n        \"visible\": true,\n        \"id\": 601263,\n        \"name\": \"Hipchat\",\n        \"created_at\": \"2016-11-09T18:20:01.854Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 77614,\n        \"updated_at\": \"2017-02-02T19:48:34.055Z\",\n        \"visible\": true,\n        \"id\": 603839,\n        \"name\": \"Encrypted Trusted IDP (proxy)\",\n        \"created_at\": \"2016-11-17T22:10:44.567Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 21234,\n        \"updated_at\": \"2016-12-07T18:51:29.873Z\",\n        \"visible\": true,\n        \"id\": 608955,\n        \"name\": \"GoToMeeting prov47\",\n        \"created_at\": \"2016-12-07T18:47:08.907Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 42657,\n        \"updated_at\": \"2017-06-28T05:26:36.631Z\",\n        \"visible\": true,\n        \"id\": 610141,\n        \"name\": \"TrustedIdP SAML Test Connector (IdP w/attr)\",\n        \"created_at\": \"2016-12-12T18:23:11.056Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"WS-Federation with SAML 1.1\",\n        \"connector_id\": 18985,\n        \"updated_at\": \"2020-03-16T16:25:38.304Z\",\n        \"visible\": true,\n        \"id\": 611020,\n        \"name\": \"Office 365 olo365test.com\",\n        \"created_at\": \"2016-12-15T02:57:58.659Z\",\n        \"auth_method\": 7\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 907,\n        \"updated_at\": \"2018-04-27T17:02:20.403Z\",\n        \"visible\": true,\n        \"id\": 612217,\n        \"name\": \"G Suite\",\n        \"created_at\": \"2016-12-20T03:06:16.938Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 81806,\n        \"updated_at\": \"2017-02-28T01:12:46.300Z\",\n        \"visible\": true,\n        \"id\": 631702,\n        \"name\": \"OneLogin SAML Test (IdP w/ multi value attr)\",\n        \"created_at\": \"2017-02-28T01:09:41.425Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"Form-based auth\",\n        \"connector_id\": 29,\n        \"updated_at\": \"2020-03-16T16:27:23.311Z\",\n        \"visible\": true,\n        \"id\": 633770,\n        \"name\": \"G Suite Password\",\n        \"created_at\": \"2017-03-06T19:32:08.784Z\",\n        \"auth_method\": 0\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 65663,\n        \"updated_at\": \"2017-06-28T05:11:29.708Z\",\n        \"visible\": true,\n        \"id\": 674775,\n        \"name\": \"OL-SP-SAML SAML Test Connector (SP)\",\n        \"created_at\": \"2017-06-28T05:07:54.426Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 29255,\n        \"updated_at\": \"2017-12-01T23:39:26.228Z\",\n        \"visible\": true,\n        \"id\": 730383,\n        \"name\": \"Salesforce 24 PROV\",\n        \"created_at\": \"2017-12-01T23:28:46.561Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 81806,\n        \"updated_at\": \"2017-12-06T18:38:52.244Z\",\n        \"visible\": true,\n        \"id\": 731882,\n        \"name\": \"Trusted Shadow01 IdP\",\n        \"created_at\": \"2017-12-06T18:38:27.442Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 8164,\n        \"updated_at\": \"2018-03-16T21:39:30.109Z\",\n        \"visible\": true,\n        \"id\": 764762,\n        \"name\": \"Egnyte PV test\",\n        \"created_at\": \"2018-03-16T21:39:30.109Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 81806,\n        \"updated_at\": \"2018-04-03T22:30:43.410Z\",\n        \"visible\": true,\n        \"id\": 771797,\n        \"name\": \"TRUSTED IDP - OneLogin SAML Test (IdP w/ multi value attr)\",\n        \"created_at\": \"2018-04-03T22:25:47.741Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 907,\n        \"updated_at\": \"2019-07-02T23:36:12.793Z\",\n        \"visible\": true,\n        \"id\": 781393,\n        \"name\": \"G Suite TEST Provisioning\",\n        \"created_at\": \"2018-04-27T16:57:22.494Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 912,\n        \"updated_at\": \"2018-06-08T19:05:37.783Z\",\n        \"visible\": true,\n        \"id\": 799037,\n        \"name\": \"MultiValue OneLogin SAML Test (SP)\",\n        \"created_at\": \"2018-06-08T19:04:16.947Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 110016,\n        \"updated_at\": \"2018-06-18T23:41:58.280Z\",\n        \"visible\": true,\n        \"id\": 802408,\n        \"name\": \"ENC - SAML Test Connector (Advanced)\",\n        \"created_at\": \"2018-06-18T23:19:06.471Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"WS-Federation with SAML 1.1\",\n        \"connector_id\": 98941,\n        \"updated_at\": \"2019-08-22T18:35:28.369Z\",\n        \"visible\": true,\n        \"id\": 913736,\n        \"name\": \"Office 365 V2\",\n        \"created_at\": \"2019-03-27T21:48:58.157Z\",\n        \"auth_method\": 7\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 110016,\n        \"updated_at\": \"2020-08-27T22:03:41.631Z\",\n        \"visible\": true,\n        \"id\": 924878,\n        \"name\": \"Advanced SAML Test Connector\",\n        \"created_at\": \"2019-04-23T16:49:11.007Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"OpenID Connect\",\n        \"connector_id\": 108419,\n        \"updated_at\": \"2021-08-14T03:40:33.460Z\",\n        \"visible\": true,\n        \"id\": 949260,\n        \"name\": \"OpenId Connect (OIDC)\",\n        \"created_at\": \"2019-06-18T23:06:01.235Z\",\n        \"auth_method\": 8\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0 (OneLogin Access)\",\n        \"connector_id\": 106486,\n        \"updated_at\": \"2020-06-08T18:28:43.330Z\",\n        \"visible\": true,\n        \"id\": 999420,\n        \"name\": \"OneLogin Access Template\",\n        \"created_at\": \"2019-10-10T22:13:12.312Z\",\n        \"enforcement_point\": {\n            \"session_expiry_inactivity\": {\n                \"unit\": \"minutes\",\n                \"value\": 10\n            },\n            \"context_root\": \"asdf\",\n            \"permissions\": \"allow\",\n            \"require_sitewide_authentication\": false,\n            \"use_target_host_header\": false,\n            \"conditions\": \"\",\n            \"target\": \"\",\n            \"case_sensitive\": false,\n            \"token\": \"f919d492626ec77096e812a9c24b8aebdf4427c3\",\n            \"session_expiry_fixed\": {\n                \"unit\": \"minutes\",\n                \"value\": 30\n            },\n            \"landing_page\": \"foo\",\n            \"resources\": [\n                {\n                    \"permissions\": \"allow\",\n                    \"conditions\": null,\n                    \"require_auth\": false,\n                    \"path\": \"/\",\n                    \"resource_id\": 759,\n                    \"is_path_regex\": null\n                }\n            ],\n            \"vhost\": \"test\"\n        },\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 64198,\n        \"updated_at\": \"2019-10-17T17:24:20.954Z\",\n        \"visible\": true,\n        \"id\": 999450,\n        \"name\": \"Splunk Dev\",\n        \"created_at\": \"2019-10-17T17:24:20.954Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"API\",\n        \"connector_id\": 128128,\n        \"updated_at\": \"2020-03-16T17:00:34.585Z\",\n        \"visible\": true,\n        \"id\": 1017904,\n        \"name\": \"MS RDP (client)\",\n        \"created_at\": \"2019-12-24T07:37:13.996Z\",\n        \"auth_method\": 3\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 110016,\n        \"updated_at\": \"2020-01-13T19:55:11.105Z\",\n        \"visible\": true,\n        \"id\": 1018785,\n        \"name\": \"SAML App Test Policy with IP\",\n        \"created_at\": \"2020-01-13T19:53:20.937Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0 (OneLogin Access)\",\n        \"connector_id\": 106486,\n        \"updated_at\": \"2020-06-08T18:28:43.631Z\",\n        \"visible\": true,\n        \"id\": 1019273,\n        \"name\": \"this_is_a_new_app\",\n        \"created_at\": \"2020-01-22T19:21:53.925Z\",\n        \"enforcement_point\": {\n            \"session_expiry_inactivity\": {\n                \"unit\": \"minutes\",\n                \"value\": 10\n            },\n            \"context_root\": \"context\",\n            \"permissions\": \"deny\",\n            \"require_sitewide_authentication\": null,\n            \"use_target_host_header\": null,\n            \"conditions\": null,\n            \"target\": null,\n            \"case_sensitive\": true,\n            \"token\": \"d9700ca292417b8078e1d3da3931355b382e3d51\",\n            \"session_expiry_fixed\": {\n                \"unit\": \"minutes\",\n                \"value\": 30\n            },\n            \"landing_page\": null,\n            \"resources\": [\n                {\n                    \"permissions\": \"allow\",\n                    \"conditions\": null,\n                    \"require_auth\": false,\n                    \"path\": \"/\",\n                    \"resource_id\": 786,\n                    \"is_path_regex\": null\n                }\n            ],\n            \"vhost\": null\n        },\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 110016,\n        \"updated_at\": \"2020-03-10T15:43:24.766Z\",\n        \"visible\": true,\n        \"id\": 1021109,\n        \"name\": \"SAML with Policy\",\n        \"created_at\": \"2020-03-10T15:41:19.185Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"prueba\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 4513,\n        \"updated_at\": \"2020-08-11T02:17:20.812Z\",\n        \"visible\": true,\n        \"id\": 1029584,\n        \"name\": \"Zendesk App API Test\",\n        \"created_at\": \"2020-06-08T17:37:30.861Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T20:23:18.942Z\",\n        \"visible\": true,\n        \"id\": 1029965,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T20:23:18.429Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T20:23:21.041Z\",\n        \"visible\": true,\n        \"id\": 1029966,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T20:23:18.701Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T20:31:55.410Z\",\n        \"visible\": true,\n        \"id\": 1029967,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T20:31:54.486Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T20:31:55.993Z\",\n        \"visible\": true,\n        \"id\": 1029968,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T20:31:55.005Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:01:42.604Z\",\n        \"visible\": false,\n        \"id\": 1029969,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:01:42.604Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:01:43.189Z\",\n        \"visible\": false,\n        \"id\": 1029970,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:01:43.189Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:05:10.793Z\",\n        \"visible\": false,\n        \"id\": 1029971,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:05:10.793Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:05:11.190Z\",\n        \"visible\": false,\n        \"id\": 1029972,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:05:11.190Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:18:56.214Z\",\n        \"visible\": false,\n        \"id\": 1029973,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:18:56.214Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:18:56.607Z\",\n        \"visible\": false,\n        \"id\": 1029974,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:18:56.607Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:24:08.754Z\",\n        \"visible\": false,\n        \"id\": 1029975,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:24:08.754Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T22:24:09.257Z\",\n        \"visible\": false,\n        \"id\": 1029976,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T22:24:09.257Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:00:08.181Z\",\n        \"visible\": true,\n        \"id\": 1029977,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:00:07.333Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:00:08.839Z\",\n        \"visible\": true,\n        \"id\": 1029978,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:00:07.767Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:04:55.097Z\",\n        \"visible\": true,\n        \"id\": 1029979,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:04:54.387Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:04:55.535Z\",\n        \"visible\": true,\n        \"id\": 1029980,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:04:54.781Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:32:13.109Z\",\n        \"visible\": true,\n        \"id\": 1029987,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:32:12.184Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:32:14.737Z\",\n        \"visible\": true,\n        \"id\": 1029988,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:32:12.697Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:44:39.754Z\",\n        \"visible\": false,\n        \"id\": 1029989,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T23:44:39.754Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:44:40.191Z\",\n        \"visible\": false,\n        \"id\": 1029990,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T23:44:40.191Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:45:29.170Z\",\n        \"visible\": true,\n        \"id\": 1029991,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:45:28.239Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:45:30.444Z\",\n        \"visible\": true,\n        \"id\": 1029992,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:45:28.946Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:58:33.052Z\",\n        \"visible\": true,\n        \"id\": 1029993,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:58:32.031Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:58:33.502Z\",\n        \"visible\": true,\n        \"id\": 1029994,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:58:32.542Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:59:00.064Z\",\n        \"visible\": false,\n        \"id\": 1029995,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-22T23:59:00.064Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:59:29.034Z\",\n        \"visible\": true,\n        \"id\": 1029996,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:59:28.188Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-22T23:59:29.474Z\",\n        \"visible\": true,\n        \"id\": 1029997,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-22T23:59:28.813Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T00:05:55.063Z\",\n        \"visible\": true,\n        \"id\": 1029998,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T00:05:54.188Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T00:05:54.495Z\",\n        \"visible\": false,\n        \"id\": 1029999,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-23T00:05:54.495Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:19:08.600Z\",\n        \"visible\": true,\n        \"id\": 1030000,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:19:07.722Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:19:09.124Z\",\n        \"visible\": true,\n        \"id\": 1030001,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:19:08.133Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:25:02.842Z\",\n        \"visible\": true,\n        \"id\": 1030002,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:21:42.823Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:21:43.229Z\",\n        \"visible\": false,\n        \"id\": 1030003,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-23T04:21:43.229Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:25:33.876Z\",\n        \"visible\": true,\n        \"id\": 1030004,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:25:33.243Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:25:34.319Z\",\n        \"visible\": true,\n        \"id\": 1030005,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:25:33.481Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:37:26.224Z\",\n        \"visible\": true,\n        \"id\": 1030006,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:37:25.582Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:37:25.994Z\",\n        \"visible\": false,\n        \"id\": 1030007,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-09-23T04:37:25.994Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:39:02.355Z\",\n        \"visible\": true,\n        \"id\": 1030008,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:38:59.799Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:39:04.178Z\",\n        \"visible\": true,\n        \"id\": 1030009,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:39:00.925Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:51:07.620Z\",\n        \"visible\": true,\n        \"id\": 1030010,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:51:06.722Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:51:08.085Z\",\n        \"visible\": true,\n        \"id\": 1030011,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:51:07.190Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:57:59.229Z\",\n        \"visible\": true,\n        \"id\": 1030012,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:57:58.428Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T04:57:59.936Z\",\n        \"visible\": true,\n        \"id\": 1030013,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T04:57:58.838Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T05:04:54.729Z\",\n        \"visible\": true,\n        \"id\": 1030014,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T05:04:54.086Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T05:04:55.209Z\",\n        \"visible\": true,\n        \"id\": 1030015,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T05:04:54.335Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T23:33:43.360Z\",\n        \"visible\": true,\n        \"id\": 1030019,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T23:33:42.741Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-09-23T23:33:44.003Z\",\n        \"visible\": true,\n        \"id\": 1030020,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-09-23T23:33:42.977Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-06T00:27:49.175Z\",\n        \"visible\": true,\n        \"id\": 1030539,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-06T00:27:45.519Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-06T00:27:50.858Z\",\n        \"visible\": true,\n        \"id\": 1030540,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-06T00:27:47.226Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-09T19:29:36.426Z\",\n        \"visible\": true,\n        \"id\": 1030549,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-09T19:29:35.398Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-09T19:29:36.941Z\",\n        \"visible\": true,\n        \"id\": 1030550,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-09T19:29:35.968Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-11T21:19:17.957Z\",\n        \"visible\": true,\n        \"id\": 1030553,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-11T21:19:16.822Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-11T21:19:17.568Z\",\n        \"visible\": false,\n        \"id\": 1030554,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-10-11T21:19:17.568Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-11T21:20:32.241Z\",\n        \"visible\": true,\n        \"id\": 1030555,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-11T21:20:31.343Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-11T21:20:31.748Z\",\n        \"visible\": false,\n        \"id\": 1030556,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-10-11T21:20:31.748Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-12T22:51:54.684Z\",\n        \"visible\": true,\n        \"id\": 1030626,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-12T22:51:54.023Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-12T22:51:54.236Z\",\n        \"visible\": false,\n        \"id\": 1030627,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-10-12T22:51:54.236Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-12T23:15:45.845Z\",\n        \"visible\": true,\n        \"id\": 1030652,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-12T23:15:44.657Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-12T23:15:45.374Z\",\n        \"visible\": false,\n        \"id\": 1030653,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr)\",\n        \"created_at\": \"2020-10-12T23:15:45.374Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-15T17:23:06.952Z\",\n        \"visible\": true,\n        \"id\": 1030684,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-15T17:23:05.967Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-15T17:23:07.630Z\",\n        \"visible\": true,\n        \"id\": 1030685,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-15T17:23:06.561Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-15T17:25:06.523Z\",\n        \"visible\": true,\n        \"id\": 1030686,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-15T17:25:05.833Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-15T17:25:07.086Z\",\n        \"visible\": true,\n        \"id\": 1030687,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-15T17:25:06.079Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-15T17:47:48.320Z\",\n        \"visible\": true,\n        \"id\": 1030688,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-15T17:47:47.501Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-15T17:47:49.073Z\",\n        \"visible\": true,\n        \"id\": 1030689,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-15T17:47:48.033Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-19T19:33:30.977Z\",\n        \"visible\": true,\n        \"id\": 1030743,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-19T19:33:30.060Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-19T19:33:31.435Z\",\n        \"visible\": true,\n        \"id\": 1030744,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-19T19:33:30.461Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-19T19:46:42.756Z\",\n        \"visible\": true,\n        \"id\": 1030745,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-19T19:46:42.025Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-19T19:46:43.211Z\",\n        \"visible\": true,\n        \"id\": 1030746,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-19T19:46:42.257Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-19T23:17:37.931Z\",\n        \"visible\": true,\n        \"id\": 1030752,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-19T23:17:37.039Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-19T23:17:38.546Z\",\n        \"visible\": true,\n        \"id\": 1030753,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-19T23:17:37.631Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-20T01:38:04.176Z\",\n        \"visible\": true,\n        \"id\": 1030759,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-20T01:38:03.475Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-20T01:38:04.797Z\",\n        \"visible\": true,\n        \"id\": 1030760,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-20T01:38:03.879Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-21T20:00:27.401Z\",\n        \"visible\": true,\n        \"id\": 1031026,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-21T20:00:26.180Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-10-21T20:00:28.600Z\",\n        \"visible\": true,\n        \"id\": 1031027,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-10-21T20:00:26.464Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T01:04:28.986Z\",\n        \"visible\": true,\n        \"id\": 1031162,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T01:04:28.434Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T01:04:29.765Z\",\n        \"visible\": true,\n        \"id\": 1031163,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T01:04:28.729Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:14:48.861Z\",\n        \"visible\": true,\n        \"id\": 1031164,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:14:48.192Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:14:49.369Z\",\n        \"visible\": true,\n        \"id\": 1031165,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:14:48.445Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:24:50.947Z\",\n        \"visible\": true,\n        \"id\": 1031166,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:24:50.258Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:24:51.564Z\",\n        \"visible\": true,\n        \"id\": 1031167,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:24:50.691Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:26:59.511Z\",\n        \"visible\": true,\n        \"id\": 1031168,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:26:58.644Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:26:59.993Z\",\n        \"visible\": true,\n        \"id\": 1031169,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:26:59.059Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:27:31.591Z\",\n        \"visible\": true,\n        \"id\": 1031170,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:27:30.900Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-23T23:23:14.861Z\",\n        \"visible\": true,\n        \"id\": 1031171,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:27:31.155Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:29:19.708Z\",\n        \"visible\": true,\n        \"id\": 1031172,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:29:18.694Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:29:20.162Z\",\n        \"visible\": true,\n        \"id\": 1031173,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:29:19.203Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:30:00.189Z\",\n        \"visible\": true,\n        \"id\": 1031174,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:29:59.130Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:30:00.837Z\",\n        \"visible\": true,\n        \"id\": 1031175,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:29:59.609Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:31:39.963Z\",\n        \"visible\": true,\n        \"id\": 1031176,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:31:39.253Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:31:40.429Z\",\n        \"visible\": true,\n        \"id\": 1031177,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:31:39.694Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:44:25.957Z\",\n        \"visible\": true,\n        \"id\": 1031182,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:44:25.440Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:44:26.395Z\",\n        \"visible\": true,\n        \"id\": 1031183,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:44:25.706Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:44:47.394Z\",\n        \"visible\": true,\n        \"id\": 1031184,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:44:46.682Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T02:44:48.468Z\",\n        \"visible\": true,\n        \"id\": 1031185,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T02:44:46.964Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T03:32:54.260Z\",\n        \"visible\": true,\n        \"id\": 1031196,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T03:29:12.669Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2020-11-20T03:29:14.157Z\",\n        \"visible\": true,\n        \"id\": 1031197,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2020-11-20T03:29:12.922Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T00:57:35.749Z\",\n        \"visible\": true,\n        \"id\": 1032172,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T00:57:34.673Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T00:57:36.657Z\",\n        \"visible\": true,\n        \"id\": 1032173,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T00:57:35.357Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:24:52.962Z\",\n        \"visible\": true,\n        \"id\": 1032202,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:24:52.142Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:24:53.410Z\",\n        \"visible\": true,\n        \"id\": 1032203,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:24:52.553Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:26:29.993Z\",\n        \"visible\": true,\n        \"id\": 1032204,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:26:28.992Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:26:30.918Z\",\n        \"visible\": true,\n        \"id\": 1032205,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:26:29.760Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:44:16.039Z\",\n        \"visible\": true,\n        \"id\": 1032206,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:44:15.511Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:44:16.491Z\",\n        \"visible\": true,\n        \"id\": 1032207,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:44:15.785Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:47:32.130Z\",\n        \"visible\": true,\n        \"id\": 1032208,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:47:31.444Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:47:33.282Z\",\n        \"visible\": true,\n        \"id\": 1032209,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:47:31.713Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:48:13.484Z\",\n        \"visible\": true,\n        \"id\": 1032210,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:48:12.191Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-01-07T03:48:14.696Z\",\n        \"visible\": true,\n        \"id\": 1032211,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-01-07T03:48:12.673Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-11T02:05:11.696Z\",\n        \"visible\": true,\n        \"id\": 1032483,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-11T02:05:10.073Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-11T02:05:12.129Z\",\n        \"visible\": true,\n        \"id\": 1032484,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-11T02:05:10.537Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-11T02:06:18.017Z\",\n        \"visible\": true,\n        \"id\": 1032485,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-11T02:06:16.840Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-11T02:06:18.449Z\",\n        \"visible\": true,\n        \"id\": 1032486,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-11T02:06:17.293Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T16:45:27.864Z\",\n        \"visible\": true,\n        \"id\": 1032856,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T16:45:26.852Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T16:45:36.847Z\",\n        \"visible\": true,\n        \"id\": 1032857,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T16:45:27.184Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T16:49:30.747Z\",\n        \"visible\": true,\n        \"id\": 1032858,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T16:49:29.533Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T16:49:39.512Z\",\n        \"visible\": true,\n        \"id\": 1032859,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T16:49:29.971Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T16:56:01.467Z\",\n        \"visible\": true,\n        \"id\": 1032860,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T16:56:00.473Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T16:56:10.394Z\",\n        \"visible\": true,\n        \"id\": 1032861,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T16:56:00.740Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T17:46:00.692Z\",\n        \"visible\": true,\n        \"id\": 1032862,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T17:45:59.915Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T17:46:09.331Z\",\n        \"visible\": true,\n        \"id\": 1032863,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T17:46:00.208Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T20:18:09.423Z\",\n        \"visible\": true,\n        \"id\": 1032865,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T20:18:07.511Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T20:18:18.105Z\",\n        \"visible\": true,\n        \"id\": 1032866,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T20:18:08.041Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T21:14:40.696Z\",\n        \"visible\": true,\n        \"id\": 1032867,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T21:14:39.063Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-02-26T21:14:49.367Z\",\n        \"visible\": true,\n        \"id\": 1032868,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-02-26T21:14:39.674Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-03-17T22:06:07.258Z\",\n        \"visible\": true,\n        \"id\": 1035017,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-03-17T22:06:06.339Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-03-17T22:06:07.753Z\",\n        \"visible\": true,\n        \"id\": 1035018,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-03-17T22:06:06.901Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-03-17T22:06:32.285Z\",\n        \"visible\": true,\n        \"id\": 1035019,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-03-17T22:06:31.240Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-03-17T22:06:32.544Z\",\n        \"visible\": true,\n        \"id\": 1035020,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-03-17T22:06:31.438Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-03-17T22:14:18.112Z\",\n        \"visible\": true,\n        \"id\": 1035029,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-03-17T22:14:17.053Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-03-17T22:14:18.557Z\",\n        \"visible\": true,\n        \"id\": 1035030,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-03-17T22:14:17.474Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-14T17:20:59.223Z\",\n        \"visible\": true,\n        \"id\": 1047309,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-14T17:20:58.135Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-14T17:20:59.901Z\",\n        \"visible\": true,\n        \"id\": 1047310,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-14T17:20:58.511Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:10:12.956Z\",\n        \"visible\": true,\n        \"id\": 1051194,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:10:12.014Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:10:13.349Z\",\n        \"visible\": true,\n        \"id\": 1051195,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:10:12.197Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:21:10.658Z\",\n        \"visible\": true,\n        \"id\": 1051219,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:21:09.749Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:21:10.885Z\",\n        \"visible\": true,\n        \"id\": 1051220,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:21:09.952Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:55:44.091Z\",\n        \"visible\": true,\n        \"id\": 1051234,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:55:43.170Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:55:44.280Z\",\n        \"visible\": true,\n        \"id\": 1051235,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:55:43.512Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:56:34.157Z\",\n        \"visible\": true,\n        \"id\": 1051236,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:56:33.454Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:56:34.646Z\",\n        \"visible\": true,\n        \"id\": 1051237,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:56:33.784Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:57:18.663Z\",\n        \"visible\": true,\n        \"id\": 1051238,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:57:17.985Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:57:19.038Z\",\n        \"visible\": true,\n        \"id\": 1051239,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:57:18.342Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:57:47.088Z\",\n        \"visible\": true,\n        \"id\": 1051240,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:57:46.423Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-22T22:57:47.296Z\",\n        \"visible\": true,\n        \"id\": 1051241,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-22T22:57:46.597Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-23T01:48:50.579Z\",\n        \"visible\": true,\n        \"id\": 1051375,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-23T01:48:49.720Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-23T01:48:50.949Z\",\n        \"visible\": true,\n        \"id\": 1051376,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-23T01:48:50.121Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-27T23:10:58.445Z\",\n        \"visible\": true,\n        \"id\": 1053554,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-27T23:10:57.726Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-27T23:10:58.815Z\",\n        \"visible\": true,\n        \"id\": 1053555,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-27T23:10:57.912Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-27T23:14:22.567Z\",\n        \"visible\": true,\n        \"id\": 1053556,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-27T23:14:22.071Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-27T23:14:22.935Z\",\n        \"visible\": true,\n        \"id\": 1053557,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-27T23:14:22.246Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-27T23:15:18.646Z\",\n        \"visible\": true,\n        \"id\": 1053560,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-27T23:15:17.773Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-27T23:15:18.907Z\",\n        \"visible\": true,\n        \"id\": 1053561,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-27T23:15:18.168Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-30T00:45:12.490Z\",\n        \"visible\": true,\n        \"id\": 1054508,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-30T00:45:11.615Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-30T00:45:12.704Z\",\n        \"visible\": true,\n        \"id\": 1054509,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-30T00:45:11.789Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-30T00:46:33.846Z\",\n        \"visible\": true,\n        \"id\": 1054510,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-30T00:46:33.127Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-04-30T00:46:34.274Z\",\n        \"visible\": true,\n        \"id\": 1054511,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-04-30T00:46:33.341Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-07-30T00:21:40.648Z\",\n        \"visible\": true,\n        \"id\": 1110487,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-07-30T00:21:40.020Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-07-30T00:21:40.833Z\",\n        \"visible\": true,\n        \"id\": 1110488,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-07-30T00:21:40.177Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-07-30T00:27:44.043Z\",\n        \"visible\": true,\n        \"id\": 1110489,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-07-30T00:27:43.393Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-07-30T00:27:44.217Z\",\n        \"visible\": true,\n        \"id\": 1110490,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-07-30T00:27:43.568Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-07-30T01:10:59.208Z\",\n        \"visible\": true,\n        \"id\": 1110529,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-07-30T01:10:58.587Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-07-30T01:10:59.384Z\",\n        \"visible\": true,\n        \"id\": 1110530,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-07-30T01:10:58.751Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": null,\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 110016,\n        \"updated_at\": \"2021-09-13T17:21:15.754Z\",\n        \"visible\": true,\n        \"id\": 1123500,\n        \"name\": \"redundant\",\n        \"created_at\": \"2021-08-14T03:24:52.124Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-09-03T18:36:35.927Z\",\n        \"visible\": true,\n        \"id\": 1134099,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-09-03T18:36:34.572Z\",\n        \"auth_method\": 2\n    },\n    {\n        \"description\": \"testing\",\n        \"auth_method_description\": \"SAML2.0\",\n        \"connector_id\": 11346,\n        \"updated_at\": \"2021-09-03T18:36:36.157Z\",\n        \"visible\": true,\n        \"id\": 1134100,\n        \"name\": \"OneLogin SAML Test (IdP w/ attr) - MODIFIED\",\n        \"created_at\": \"2021-09-03T18:36:35.109Z\",\n        \"auth_method\": 2\n    }\n]"
								}
							]
						},
						{
							"name": "Create App",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.response.code == 201) {",
											"  var jsonData = pm.response.json();",
											"",
											"  pm.environment.set(\"app_id\", jsonData.id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connector_id\": {{connector_id}},\n  \"name\": \"OIDC JIRA App 07\",\n  \"login_config\": 0,\n  \"description\": \"\",\n  \"visible\": true,\n  \"role_ids\": [\n  ],\n  \"configuration\": {\n    \"login_url\": \"http://example.com/login\",\n    \"redirect_uri\": \"https://example.com/callback\",\n    \"access_token_expiration_minutes\": 5,\n    \"refresh_token_expiration_minutes\": 60,\n    \"token_endpoint_auth_method\": 0,\n    \"oidc_application_type\": 0\n  },\n  \"parameters\": {\n    \"EmployeeNumber\": {\n      \"skip_if_blank\": false,\n      \"provisioned_entitlements\": false,\n      \"id\": 92958,\n      \"user_attribute_macros\": \"\",\n      \"attributes_transformations\": null,\n      \"default_values\": null,\n      \"values\": null,\n      \"label\": \"EmployeeNumber\",\n      \"user_attribute_mappings\": \"custom_attribute_employeeNumber\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"apps"
									]
								},
								"description": "Create App"
							},
							"response": [
								{
									"name": "response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"configuration\": {\n        \"signature_algorithm\": \"SHA-1\"\n    },\n    \"connector_id\": 50534,\n    \"description\": \"\",\n    \"name\": \"Amazon Web Services (AWS) Multi Role\",\n    \"parameters\": {\n        \"saml_username\": {\n            \"user_attribute_mappings\": \"email\"\n        }\n    },\n    \"sso\": {\n        \"certificate\": {\n            \"id\": 170216\n        }\n    },\n    \"visible\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/apps?name=&connector_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "connector_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully created OIDC app",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connector_id\": {{connector_id}},\n  \"name\": \"OIDC JIRA App 07\",\n  \"login_config\": 0,\n  \"description\": \"\",\n  \"visible\": true,\n  \"role_ids\": [\n  ],\n  \"configuration\": {\n    \"login_url\": \"http://example.com/login\",\n    \"redirect_uri\": \"https://example.com/callback\",\n    \"access_token_expiration_minutes\": 5,\n    \"refresh_token_expiration_minutes\": 60,\n    \"token_endpoint_auth_method\": 0,\n    \"oidc_application_type\": 0\n  },\n  \"parameters\": {\n    \"EmployeeNumber\": {\n      \"skip_if_blank\": false,\n      \"provisioned_entitlements\": false,\n      \"id\": 92958,\n      \"user_attribute_macros\": \"\",\n      \"attributes_transformations\": null,\n      \"default_values\": null,\n      \"values\": null,\n      \"label\": \"EmployeeNumber\",\n      \"user_attribute_mappings\": \"custom_attribute_employeeNumber\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/apps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "Content-Length",
											"value": "548"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 10 Jun 2021 00:15:58 GMT"
										},
										{
											"key": "Server",
											"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
										},
										{
											"key": "X-Request-Id",
											"value": "815b4b3a-2323-4124-b408-b415605a5de2"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"OIDC JIRA App 07\",\n    \"connector_id\": 135877,\n    \"provisioning\": {\n        \"status\": \"Not Available\",\n        \"enabled\": false\n    },\n    \"updated_at\": \"2021-06-10T00:15:56.528Z\",\n    \"auth_method\": 0,\n    \"auth_method_description\": \"Form-based auth\",\n    \"visible\": true,\n    \"allow_assumed_signin\": false,\n    \"description\": \"\",\n    \"brand_id\": null,\n    \"configuration\": {\n        \"subdomain\": null,\n        \"company\": null\n    },\n    \"login_config\": 1,\n    \"icon_url\": \"/images/missing_connector_icon/square/original.png\",\n    \"notes\": null,\n    \"role_ids\": [],\n    \"parameters\": null,\n    \"policy_id\": null,\n    \"sso\": {},\n    \"tab_id\": null,\n    \"id\": 26,\n    \"created_at\": \"2021-06-10T00:15:56.528Z\"\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connector_id\": {{connector_id}},\n  \"name\": \"OIDC JIRA App 07\",\n  \"login_config\": 1,\n  \"description\": \"\",\n  \"visible\": true,\n  \"role_ids\": [\n  ],\n  \"configuration\": {\n    \"login_url\": \"http://example.com/login\",\n    \"redirect_uri\": \"https://example.com/callback\",\n    \"access_token_expiration_minutes\": 5,\n    \"refresh_token_expiration_minutes\": 60,\n    \"token_endpoint_auth_method\": 0,\n    \"oidc_application_type\": 0\n  },\n  \"parameters\": {\n    \"EmployeeNumber\": {\n      \"skip_if_blank\": false,\n      \"provisioned_entitlements\": false,\n      \"id\": 92958,\n      \"user_attribute_macros\": \"\",\n      \"attributes_transformations\": null,\n      \"default_values\": null,\n      \"values\": null,\n      \"label\": \"EmployeeNumber\",\n      \"user_attribute_mappings\": \"custom_attribute_employeeNumber\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/apps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"apps"
											]
										}
									},
									"status": "Unprocessable Entity",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "Content-Length",
											"value": "129"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 10 Jun 2021 02:52:49 GMT"
										},
										{
											"key": "Server",
											"value": "WEBrick/1.3.1 (Ruby/1.8.7/2014-01-28)"
										},
										{
											"key": "X-Request-Id",
											"value": "d43d51af-525a-4c86-9d09-e78d6507ef32"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 422,\n    \"message\": \"Validation failed: Login config is invalid for this type of app.\",\n    \"name\": \"UnprocessableEntityError\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Connectors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/2/connectors?auth_method=2&limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"connectors"
							],
							"query": [
								{
									"key": "auth_method",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "List Connectors"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/2/connectors?auth_method=2&limit=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"connectors"
									],
									"query": [
										{
											"key": "auth_method",
											"value": "2"
										},
										{
											"key": "limit",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actions\": [\n        {\n            \"action\": \"set_status\",\n            \"value\": [\n                \"2\"\n            ]\n        }\n    ],\n    \"conditions\": [\n        {\n            \"operator\": \">\",\n            \"source\": \"last_login\",\n            \"value\": \"90\"\n        }\n    ],\n    \"enabled\": true,\n    \"match\": \"all\",\n    \"name\": \"Suspend after 90 days inactive\",\n    \"position\": null\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/2/mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"mappings"
							]
						},
						"description": "Create Rule"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"actions\": [\n        {\n            \"action\": \"set_status\",\n            \"value\": [\n                \"2\"\n            ]\n        }\n    ],\n    \"conditions\": [\n        {\n            \"operator\": \">\",\n            \"source\": \"last_login\",\n            \"value\": \"90\"\n        }\n    ],\n    \"enabled\": true,\n    \"match\": \"all\",\n    \"name\": \"Suspend after 90 days inactive\",\n    \"position\": null\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"mappings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "api/1/saml assertion",
			"item": [
				{
					"name": "Generate SAML Assertion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200) {",
									"  var jsonData = pm.response.json();",
									"  jsonData = jsonData.data[0].state_token;",
									"  pm.environment.set(\"state_token\", jsonData);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "ol_use_preprod=true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"password\": \"{{password}}\",\n    \"subdomain\": \"{{subdomain}}\",\n    \"username_or_email\": \"{{username_or_email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/1/saml_assertion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"saml_assertion"
							]
						},
						"description": "Generate SAML Assertion"
					},
					"response": [
						{
							"name": "Using valid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"password\": \"{{password}}\",\n    \"subdomain\": \"{{subdomain}}\",\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"ip_address\": \"{{$randomIP}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Using a blank IP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"password\": \"{{password}}\",\n    \"subdomain\": \"{{subdomain}}\",\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"ip_address\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Using incomplete IP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"password\": \"{{password}}\",\n    \"subdomain\": \"{{subdomain}}\",\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"ip_address\": \"100.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Thu, 29 Apr 2021 22:37:57 GMT"
								},
								{
									"key": "status",
									"value": "400 Bad Request"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "5000"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "4987"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "3356"
								},
								{
									"key": "x-request-id",
									"value": "608B3545-944069C8-2240-0A0D16CD-01BB-31E68-0009"
								},
								{
									"key": "x-runtime",
									"value": "0.275063"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "content-length",
									"value": "105"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": {\n        \"error\": true,\n        \"code\": 400,\n        \"type\": \"bad request\",\n        \"message\": \"A valid IP address must be provided\"\n    }\n}"
						},
						{
							"name": "Using out of range IP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"password\": \"{{password}}\",\n    \"subdomain\": \"{{subdomain}}\",\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"ip_address\": \"999.999.999.999\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Using IPv6",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"password\": \"{{password}}\",\n    \"subdomain\": \"{{subdomain}}\",\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"ip_address\": \"5da4:c64c:f65:51ba:7a13:30ab:d217:73f4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "When password is expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "OAuth2 Access Token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"password\": \"{{password}}\",\n    \"subdomain\": \"{{subdomain}}\",\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"ip_address\": \"{{$randomIP}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 07 May 2021 04:55:32 GMT"
								},
								{
									"key": "status",
									"value": "401 Unauthorized"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "5000"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "4997"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "3588"
								},
								{
									"key": "x-request-id",
									"value": "6094C843-944069C8-7B2B-0A0D177A-01BB-3C0B8-0007"
								},
								{
									"key": "x-runtime",
									"value": "0.595163"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "content-length",
									"value": "110"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": {\n        \"type\": \"Unauthorized\",\n        \"code\": 401,\n        \"message\": \"Authentication Failed: Password expired\",\n        \"error\": true\n    }\n}"
						}
					]
				},
				{
					"name": "Verify Factor SAML",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"device_id\": \"{{device_id}}\",\n    \"otp_token\": \"{{otp_token}}\",\n    \"state_token\": \"{{state_token}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/1/saml_assertion/verify_factor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"saml_assertion",
								"verify_factor"
							]
						},
						"description": "Verify Factor SAML"
					},
					"response": [
						{
							"name": "Successful verification response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"device_id\": \"3036546\",\n    \"otp_token\": \"504160\",\n    \"state_token\": \"{{state_token}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion/verify_factor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion",
										"verify_factor"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "cache-control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Thu, 13 May 2021 01:48:51 GMT"
								},
								{
									"key": "etag",
									"value": "W/\"a2daff6f4e7a7009b2eaef407bb1c4f1\""
								},
								{
									"key": "status",
									"value": "200 OK"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "5000"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "4968"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "2424"
								},
								{
									"key": "x-request-id",
									"value": "609C8582-4C7E88C2-C031-0A0B019E-01BB-F0D47-34FD"
								},
								{
									"key": "x-runtime",
									"value": "1.096102"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "content-length",
									"value": "4404"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains;"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": \"PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIElEPSJSNjM1YWQ0ZDI4OGQ5MTZlOTAyMzJhMTliM2FmZDNjZDQ3OTczOTA5NiIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMjEtMDUtMTNUMDE6NDg6NTFaIiBEZXN0aW5hdGlvbj0ie3JlY2lwaWVudH0iPjxzYW1sOklzc3Vlcj5odHRwczovL2FwcC5vbmVsb2dpbi5jb20vc2FtbC9tZXRhZGF0YS9mODQyM2JmNi1jODU0LTQ3YjEtOGNlMi0zNDEyMzEzOGM5ZWI8L3NhbWw6SXNzdWVyPjxzYW1scDpTdGF0dXM+PHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbHA6U3RhdHVzPjxzYW1sOkFzc2VydGlvbiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIFZlcnNpb249IjIuMCIgSUQ9InBmeDczOTA3MGE4LTA1NjAtNGJkZi03Y2NkLWRlOWFjODFkMTI3NCIgSXNzdWVJbnN0YW50PSIyMDIxLTA1LTEzVDAxOjQ4OjUxWiI+PHNhbWw6SXNzdWVyPmh0dHBzOi8vYXBwLm9uZWxvZ2luLmNvbS9zYW1sL21ldGFkYXRhL2Y4NDIzYmY2LWM4NTQtNDdiMS04Y2UyLTM0MTIzMTM4YzllYjwvc2FtbDpJc3N1ZXI+PGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PGRzOlNpZ25lZEluZm8+PGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIi8+PGRzOlJlZmVyZW5jZSBVUkk9IiNwZng3MzkwNzBhOC0wNTYwLTRiZGYtN2NjZC1kZTlhYzgxZDEyNzQiPjxkczpUcmFuc2Zvcm1zPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48L2RzOlRyYW5zZm9ybXM+PGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNzaGExIi8+PGRzOkRpZ2VzdFZhbHVlPmdRb1gvQldJQ1E3SitLaldReWsxWWRzUGw1RT08L2RzOkRpZ2VzdFZhbHVlPjwvZHM6UmVmZXJlbmNlPjwvZHM6U2lnbmVkSW5mbz48ZHM6U2lnbmF0dXJlVmFsdWU+SWtTbkszVWhvTnFYNDA2TG50Vll6SnkxRkhiejBjSEg3M1hDWnFhOUlJaytYUkVaVkJMdTYvQUVHeGZIY1VHa1U5ay9Vd3U1WWxwdWFFVldYcTRrT3RJcUxNN0ZvNlNVeU5aR3pvQ3FkYkJTcWpLWWhFaXkxeE9ZWm11MmFkWHNtTThRSHM3WmgzVEMyaGk5bTJyU0xFZWYxOHRhRnUvUkR5NHVESnpIc1FBPTwvZHM6U2lnbmF0dXJlVmFsdWU+PGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJQnJUQ0NBYUdnQXdJQkFnSUJBVEFEQmdFQU1HY3hDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJREFwRFlXeHBabTl5Ym1saE1SVXdFd1lEVlFRSERBeFRZVzUwWVNCTmIyNXBZMkV4RVRBUEJnTlZCQW9NQ0U5dVpVeHZaMmx1TVJrd0Z3WURWUVFEREJCaGNIQXViMjVsYkc5bmFXNHVZMjl0TUI0WERURXdNVEV3TkRJek1qWTBPRm9YRFRFMU1URXdOREl6TWpZME9Gb3daekVMTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnTUNrTmhiR2xtYjNKdWFXRXhGVEFUQmdOVkJBY01ERk5oYm5SaElFMXZibWxqWVRFUk1BOEdBMVVFQ2d3SVQyNWxURzluYVc0eEdUQVhCZ05WQkFNTUVHRndjQzV2Ym1Wc2IyZHBiaTVqYjIwd2daOHdEUVlKS29aSWh2Y05BUUVCQlFBRGdZMEFNSUdKQW9HQkFMVVlZYUdXQnU5YVZpVWlMSmxPcDQ5OXZNZE4vY0FUZktHSVU4UVZ6bVRrU1NnbWRicG8rUkNpQWdOeWk1dEM5MnZxN09NQlBERWR2OFlxLy9lRk5kTEo5THFSbk1FNEFTc29xWWJZRmxpU0RxMUR5RlpMMzA5ZzhVeFRtNFQ5NGpIbEEvVGoxWjZaRms1aCtWQ2hyelBuWmxOY3pJSTlNaXhHVGtTOVdUZjdBZ01CQUFFd0F3WUJBQU1CQUE9PTwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhdGE+PC9kczpLZXlJbmZvPjwvZHM6U2lnbmF0dXJlPjxzYW1sOlN1YmplY3Q+PHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4xOm5hbWVpZC1mb3JtYXQ6ZW1haWxBZGRyZXNzIj5yYWRpdXN0ZXN0MUBvbmVsb2dpbi5jb208L3NhbWw6TmFtZUlEPjxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj48c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBOb3RPbk9yQWZ0ZXI9IjIwMjEtMDUtMTNUMDE6NTE6NTFaIiBSZWNpcGllbnQ9IntyZWNpcGllbnR9Ii8+PC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+PC9zYW1sOlN1YmplY3Q+PHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjEtMDUtMTNUMDE6NDU6NTFaIiBOb3RPbk9yQWZ0ZXI9IjIwMjEtMDUtMTNUMDE6NTE6NTFaIj48c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPjxzYW1sOkF1ZGllbmNlPnthdWRpZW5jZX08L3NhbWw6QXVkaWVuY2U+PC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+PC9zYW1sOkNvbmRpdGlvbnM+PHNhbWw6QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDIxLTA1LTEzVDAxOjQ4OjUwWiIgU2Vzc2lvbk5vdE9uT3JBZnRlcj0iMjAyMS0wNS0xNFQwMTo0ODo1MVoiIFNlc3Npb25JbmRleD0iXzRhNjI2ZDAwLTk1YmItMDEzOS1lNDI3LTBhMTBhMWExYjMwMyI+PHNhbWw6QXV0aG5Db250ZXh0PjxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPnVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphYzpjbGFzc2VzOlBhc3N3b3JkUHJvdGVjdGVkVHJhbnNwb3J0PC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPjwvc2FtbDpBdXRobkNvbnRleHQ+PC9zYW1sOkF1dGhuU3RhdGVtZW50Pjwvc2FtbDpBc3NlcnRpb24+PC9zYW1scDpSZXNwb25zZT4KCg==\",\n    \"status\": {\n        \"message\": \"Success\",\n        \"error\": false,\n        \"type\": \"success\",\n        \"code\": 200\n    }\n}"
						},
						{
							"name": "Failed verification response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"device_id\": \"3036546\",\n    \"otp_token\": \"504160\",\n    \"state_token\": \"{{state_token}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/1/saml_assertion/verify_factor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"1",
										"saml_assertion",
										"verify_factor"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Thu, 13 May 2021 01:49:49 GMT"
								},
								{
									"key": "status",
									"value": "401 Unauthorized"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "5000"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "4967"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "2365"
								},
								{
									"key": "x-request-id",
									"value": "609C85BD-4C7E88C2-C047-0A0B0590-01BB-FB027-371F"
								},
								{
									"key": "x-runtime",
									"value": "0.382838"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "content-length",
									"value": "109"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains;"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": {\n        \"message\": \"Failed authentication with this factor\",\n        \"error\": true,\n        \"type\": \"Unauthorized\",\n        \"code\": 401\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "List Rules",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/risk/rules",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"risk",
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Geoblock\",\n  \"description\": \"Block access for users in these countries\",\n  \"type\": \"blacklist\",\n  \"target\": \"location.address.country_iso_code\",\n  \"source\": null,\n  \"filters\": [\"NZ\", \"AU\"]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/risk/rules",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"risk",
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filters\": [\"0.0.0.0/0\",\"::/0\"]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/risk/rules/{{rule_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"risk",
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/risk/rules/{{rule_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"risk",
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Generate Tokens",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// For Convenience",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"A bearer token is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token_type).to.eql(\"bearer\");",
							"});",
							"",
							"var schema = {",
							"  \"properties\": {",
							"    \"access_token\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"refresh_token\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"created_at\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"expires_in\": {",
							"        \"type\": \"integer\"",
							"    },",
							"    \"token_type\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"account_id\": {",
							"        \"type\": \"integer\"",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "ol_use_preprod=true",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"grant_type\":\"client_credentials\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/auth/oauth2/v2/token",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"auth",
						"oauth2",
						"v2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Rate Limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"properties\": {",
							"    \"status\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"error\": {",
							"                \"type\": \"boolean\"",
							"            },",
							"            \"code\": {",
							"                \"type\": \"integer\"",
							"            },",
							"            \"type\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"message\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    },",
							"    \"data\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"X-RateLimit-Limit\":{",
							"                \"type\":\"integer\"",
							"            },",
							"            \"X-RateLimit-Remaining\":{",
							"                \"type\":\"integer\"",
							"            },",
							"            \"X-RateLimit-Reset\":{",
							"                \"type\":\"integer\"",
							"            }            ",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//console.log(pm.request.headers);",
							"//console.log(\"PREPROD COOKIE?: \" + pm.cookies.has('ol_use_preprod'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/auth/rate_limit?testingpreprod={{preprod}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"auth",
						"rate_limit"
					],
					"query": [
						{
							"key": "testingpreprod",
							"value": "{{preprod}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Revoke Tokens",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests ",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"properties\": {",
							"    \"status\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"error\": {",
							"                \"type\": \"boolean\"",
							"            },",
							"            \"code\": {",
							"                \"type\": \"integer\"",
							"            },",
							"            \"type\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"message\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    },",
							"    \"data\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"X-RateLimit-Limit\":{",
							"                \"type\":\"integer\"",
							"            },",
							"            \"X-RateLimit-Remaining\":{",
							"                \"type\":\"integer\"",
							"            },",
							"            \"X-RateLimit-Reset\":{",
							"                \"type\":\"integer\"",
							"            }            ",
							"        }",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"access_token\":\"{{access_token}}\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/auth/oauth2/revoke",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"auth",
						"oauth2",
						"revoke"
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate Tokens (Url Encoded)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// For Convenience",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"A bearer token is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token_type).to.eql(\"bearer\");",
							"});",
							"",
							"var schema = {",
							"  \"properties\": {",
							"    \"access_token\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"refresh_token\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"created_at\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"expires_in\": {",
							"        \"type\": \"integer\"",
							"    },",
							"    \"token_type\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"account_id\": {",
							"        \"type\": \"integer\"",
							"    }",
							"  }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{client_secret}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://{{api-domain}}/auth/oauth2/v2/token",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"auth",
						"oauth2",
						"v2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var company = pm.environment.get(\"company_name\");",
							"if(!company) {",
							"    pm.environment.set(\"company_name\", \"{{$randomCompanyName}}\");",
							"}",
							"",
							"var subdomain = pm.environment.get(\"subdomain\");",
							"if(!subdomain) {",
							"    pm.environment.set(\"subdomain\", \"{{$randomDomainName}}\");",
							"}",
							"",
							"var email = pm.environment.get(\"email\");",
							"if(!email) {",
							"    pm.environment.set(\"email\", \"{{$randomEmail}}\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"account\":{\n        \"name\": \"{{$randomCompanyName}}\",\n        \"referrer\": \"{{$randomUrl}}\",\n        \"brand_subdomain\": \"{{$randomDomainWord}}\",\n        \"firstname\": \"{{$randomFirstName}}\",\n        \"lastname\": \"{{$randomLastName}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"email\": \"{{$randomEmail}}\",\n        \"plan\": \"developer\",\n        \"user_password\": \"{{$randomPassword}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/v1/accounts",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"v1",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "List",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/v1/accounts",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"v1",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Brand",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Sample Brand\",\n    \"enabled\": true,\n    \"custom_support_enabled\": true,\n    \"custom_color\": \"#C31A0F\",\n    \"custom_accent_color\": \"#7AC18E\",\n    \"custom_masking_color\": \"#EEFFEE\",\n    \"custom_masking_opacity\": 80,\n    \"enable_custom_label_for_login_screen\": true,\n    \"custom_label_text_for_login_screen\": \"Employee ID\",\n    \"login_instruction_title\": \"Welcome!\",\n    \"login_instruction\": \"Please log in!\",\n    \"hide_onelogin_footer\": true,\n    \"mfa_enrollment_message\": \"You need to enroll in MFA to continue to your portal\",\n    \"background\": \"iVBORw0KGgoAAAANSUhEUgAAAb8AAAG/CAYAAADIE9lyAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAFXxJREFUeNrs3b9vJOd9wOERoVY61rEOt+kEEQGZIoFVcf+Do4EgXXCrwEiRABFlpEshKpWqiNe4Mqy9pEpsQLzSDgwti+CEqDCvYODOS5yU+qj7A5h5jy/lPYt34pI7M++P5wGIlQHDImfX/PD7zjszr52dnTUAUJM1hwAA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QMA8QNA/ABA/ABA/ABA/ABA/AAgba87BNCN26ONrfZl/Qb/E/Mn8+O5Iwmr99rZ2ZmjAK+O2Kh9GcX/OI6vIWpbC/+18M+3evh2TkIUF/7zLL4+bb+O4j8ftdF86p0D8YNXxe0iZBeR21qI262Mf7SLUF58hTg+bcM4864jfuJHfRPceCF025UejtMYw6OFMJoYET8oIHTjhdjlPsX1OS1eRHEmiIgfpBu6iyXKsdB1GsSLGM4cEsQPhondeOFr01Hp3WGM4UwMET/oLng7YpdFDA/aGB45HIgfXC92o/blInh3HZGshM00BwsxdM4Q8YNXBG8cgxe+7jgixXjcfk1jCOcOB+KH4J0vZ1582aRSvpM4FU4tjyJ+CB5CCOJHgcELlx9M4pfgcVkI9xtLo4gfBQRvFKe73cY5PK4u7BydNjbLIH5kFr2dOOHZpclNXOwa3bcsiviR8pQ3iV+mPFYt7BjdNw0ifqQSvXFzvqxpyqOvaXAap8G5w4H40Xf0woS3Z8pjQA9jBGcOBeJHl8Fbj1Ne+LJjk1SEnaJ7bQSnDgXixyqjN4pTnuvySD2C0zgNOi+I+HHj6N1zNMhIOC+4L4KIH6KHCIL4IXqIIOKH6IkeIoj4UUn01mP03nc0qCyCYXfovkMhftQXPZcsUDuXSIgfFYVv0rg4HRYdxgjOHArxo7zojWP0th0NuNSDGMG5QyF+5B+9sMQZzm3YzALf7/mmmDaAew6F+JFv+HbjtOe8HiwnnA+cWAoVP/KK3jhOe5uOBtxIuHn2rqVQ8SPt6Ll0AVbPpRHiR8LhCzednjaWOKErh3EK9FR58SORaS9Ez8NkoR8f2RAjfpj2oEaPm/MNMaZA8cO0B6ZAxA/THtQyBe7YESp+dDfthb8w7eSE9NgRKn50EL6tOO25bg/SFq4LnHhkUvrWHILkwxfu0vJb4YMshPPw83ijCUx+XCN6NrVA3myGET+WDF9Y5jxoPHYIchcujN+xDJoey57phW/SnC9zCh/kLzxCbB7/oMXkxyXR8+ghKNsHdoOKHy+Gb9ScL3Pa1AJlCw/M3bUMKn7Cd74rLITPRetQh3BR/FgAh+Wc37Dhm7QvnwsfVCWs8DgPKH7Vhm/avnzqSECVwh+8v41/ADMAy579Ry9sbAnLnNuOBtC6/2R+vOswiF/J4Rs1NrYA3/WgDaApUPyKDF9Y3581zu8Bl7MRpkfO+fUTvrHwAd8jrAjN4goR4pd9+CaNHZ3A1QN4ZCeo+JUQPjs6gWXcihOgAIpfluHbFz7ghgGcOBTdsOGlm/BNG/foBFbjvSfz46nDYPITPqAmn5oAxU/4AAFE/IQPEEDET/gAAUT8hA8QQMRP+AABFD+EDxBA8UP4AAEUP4QPEMCSuMPLcuELHzC3LANSc9qcPw7pyKEw+QkfUAs3wzb5dRK+nfblM0cCyGAC3GonwLlDYfK7afjCX1JTRwLIZAI8aH9vrTsU4nfT8M0aD6IF8rEZf28hftcK33qc+IQPyC6AcWc64re0WfwLCiBH9+JDtRG/K099U+EDCvC+awAvZ7fnd8O327584kgABflz1wCK36vC55IGoEQugfgjlj3/ED6XNAClcgmE+F0aPjs7gdKFfQw2wIjfC6aNDS5A+e7FfQ3Vq/6cnw0uQIWq3wBTdfza8I3bl8/9/wCoTNgAM2oD+LTWA1Dtsmc8z3fg/wNAhW7V/vuv5nN+B40NLkC9ttshYE/86pr6whu+7bMPVO7DePqnOtWd83OeD+AFVZ7/q2ryW7ieD4Bzt2r8vVjbsmd4g+/4rAO84G5t1/9Vs+wZ72z+qc84wKWquv9nFZNfG75R47Y+AK9S1eUPtSx7ThuXNQB8n81aLn8oftnT7csAllb87c+KnvzicueezzHAUqal/4BrFbyBljsBllP88mexy56WOwFurNjlzyInP8udACtR7C75tYLfMMudADezXerF78Ute7Zv1E778pnPLMBKFHnxe1GTX7x3p4vZAVbnVom/V0tb9gzjuXt3AqzW3dIefVTMsmfc5PJ7n1GATpw8mR+PTH7pmfpsAnTmTknX/hUx+dnkAtCLYja/lDL52eQC0L2w+aWI6S/7+MUx3CYXgH7cK2HzS9bxi5c27PosAvQq++kv98nPnVwA+hfu/DLJ+QfIdsOLSxsABpX1pQ85T35Tnz2AwdzJ+b6fWU5+8WTr5z57AIMKlz6M2gnwqcmvH3s+cwCDC3suspz+spv8TH0Apr8aJz9TH4Dpr57Jz9QHYPqrcfIz9QGY/uqZ/Ex9AKa/Gic/Ux+A6a+eyc/UB2D6q3HyM/UBmP7qiV879W21L9s+UwBZmIjfanhkEUA+7uTwxIekz/l5cgNAlpJ/4kPqk9/EZwggy+lvLH7Xm/o8pR0gX3vidz07jae0A+RqO566Er+S/moA4Hslu3qX5IYXF7UDFCHZi95TnfwmPjMA2QunrnZS/MaSi1/c6HLPZwagCEkufaY4+Zn6AMqxGe/UJX45/pUAQDm/15OKX9zocsfnBKAoO/GUlvi9xMRnBKA4yW18SSZ+8a+CHZ8RgCIlNdykNPm5owtAuZK640tq8QOgXMn8nk8ifvGvgbs+FwBFS2bXZyqTn6kPoHx3UrnmL5X4TXwmAKqQxO/7weMXlzw3fR4AqpDESt/rDgQ5evPNN5q//qsfNe+++xfP/5lXOz7+XfOzn/9789VXXzsYDO350ueT+fHRkN/E4I80ag/CkcmPZWy883bzi/+YNm+8IXrL+vHf/WPzq1//xoFgaPfb+A26+WXQ+MUlz9/7HLDMxPfFf/+X8F3Ts2fPmnf+7IcOBEM7aeM3GvIbGPqcnyVPlhKWOoXv+sKxC5MzDGzwXZ9Dx2/sM8Aywjk+bj49QwIG/f0/WPzivTxd2I5f3FCnSa2TnyVPgHptDvmYoyHjN/beA1RtsCHI5AdAdUPQIPGLu3w8vgjA5FfV5Df2ngNU79ZQlzwMFT9LngAM1oOh4rft/QagGWglsPf4tSPu2HsNwJDD0BCTn/gBMOhQJH4ADK2K+DnfB0A98XO+D4AUhqK+Jz/xA2Dw4Uj8AEhBrxe7r5X8wwGQjTInv3akHTXu5wlAZZPf2HsLwEvc6fP5fn3Gz5InAEkMSeIHQCp660Sf8XNxOwD1xC9udgGAqiY/S54AfJ/eNr2IHwDVTX/iB4D4dWTk/QQglV70Fb9N7ycA1Ux+t0cbljwBqCt+jSVPAK6ul3tA9xE/kx8AV9bHs/1MfgCkpvNr/cQPgNR0vmIofgCkpvNu9BG/O95HAKqJnxtaA1Dj5Cd+ACyr8xXDruO37j0EYFldP92h6/i5xg+A5Pqx5viSk2++eeYgAMnHb+wQs0qPHn3pIIDJz+RHXf7zl581z56Z/qACWZ/zg5UKy54ffvSxAAI38nrH//vbDjGr9otfHjSPvviy+fHf/k2zsfF289ZbP2je+sGfODBQlnHO8YNOfPXV183ev3w8yL/7J7v/0Hyw+/feBMiYZU8AxG9VPMEdgBsY5Tr5ubsLANfV6S3OLHsCUB3xA0D8AED8rm/s8AJwXV1unDT5AZCqzjZOih8A1RE/AMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAMQPAPqO35HDC8B1PZkfz3KM31NvHQC1TX4AIH4AIH4AcLnTLOPX5YlKAIrX6aZJkx8A1RE/AMRvxR47xABcQ9bLnq71AyC5flj2BKA6XcfPLc4AuI5ZzvGz7AlAdZPf3CEGILV+iB8AyXkyP846fpY9AVjWadf/gk7j15bbhhcAltV5O/q41OHU+wjAEjpfNewjfqY/AKqb/Jz3A2AZc5MfAOKXYfzm3kcAUhqaxA+ApDyZH+e/4cUT3QFYwmEf/5K+nupw4v0E4ArmJcVv7v0EoLb4zbyfAKTSC5MfACY/8QNgIKddP82h1/jZ8QnAFfR2U5S1Hn+ox95XAGqLn9ucASB+ACB+ANTqtM8HoPcWP5teAEhlQFrr+Yc79P4CcIleB6S+42fpE4Dq4jfz/gIw9HAkfgAM7XEfz/AbLH7xh3OxOwCDDkZrNfyQAIif+AEgfuIHwEB6P983SPyc9wNg6IForaYfFgDxEz8ABvVkfnxQTfyG+mEBSMpgt7xcG/CHfuh9B6jaYIPQkPGbed8BxK+2+Fn6BKjXyZP58by6+MUf2iUPAKa+qia/YOb9BxC/2uI39f4DVOf0yfx40OFn0Pi1P3x4ftOJzwGAqa+myS+JgwCA+PVt6nMAUI3TFG50Mnj8LH0CmPpqnPySORgAiF+fpj4PAMU7TeXezknEz9InQBWSGXTWEjoo+z4XAOJXW/yc9wMo10lc5RO/RfFenx5zBFCmpFb31hI7OKY/knf8v79zECDz3+9Jxa+d/qbty6nPCCn75ptvMv/+n3kT6dvDIR9flMPkZ/ojeY+++LJ59izPgHz19f+ZXBnCNLVvKMX42fVJ8v71k59m+X3vffSxN4++naRybV/S8Yu7gQ59XkjZz37+b80n+z/NZgIM3+dP/umfm1/9+jfePKqf+oLXzs7Okvumbo82Ju3Lpz4zpO7NN99o3v3hXzYb77yd7PcYljkfffE/zvUxlD9N7XxfsvGLAXzavtzyuQHIVtjospPiN7aW8EFz7g8gb8n+Hk85flOfG4BshY0uM/FbUlwjfuDzA5ClvZS/ubXED57pDyA/p/GmJeJ3zekvjMwuewDIS/J7NtYcRABWOfWJ32qmv3BnAA+6BcjDQft7+6n4rcaezxOA39dVxS+eODX9AaTtQYp3c8l58jP9Afg9XV/8TH8Apr4aJz/TH4Dfz/XFz/QHYOqrcfIz/QH4vVxf/Ex/AKa+Gic/0x+A38f1xc/0B2Dqq3HyCyY+dwCDCffw3M31m882fp74ADCo/Rzu4Vni5Bfs+fwB9C6cdsr6iTtZxy9Of572DtDz4JHz1FfC5Hcx/Z36LAL04nHqT2mvIn5xp5EH3gL0Y7eEH+K1s7OzIt6N26ONEME7PpcAnQmXNkxK+EHWCnpTdn0uATqT9aUNxcav/WvkoHHpA0BXst/kUurkF0wam18AVi1scilqb0VR8bP5BaATxZ1WKmbDy6Lbo42j9mXT5xXgxu63g0Vx8Vsr9M2y+QXg5sJppL0Sf7Ai4xfv/HLf5xbgRiYlbXKpYfJr4l8rHnsEcD0P4y76IhUbv/jXysTnF2Bpp6X//ix58rP8CXA9xS53VhG/aK+x/AlwVUUvd1YTP8ufAFdW/HJnTZOf5U+Aqyl+ufNCkRe5v4yL3wFeqsiL2aue/Bb/qvH5BviOx02hF7OLX/N8+TNMfh/4nAO8OBjUstxZ6+TXxDuTP/RZB3jugzgYVGWt0jd70rj8AeBhaY8qEr9XT39hvN/xuQcqdtJUvA+i1snP+T+gdju1necTvz8E0Pk/oEZVnucTvxeFsf+xwwBU4kGt5/nE78Xp7+L2Z6f+PwEULvyh72Hf4vdtAI8aF8ADZQt/4Fd9nk/8Lg9guIv5R44EUKgQvrnDIH6XBXCvfXngSACFeS/e4B/xe6mwHm4DDFCKsMFl6jC8qKqnOlzV7dHGevsSlgduORpAxg7b8I0dBpPflcQTwuEDYwcokKuwguVOVuK3dADtAAVyZWen+N0ogGEH6HuOBJBZ+MZ2dorfTQM4bV/uOxJAJia137pM/FYXwLAD1CUQQOreiytWiN/KAjgRQCDx8E0dBvHrgmsAgRS5lk/8Op3+Li6BEEAgpfBNHAbxE0BA+BA/AQSED/ETQED4xA8BBIRP/BBAQPjEDwEEhE/8EEBA+MQPAQSET/wEUAAB4RO/KgP40NEArukD4evOa2dnZ45Ch26PNqbtyz1HAliCm1Sb/LKfAsNfbp4HCFzFqfCZ/EqbAEMEP3UkgFeEb+xBtCa/0ibA8Jfcj+IHHGDRY+Ez+ZU+AW61L7P265ajASyE76lDIX6lB3A9BnDT0YCquZRhIJY9B7BwKcQDRwOq5VIGk1/VU+Be+/KhIwHVCOf9J234DhwK8as9gDvty7RxHhBK9ziGz8aWgVn2TED8C3DcuCUalCzc8cmOTpMfl0yA63ECvOtoQFE+aqO35zCIH6+O4G778okjAdkL5/d22vDNHArx42oBDNcDhuXQO44GZOkwhs/1e+LHkgG0DAp5sswpfqwggpZBIQ8nzfluzplDIX6sJoBbcQp0VxhI08MYPsuc4kcHEdxvX953JCAZYVPLrscQiR/dB3Acp0CbYWBYh3HamzsU4kc/AQybYfZMgTDYtLfXRm/foRA/TIFg2kP8MAWCaQ/xwxQIeQo7OXdNe+JH2hEMU2C4NtBTIuBmTmL0PH5I/MgkgKM4BW47GnAt95vzZU7X7YkfGUYwPCswnKOwFApXcxinPY8eEj8yD2DYELPbWAqFV7HEKX4UGsFRc74r9J6jAd8KuzjD6si+JU7xo+wIjmMEnQ+kdg/itCd64kdlEZw2zgdSHxeqi5/4ieDGJE6CIkgN0dvzyCHEDxFE9BA/EEFED/FDBEUQ0UP8EEEQPcSPeiIY7hYTLpR3iQSpCZcs7LsrC+JHlxEcty9hGnSxPEMKF6dPY/TmDgfiR18RHMUIum0afQq3Idtrvw5cnI74MXQIJzGElkTpSljanDqfh/iRYgS34iS4YxpkRVPeNEZv7nAgfpgGKVU4l3dgykP8yD2CozgJhonQ5RK8zGGc8pzLQ/woLoRbcRrcEUJajxeCN3c4ED+EEMED8aOSEI7br01HpDhhSfNA8BA/eHkIR3EaDCG864hk6WLTyqxxDg/xg2vF8CKEpsL0p7uL2LnNGOIHKwzh+sJUuCWGg8fuKMZu5nAgftBvDMcLMXRNYTdOY+hC5GZih/hBekG8COGW6fDGU93zL8uYiB/kG8RR/LqIo9uvnd8+7Gjhay50iB/UFcUQxPUCwxgCN1/4EjnET/zgpWFcjOH6wj83MZYpXJgfLhi/uIxgFl+/DZ1r6kD8oOsJctFiKG9i9kf/+amJDcQPAJa25hAAIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AIH4AiB8AiB8AiB8AiB8AiB8ApO3/BRgAt/sE3Me4zZAAAAAASUVORK5CYII=\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/branding/brands",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"branding",
						"brands"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create a new Account Brand"
			},
			"response": []
		},
		{
			"name": "Update Brand",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"custom_color\": \"#beeeef\",\n    \"custom_accent_color\": \"#feeeeb\",\n    \"enable_custom_label_for_login_screen\": true,\n    \"custom_label_text_for_login_screen\": \"YOUR TRUE NAME\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/branding/brands/:brand_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"branding",
						"brands",
						":brand_id"
					],
					"variable": [
						{
							"key": "brand_id",
							"value": "{{brand_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Brand",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/branding/brands/:brand_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"branding",
						"brands",
						":brand_id"
					],
					"variable": [
						{
							"key": "brand_id",
							"value": "{{brand_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Brand",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/branding/brands/:brand_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"branding",
						"brands",
						":brand_id"
					],
					"variable": [
						{
							"key": "brand_id",
							"value": "{{brand_id}}"
						}
					]
				},
				"description": "Retrieve a single brand via ID"
			},
			"response": []
		},
		{
			"name": "List Brands",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/branding/brands",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"branding",
						"brands"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Account",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"account\": {\n        \"name\": \"OL PenTest Account 2\",\n        \"referrer\": \"https://www.onelogin.com\",\n        \"brand_subdomain\": \"olpentest4\",\n        \"firstname\": \"Test\",\n        \"lastname\": \"User\",\n        \"phone\": \"0123456789\",\n        \"email\": \"gregory.wadley@onelogin.com\",\n        \"plan\": \"unlimited\",\n        \"user_password\": \"Onelog123in\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/v1/accounts",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"v1",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Connectors",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 1s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"array\",",
							"    \"items\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"id\": {",
							"                \"type\": \"integer\"",
							"            },",
							"            \"auth_method\": {",
							"                \"type\": \"integer\"",
							"            },                ",
							"            \"name\": {",
							"                \"type\": \"string\"",
							"            },                ",
							"            \"allows_new_parameters\": {",
							"                \"type\": \"boolean\"",
							"            },",
							"            \"icon_url\": {",
							"                \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/2/connectors",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"connectors"
					],
					"query": [
						{
							"key": "auth_method",
							"value": "2",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Apps",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 1s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"array\",",
							"    \"items\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"id\": {",
							"                \"type\": \"integer\"",
							"            },",
							"            \"connector_id\": {",
							"                \"type\": \"integer\"",
							"            },",
							"            \"auth_method\": {",
							"                \"type\": \"integer\"",
							"            },                ",
							"            \"name\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"visible\": {",
							"                \"type\": \"boolean\"",
							"            },",
							"            \"auth_method_description\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"created_at\": {",
							"                \"type\": \"string\",",
							"                \"format\": \"date-time\"",
							"            },",
							"            \"updated_at\": {",
							"                \"type\": \"string\",",
							"                \"format\": \"date-time\"",
							"            },",
							"            \"description\": {",
							"                \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"enforcement_point\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"target\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"context_root\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"vhost\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"case_sensitive\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"session_expiry_inactivity\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"value\": {",
							"                                \"type\": \"integer\"",
							"                            },",
							"                            \"unit\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    },",
							"                    \"landing_page\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"conditions\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"resources\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"object\",",
							"                            \"properties\": {",
							"                                \"conditions\": {",
							"                                    \"type\": [\"string\", \"null\"]",
							"                                },",
							"                                \"permissions\": {",
							"                                    \"type\": \"string\"",
							"                                },",
							"                                \"is_path_regex\": {",
							"                                    \"type\": [\"string\", \"null\"]",
							"                                },",
							"                                \"resource_id\": {",
							"                                    \"type\": \"integer\"",
							"                                },",
							"                                \"require_auth\": {",
							"                                    \"type\": \"boolean\"",
							"                                },",
							"                                \"path\": {",
							"                                    \"type\": \"string\"",
							"                                }",
							"                            }",
							"                        }",
							"                    },",
							"                    \"permissions\": {",
							"                        \"type\": \"string\",",
							"                        \"enum\": [\"deny\", \"allow\", \"conditional\"]",
							"                    },",
							"                    \"use_target_host_header\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"require_sitewide_authentication\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"token\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"session_expiry_fixed\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"unit\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"value\": {",
							"                                \"type\": \"integer\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/2/apps",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"apps"
					],
					"query": [
						{
							"key": "connector_id",
							"value": "",
							"disabled": true
						},
						{
							"key": "auth_method",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "id,name",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create App",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// For Convenience",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"app_id\", jsonData.id);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 1s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"connector_id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"auth_method\": {",
							"            \"type\": \"integer\"",
							"        },                ",
							"        \"auth_method_description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"name\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"visible\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"created_at\": {",
							"            \"type\": \"string\",",
							"            \"format\": \"date-time\"",
							"        },",
							"        \"updated_at\": {",
							"            \"type\": \"string\",",
							"            \"format\": \"date-time\"",
							"        },",
							"        \"description\": {",
							"            \"type\": [\"string\", \"null\"]",
							"        },",
							"        \"tab_id\": {",
							"            \"type\": [\"null\", \"integer\"]",
							"        },",
							"        \"policy_id\": {",
							"            \"type\": [\"null\", \"integer\"]",
							"        },",
							"        \"notes\": {",
							"            \"type\": [\"null\", \"string\"]",
							"        },",
							"        \"role_ids\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"integer\"",
							"            }",
							"        },",
							"        \"icon_url\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"allow_assumed_signin\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"configuration\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"signature_algorithm\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"]",
							"                },",
							"                \"certificate_id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"client_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_secret\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"oidc_encryption_key\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"access_token_expiration_minutes\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"refresh_token_expiration_minutes\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"token_endpoint_auth_method\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"oidc_application_type\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"oidc_api_version\": {",
							"                    \"type\": \"integer\"",
							"                }",
							"            }",
							"        },",
							"        \"parameters\": {",
							"            \"type\": \"object\",",
							"            \"additionalProperties\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"provisioned_entitlements\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"values\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"user_attribute_mappings\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"skip_if_blank\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"user_attribute_macros\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"default_values\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"attribute_transformations\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"label\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"include_in_saml_assertion\": {",
							"                        \"type\": \"boolean\"",
							"                    }",
							"                }",
							"            }",
							"        },",
							"        \"sso\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"certificate\": {",
							"                    \"type\": [\"object\", \"null\"],",
							"                    \"properties\": {",
							"                        \"id\": {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        \"name\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"value\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    }",
							"                },",
							"                \"issuer\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"acs_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"sls_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"metadata_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wsfed_sso_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wstrust_mex_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wstrust_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_secret\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            }",
							"        },",
							"        \"provisioning\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"enabled\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"status\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"Enabled\", \"Available\", \"Not Available\"]",
							"                }",
							"            }",
							"        },",
							"        \"enforcement_point\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"target\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"context_root\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"vhost\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"case_sensitive\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"session_expiry_inactivity\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"value\": {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        \"unit\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    }",
							"                },",
							"                \"landing_page\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"conditions\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"resources\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"conditions\": {",
							"                                \"type\": [\"string\", \"null\"]",
							"                            },",
							"                            \"permissions\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"is_path_regex\": {",
							"                                \"type\": [\"string\", \"null\"]",
							"                            },",
							"                            \"resource_id\": {",
							"                                \"type\": \"integer\"",
							"                            },",
							"                            \"require_auth\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"path\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"permissions\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"deny\", \"allow\", \"conditional\"]",
							"                },",
							"                \"use_target_host_header\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"require_sitewide_authentication\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"token\": {",
							"                    \"type\": [\"string\", \"null\"]",
							"                },",
							"                \"session_expiry_fixed\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"unit\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"value\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "ol_use_preprod=true",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"connector_id\": 50534,\n  \"name\": \"Amazon Web Services (AWS) Multi Role\",\n  \"description\": \"\",\n  \"visible\": true,\n  \"sso\": {\n    \"certificate\": {\n      \"id\": 170216\n    }\n  },\n  \"configuration\": {\n    \"signature_algorithm\": \"SHA-1\"\n  },\n  \"parameters\": {\n    \"saml_username\": {\n      \"user_attribute_mappings\": \"email\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/apps",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"apps"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "connector_id",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get App",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"connector_id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"auth_method\": {",
							"            \"type\": \"integer\"",
							"        },                ",
							"        \"auth_method_description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"name\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"visible\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"created_at\": {",
							"            \"type\": \"string\",",
							"            \"format\": \"date-time\"",
							"        },",
							"        \"updated_at\": {",
							"            \"type\": \"string\",",
							"            \"format\": \"date-time\"",
							"        },",
							"        \"description\": {",
							"            \"type\": [\"string\", \"null\"]",
							"        },",
							"        \"tab_id\": {",
							"            \"type\": [\"null\", \"integer\"]",
							"        },",
							"        \"policy_id\": {",
							"            \"type\": [\"null\", \"integer\"]",
							"        },",
							"        \"notes\": {",
							"            \"type\": [\"null\", \"string\"]",
							"        },",
							"        \"role_ids\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"integer\"",
							"            }",
							"        },",
							"        \"icon_url\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"allow_assumed_signin\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"configuration\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"signature_algorithm\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"]",
							"                },",
							"                \"certificate_id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"client_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_secret\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"oidc_encryption_key\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"access_token_expiration_minutes\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"refresh_token_expiration_minutes\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"token_endpoint_auth_method\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"oidc_application_type\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"oidc_api_version\": {",
							"                    \"type\": \"integer\"",
							"                }",
							"            }",
							"        },",
							"        \"parameters\": {",
							"            \"type\": \"object\",",
							"            \"additionalProperties\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"provisioned_entitlements\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"values\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"user_attribute_mappings\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"skip_if_blank\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"user_attribute_macros\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"default_values\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"attribute_transformations\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"label\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"include_in_saml_assertion\": {",
							"                        \"type\": \"boolean\"",
							"                    }",
							"                }",
							"            }",
							"        },",
							"        \"sso\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"certificate\": {",
							"                    \"type\": [\"object\", \"null\"],",
							"                    \"properties\": {",
							"                        \"id\": {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        \"name\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"value\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    }",
							"                },",
							"                \"issuer\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"acs_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"sls_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"metadata_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wsfed_sso_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wstrust_mex_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wstrust_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_secret\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            }",
							"        },",
							"        \"provisioning\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"enabled\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"status\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"Enabled\", \"Available\", \"Not Available\"]",
							"                }",
							"            }",
							"        },",
							"        \"enforcement_point\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"target\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"context_root\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"vhost\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"case_sensitive\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"session_expiry_inactivity\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"value\": {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        \"unit\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    }",
							"                },",
							"                \"landing_page\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"conditions\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"resources\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"conditions\": {",
							"                                \"type\": [\"string\", \"null\"]",
							"                            },",
							"                            \"permissions\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"is_path_regex\": {",
							"                                \"type\": [\"string\", \"null\"]",
							"                            },",
							"                            \"resource_id\": {",
							"                                \"type\": \"integer\"",
							"                            },",
							"                            \"require_auth\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"path\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"permissions\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"deny\", \"allow\", \"conditional\"]",
							"                },",
							"                \"use_target_host_header\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"require_sitewide_authentication\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"token\": {",
							"                    \"type\": [\"string\", \"null\"]",
							"                },",
							"                \"session_expiry_fixed\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"unit\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"value\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/2/apps/:app_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"apps",
						":app_id"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "connector_id",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "app_id",
							"value": "{{app_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update App",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// Tests ",
							"pm.test(\"Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"connector_id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"auth_method\": {",
							"            \"type\": \"integer\"",
							"        },                ",
							"        \"auth_method_description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"name\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"visible\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"created_at\": {",
							"            \"type\": \"string\",",
							"            \"format\": \"date-time\"",
							"        },",
							"        \"updated_at\": {",
							"            \"type\": \"string\",",
							"            \"format\": \"date-time\"",
							"        },",
							"        \"description\": {",
							"            \"type\": [\"string\", \"null\"]",
							"        },",
							"        \"tab_id\": {",
							"            \"type\": [\"null\", \"integer\"]",
							"        },",
							"        \"policy_id\": {",
							"            \"type\": [\"null\", \"integer\"]",
							"        },",
							"        \"notes\": {",
							"            \"type\": [\"null\", \"string\"]",
							"        },",
							"        \"role_ids\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"integer\"",
							"            }",
							"        },",
							"        \"icon_url\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"allow_assumed_signin\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"configuration\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"signature_algorithm\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"]",
							"                },",
							"                \"certificate_id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"client_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_secret\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"oidc_encryption_key\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"access_token_expiration_minutes\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"refresh_token_expiration_minutes\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"token_endpoint_auth_method\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"oidc_application_type\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"oidc_api_version\": {",
							"                    \"type\": \"integer\"",
							"                }",
							"            }",
							"        },",
							"        \"parameters\": {",
							"            \"type\": \"object\",",
							"            \"additionalProperties\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"provisioned_entitlements\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"values\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"user_attribute_mappings\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"id\": {",
							"                        \"type\": \"integer\"",
							"                    },",
							"                    \"skip_if_blank\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"user_attribute_macros\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"default_values\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"attribute_transformations\": {",
							"                        \"type\": [\"string\", \"null\"]",
							"                    },",
							"                    \"label\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"include_in_saml_assertion\": {",
							"                        \"type\": \"boolean\"",
							"                    }",
							"                }",
							"            }",
							"        },",
							"        \"sso\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"certificate\": {",
							"                    \"type\": [\"object\", \"null\"],",
							"                    \"properties\": {",
							"                        \"id\": {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        \"name\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"value\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    }",
							"                },",
							"                \"issuer\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"acs_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"sls_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"metadata_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wsfed_sso_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wstrust_mex_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"wstrust_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"client_secret\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            }",
							"        },",
							"        \"provisioning\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"enabled\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"status\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"Enabled\", \"Available\", \"Not Available\"]",
							"                }",
							"            }",
							"        },",
							"        \"enforcement_point\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"target\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"context_root\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"vhost\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"case_sensitive\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"session_expiry_inactivity\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"value\": {",
							"                            \"type\": \"integer\"",
							"                        },",
							"                        \"unit\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    }",
							"                },",
							"                \"landing_page\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"conditions\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"resources\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"conditions\": {",
							"                                \"type\": [\"string\", \"null\"]",
							"                            },",
							"                            \"permissions\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"is_path_regex\": {",
							"                                \"type\": [\"string\", \"null\"]",
							"                            },",
							"                            \"resource_id\": {",
							"                                \"type\": \"integer\"",
							"                            },",
							"                            \"require_auth\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"path\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"permissions\": {",
							"                    \"type\": \"string\",",
							"                    \"enum\": [\"deny\", \"allow\", \"conditional\"]",
							"                },",
							"                \"use_target_host_header\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"require_sitewide_authentication\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"token\": {",
							"                    \"type\": [\"string\", \"null\"]",
							"                },",
							"                \"session_expiry_fixed\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"unit\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"value\": {",
							"                            \"type\": \"integer\"",
							"                        }",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test('App attribute is updated', function() {",
							"  pm.expect(jsonData.name).to.be.eql(\"APP UPDATED VIA API\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"APP UPDATED VIA API\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/apps/:app_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"apps",
						":app_id"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "connector_id",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "app_id",
							"value": "{{app_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete App",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Tests ",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"apps",
						"{{app_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Parameter from App",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/parameters/{{parameter_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"apps",
						"{{app_id}}",
						"parameters",
						"{{parameter_id}}"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "connector_id",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get App Users",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "ol_use_preprod=true",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/users",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"apps",
						"{{app_id}}",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Api Auth Servers",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/2/api_authorizations",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"api_authorizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Api Auth Server",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\n    \"name\": \"Contacts API\",\n    \"description\": \"This is an api\",\n    \"configuration\": {\n      \"resource_identifier\": \"http://example.com/contacts\",\n      \"audiences\": [\"http://example.com/contacts\"],\n      \"access_token_expiration_minutes\": 10,\n      \"refresh_token_expiration_minutes\": 30\n    }\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/api_authorizations",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"api_authorizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Api Auth Server",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"api_authorizations",
						"{{api_auth_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Api Auth Server",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\n    \"name\": \"Contacts API\",\n    \"description\": \"This is an api\",\n    \"configuration\": {\n      \"resource_identifier\": \"http://myapi.com/contacts2\",\n      \"audiences\": [\"http://myapi.com/contacts2\"],\n      \"access_token_expiration_minutes\": 15,\n      \"refresh_token_expiration_minutes\": 35\n    }\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"api_authorizations",
						"{{api_auth_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Api Auth Server",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"api_authorizations",
						"{{api_auth_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"postman.setEnvironmentVariable(\"api_key\", jsonData.api_key);",
							"postman.setEnvironmentVariable(\"directory_id\", jsonData.directory_id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/ldap/v2/configuration?version={{ldc_version}}&token={{token}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"ldap",
						"v2",
						"configuration"
					],
					"query": [
						{
							"key": "version",
							"value": "{{ldc_version}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Connectors Shortnames",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/1/connectors/shortname",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"1",
						"connectors",
						"shortname"
					]
				},
				"description": "List Connectors"
			},
			"response": [
				{
					"name": "response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/1/connectors?auth_method=2&limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"connectors"
							],
							"query": [
								{
									"key": "auth_method",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "List Connectors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/2/connectors?auth_method=2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"2",
						"connectors"
					],
					"query": [
						{
							"key": "auth_method",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "2",
							"disabled": true
						}
					]
				},
				"description": "List Connectors"
			},
			"response": [
				{
					"name": "response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/2/connectors?auth_method=2&limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"connectors"
							],
							"query": [
								{
									"key": "auth_method",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Authenticates Desktop User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subdomain\": \"{{subdomain}}\",\n    \"password\": \"{{password}}\",\n    \"username_or_email\": \"{{username}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/v3/authentication/authenticate_desktop",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v3",
						"authentication",
						"authenticate_desktop"
					]
				}
			},
			"response": [
				{
					"name": "Unexpected error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"Steve\",\n    \"lastname\": \"Smith\",\n    \"password\": \"partytime123\",\n    \"password_confirmation\": \"partytime123\",\n    \"username\": \"steve.smith\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v3/authentication/authenticate_desktop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"authentication",
								"authenticate_desktop"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": -62691557,\n \"message\": \"sunt \"\n}"
				},
				{
					"name": "Sample response: Details about the authenticated user",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"Steve\",\n    \"lastname\": \"Smith\",\n    \"password\": \"partytime123\",\n    \"password_confirmation\": \"partytime123\",\n    \"username\": \"steve.smith\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v3/authentication/authenticate_desktop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"authentication",
								"authenticate_desktop"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"id\": -73615250,\n \"name\": \"dolore\",\n \"tag\": \"magna\"\n}"
				}
			]
		},
		{
			"name": "Sample endpoint: Returns details about a particular user",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user?id=<integer>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					],
					"query": [
						{
							"key": "id",
							"value": "<integer>",
							"description": "(Required) ID of the user"
						}
					]
				}
			},
			"response": [
				{
					"name": "Sample response: Details about a user by ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user?id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "id",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "in do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"id\": -56721106,\n \"name\": \"dolore incididunt fugiat\",\n \"tag\": \"proident deserunt eu Excepteur\"\n}"
				},
				{
					"name": "Unexpected error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user?id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "id",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": -97639715,\n \"message\": \"eiusmod cillum esse\"\n}"
				}
			]
		},
		{
			"name": "Get Events",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/events?event_type_id=&client_id=&directory_id=&created_at=&id=&resolution=&since=&until=&user_id=",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"events"
					],
					"query": [
						{
							"key": "event_type_id",
							"value": ""
						},
						{
							"key": "client_id",
							"value": ""
						},
						{
							"key": "directory_id",
							"value": ""
						},
						{
							"key": "created_at",
							"value": ""
						},
						{
							"key": "id",
							"value": ""
						},
						{
							"key": "resolution",
							"value": ""
						},
						{
							"key": "since",
							"value": ""
						},
						{
							"key": "until",
							"value": ""
						},
						{
							"key": "user_id",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Event by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/events/{{event_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"events",
						"{{event_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Event Types",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/events/types",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"events",
						"types"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Groups",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/groups",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/groups/{{group_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"groups",
						"{{group_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send  Invite Link",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"<user_email>\",\n    \"personal_email\": \"<user_personal_email>\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/1/invites/get_invite_link",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"1",
						"invites",
						"get_invite_link"
					]
				},
				"description": "Send  Invite Link"
			},
			"response": [
				{
					"name": "response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"<user_email>\",\n    \"personal_email\": \"<user_personal_email>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/1/invites/get_invite_link",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"1",
								"invites",
								"get_invite_link"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Generate invite link",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\":\"<user_email>\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/invites/get_invite_link",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"invites",
						"get_invite_link"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send  Invite Link",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\":\"<user_email>\",\n  \"personal_email\":\"<user_personal_email>\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/invites/send_invite_link",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"invites",
						"send_invite_link"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Available Factors",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/auth_factors",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"auth_factors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Enroll a Factor",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"factor_id\": {{factor_id}},\n  \"display_name\":  \"Testing Email\",\n  //\"number\": \"{{phone_number}}\",\n  \"verified\": false\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/otp_devices",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"otp_devices"
					]
				},
				"description": "Enroll an Authentication Factor"
			},
			"response": []
		},
		{
			"name": "Verify a Factor",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"state_token\": \"{{state_token}}\",\n\t\"otp_token\": \"{{otp_token}}\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/otp_devices/{{device_id}}/verify",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"otp_devices",
						"{{device_id}}",
						"verify"
					]
				},
				"description": "Verify a Factor"
			},
			"response": []
		},
		{
			"name": "Activate a Factor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"state_token\", jsonData.data[0].state_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"state_token_expires_in\": 300\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/otp_devices/{{device_id}}/trigger",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"otp_devices",
						"{{device_id}}",
						"trigger"
					]
				},
				"description": "Activate a Factor"
			},
			"response": []
		},
		{
			"name": "Get Enrolled Factors",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/otp_devices",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"otp_devices"
					]
				},
				"description": "Get Enrolled Factors"
			},
			"response": []
		},
		{
			"name": "Remove an Enrolled Factor",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/otp_devices/{{device_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"otp_devices",
						"{{device_id}}"
					]
				},
				"description": "Remove an enrolled MFA device for a user"
			},
			"response": []
		},
		{
			"name": "Generate Temp MFA Token",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"expires_in\": \"300\",\n   \"reusable\": false\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/mfa_token",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"mfa_token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Navigation Menu",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/v5/navigation",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"v5",
						"navigation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Inspector",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/oidc/2/auth?scope=openid params&client_id=82249040-56df-0139-a859-02420a0000be1&redirect_uri=https://developers.onelogin.com/openid-connect/inspector&state={{$randomUUID}}&nonce={{$randomUUID}}&response_type=id_token",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"oidc",
						"2",
						"auth"
					],
					"query": [
						{
							"key": "scope",
							"value": "openid params"
						},
						{
							"key": "client_id",
							"value": "82249040-56df-0139-a859-02420a0000be1"
						},
						{
							"key": "redirect_uri",
							"value": "https://developers.onelogin.com/openid-connect/inspector"
						},
						{
							"key": "state",
							"value": "{{$randomUUID}}"
						},
						{
							"key": "nonce",
							"value": "{{$randomUUID}}"
						},
						{
							"key": "response_type",
							"value": "id_token"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate SAML Assertion",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"password\": \"{{password}}\",\n    \"app_id\": \"{{app_id}}\",\n    \"subdomain\":\"{{subdomain}}\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/saml_assertion",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"saml_assertion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Factor SAML",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"otp_token\": \"{{otp_token}}\",\n    \"device_id\": \"{{device_id}}\",\n    \"state_token\": \"{{state_token}}\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/saml_assertion/verify_factor",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"saml_assertion",
						"verify_factor"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Apps",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username_or_email\": \"{{username}}\",\n    \"password\": \"{{password}}\",\n    \"app_id\": \"{{app_id}}\",\n    \"subdomain\":\"{{subdomain}}\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/saml_assertion",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"saml_assertion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Factor SAML",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"otp_token\": \"{{otp_token}}\",\n    \"device_id\": \"{{device_id}}\",\n    \"state_token\": \"{{state_token}}\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/saml_assertion/verify_factor",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"saml_assertion",
						"verify_factor"
					]
				}
			},
			"response": []
		},
		{
			"name": "List",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/2/sandboxes",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"sandboxes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate / Register User via SMS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns MFA\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.mfa.otp_sent).to.eql(true);",
							"});",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"state_token\", jsonData.mfa.state_token);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user_identifier\": \"mike.tester\",\n  \"phone\": \"+155512341234\",\n  \"context\": {\n    \"ip\": \"120.118.218.225\",\n    \"user_agent\": \"Mozilla/5.0 (Windows; U; Windows NT 6.0) AppleWebKit/531.1.0 (KHTML, like Gecko) Chrome/21.0.843.0 Safari/531.1.0\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/smart-mfa/",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"smart-mfa",
						""
					]
				},
				"description": "This request uses minimum required information to validate a new or existing user. If the risk score is above the threshold a one time token will be sent to the users phone via SMS."
			},
			"response": []
		},
		{
			"name": "Validate / Register User via Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"state_token\", jsonData.mfa.state_token);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user_identifier\": \"mike.tester\",\n  \"email\": \"mike.tester@onelogin.com\",\n  \"context\": {\n    \"ip\": \"120.118.218.228\",\n    \"user_agent\": \"Mozilla/5.0 (Windows; U; Windows NT 6.0) AppleWebKit/531.1.0 (KHTML, like Gecko) Chrome/21.0.843.0 Safari/531.1.0\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/smart-mfa/",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"smart-mfa",
						""
					]
				},
				"description": "This request uses minimum required information to validate a new or existing user. If the risk score is above the threshold a one time token will be sent to the users phone via Email."
			},
			"response": []
		},
		{
			"name": "Verify Token",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"state_token\": \"{{state_token}}\",\n\t\"otp_token\": \"7F2164\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/smart-mfa/verify",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"smart-mfa",
						"verify"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 1 - Validate User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user_identifier\": \"{{$randomUserName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"context\": {\n    \"ip\": \"{{$randomIP}}\",\n    \"user_agent\": \"{{$randomUserAgent}}\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/smart-mfa",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"smart-mfa"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_identifier\": \"{{$randomUserName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"context\": {\n    \"ip\": \"{{$randomIP}}\",\n    \"user_agent\": \"{{$randomUserAgent}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/smart-mfa",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"smart-mfa"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-length",
							"value": "760"
						},
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "date",
							"value": "Wed, 08 Sep 2021 06:33:54 GMT"
						},
						{
							"key": "etag",
							"value": "W/\"2f8-2t2jSp7WGDHOIz1/CJZAl2KHu44\""
						},
						{
							"key": "strict-transport-security",
							"value": "max-age=63072000; includeSubDomains;"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						}
					],
					"cookie": [],
					"body": "{\n    \"user_id\": 18384753,\n    \"risk\": {\n        \"score\": 93,\n        \"reasons\": [\n            \"Internet Explorer on Windows is used infrequently\",\n            \"Unknown, Unknown, United States is a new location\",\n            \"United States is a new location\",\n            \"Internet Explorer on Windows has not been used before\",\n            \"Accessed from a new IP address\",\n            \"Accessed from a new browser session\",\n            \"Infrequent access from 4.202.73.13\",\n            \"Infrequent access from Unknown, Unknown, United States\",\n            \"Infrequent access from United States\",\n            \"Infrequent access using Internet Explorer on Windows\",\n            \"Low trust for session\",\n            \"Browser Cookie Expected\"\n        ]\n    },\n    \"mfa\": {\n        \"otp_sent\": true,\n        \"state_token\": \"f312b8a1-7f56-4bdd-9276-afa11e280c6a\",\n        \"expires_at\": \"2021-09-08T06:39:54.582Z\",\n        \"verify_url\": \"https://api.us.onelogin.com/api/2/smart-mfa/verify\",\n        \"factor_type\": \"email\"\n    }\n}"
				}
			]
		},
		{
			"name": "Upsert",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user\": {\n        \"custom\": {\n            \"MemberID\": \"1299080\",\n            \"personid\": \"3671866\",\n            \"middleName\": \"\",\n            \"PasswordHint\": \"Prueba\",\n            \"userstatus\": \"active\"\n        },\n        \"member_of\": \"cn=cap external users,cn=groups,dc=cap,dc=org;cn=labemployee,cn=groups,dc=cap,dc=org\",\n        \"firstname\": \"Gail\",\n        \"external_id\": \"gnez\",\n        \"lastname\": \"Nez\",\n        \"distinguished_name\": \"bshgdagsdhgbckhskjhkjhskjxbjzdciuyisdhxjhaskjhkajskzjsbkAKJHKJHK@ashgdagsdhgbckhskjhkjhskjxbjzdciuyisdhxjhaskjhkajskzjsbkAKJHKJHKJHKJJHBHBCJHDBSJDBHCJDHSCBJHDVJHJCNKMSLKDJHGDJSHCGJHBJBCHGFHGFJHGSDBCBJARTYWUYIUYDETRUQYWOUOIUWHCJHDSHCBJHSYTUYTUHGUYUYNBiu.com\",\n        \"status\": \"1\",\n        \"directory_id\": \"{{directory_id}}\",\n        \"email\": \"test@user.com\",\n        \"ldap_uid\": \"gnez\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/ldap/v2/users?directory_id={{directory_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"ldap",
						"v2",
						"users"
					],
					"query": [
						{
							"key": "directory_id",
							"value": "{{directory_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Digests",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{api-domain}}/api/ldap/v2/users?directory_id={{directory_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"ldap",
						"v2",
						"users"
					],
					"query": [
						{
							"key": "directory_id",
							"value": "{{directory_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upsert",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user\": {\n        \"directory_id\": \"{{directory_id}}\",\n        \"member_of\": \"CN=AirWatch Default,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=AirWatch One Device Policy,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL ASSOCIATES ATLANTA,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL ASSOCIATES,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL ATTORNEYS & ADMIN. DIRECTORS,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL ATTORNEYS ONLY,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL REAL ESTATE ASSOCIATES,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL REAL ESTATE ATTORNEYS,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL REAL ESTATE GROUP,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL RETAIL INDUSTRY TEAM,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL USERS ATLANTA,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=ALL USERS,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=Atlanta Users,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=BH - ATL Attorney,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=Floor 18 Users,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=Home NetApp,OU=Accounts and Groups,OU=Administrative,OU=Corp,DC=agg,DC=local;CN=IQTrack Requesters,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=iRealEstate,OU=iManage,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=Location - 171,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=Maptician Users,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=Mimecast Folder Sync,OU=Mimecast,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=MSE Folder Sync Group,OU=Mimecast,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local;CN=Umbrella Online Storage Exceptions,OU=Accounts and Groups,OU=Administrative,OU=Corp,DC=agg,DC=local;CN=Women's Initiative Group,OU=Groups,OU=Atlanta,OU=Corp,DC=agg,DC=local\",\n        \"custom\": {\n            \"telephoneNumber\":\"404.873.8135\",\n            \"l\": \"Atlanta\"\n        },\n        \"title\":\"Associate\",\n        \"email\":\"ana.moises@agg.com\",\n        \"department\":\"Real Estate\",\n        \"samaccountname\":\"moisesak\",\n        \"company\":\"Arnall Golden Gregory\",\n        \"external_id\":\"v8+EWLSd0E+wHPAhNDqtzA==\",\n        \"userprincipalname\":\"Ana.Moises@agg.com\",\n        \"status\":\"1\",\n        \"manager_dn\":\"CN=Bradfield\\\\, Daniel J.,OU=NetAppRedirect,OU=Sharepoint Users,OU=Users,OU=Atlanta,OU=Corp,DC=agg,DC=local\",\n        \"distinguished_name\":\"CN=Moises\\\\, Ana K.,OU=NetAppRedirect,OU=Sharepoint Users,OU=Users,OU=Atlanta,OU=Corp,DC=agg,DC=local\",\n        \"manager_guid\":\"3SBw2fUuuUeKmvj+tbIKfw==\",\n        \"lastname\":\"Moises\",\n        \"firstname\":\"Ana\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{api-domain}}/api/adc/v4/users?directory_id={{directory_id}}&directory_token={{token}}&adcVersion={{version}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"adc",
						"v4",
						"users"
					],
					"query": [
						{
							"key": "directory_id",
							"value": "{{directory_id}}"
						},
						{
							"key": "directory_token",
							"value": "{{token}}"
						},
						{
							"key": "adcVersion",
							"value": "{{version}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by Username",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users?username={{username}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users Assigned to a Role",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users?role_id={{role_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users"
					],
					"query": [
						{
							"key": "role_id",
							"value": "{{role_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users Created Within a Timeframe",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users?since=2013-11-19T01:19:34.776Z&until=2014-12-19T02:02:38.817Z",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users"
					],
					"query": [
						{
							"key": "since",
							"value": "2013-11-19T01:19:34.776Z"
						},
						{
							"key": "until",
							"value": "2014-12-19T02:02:38.817Z"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by sAMAccountName",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users?samaccountname={{samaccountname}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users"
					],
					"query": [
						{
							"key": "samaccountname",
							"value": "{{samaccountname}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Apps for a User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/apps",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"apps"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Roles for a User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/roles",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Custom Attributes",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/custom_attributes",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"custom_attributes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstname\":\"<firstname>\",\n  \"lastname\":\"<lastname>\",\n  \"email\":\"<email>\",\n  \"username\":\"<username>\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Session Login Token",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username_or_email\": \"{{username}}\", \n    \"password\": \"{{password}}\", \n    \"subdomain\": \"{{subdomain}}\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/login/auth",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"login",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Factor",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"otp_token\": \"<otp_token>\",\n    \"device_id\": \"<device_id>\",\n    \"state_token\": \"<state_token>\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/login/verify_factor",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"login",
						"verify_factor"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Session",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"session_token\":\"<session_token>\"\n}"
				},
				"url": {
					"raw": "https://{{subdomain}}.onelogin.com/session_via_api_token",
					"protocol": "https",
					"host": [
						"{{subdomain}}",
						"onelogin",
						"com"
					],
					"path": [
						"session_via_api_token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"lastname\":\"<lastname>\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Roles for a User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"role_id_array\":[ <role_id> , <role_id> ]\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/add_roles",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"add_roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove Roles for a User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"role_id_array\":[ <role_id>, <role_id> ]\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/remove_roles",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"remove_roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set Password Using ID in Cleartext",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"password\":\"<password>\",\n\"password_confirmation\":\"<password_confirmation>\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/set_password_clear_text/{{user_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"set_password_clear_text",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set Password Using ID and SHA-256 and Salt",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\": \"<sha-256-hashed-password>\",\n    \"password_confirmation\": \"<sha-256-hashed-password-confirmation>\",\n    \"password_algorithm\": \"salt+sha256\",\n    \"password_salt\": \"<salt>\"\n  }"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/set_password_using_salt/{{user_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"set_password_using_salt",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set Custom Attributes for User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"custom_attributes\":{\r\n      \"<custom_attribute_shortname1>\":\"<value>\",\r\n      \"<custom_attribute_shortname2>\":\"<value>\"\r\n   }\r\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/set_custom_attributes",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"set_custom_attributes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log User Out",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer: {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/logout",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Lock User Account",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"locked_until\": <integer_in_minutes> }"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}/lock_user",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}",
						"lock_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a User",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{api-domain}}/api/1/users/{{user_id}}",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"1",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/users?fields=id,firstname,lastname,profile_picture_url,last_login",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"users"
					],
					"query": [
						{
							"key": "firstname",
							"value": "",
							"disabled": true
						},
						{
							"key": "lastname",
							"value": "",
							"disabled": true
						},
						{
							"key": "email",
							"value": "",
							"disabled": true
						},
						{
							"key": "created_since",
							"value": "2018-01-01",
							"disabled": true
						},
						{
							"key": "created_until",
							"value": "2019-09-14",
							"disabled": true
						},
						{
							"key": "updated_since",
							"value": "2020-07-01T20:38:24Z",
							"disabled": true
						},
						{
							"key": "updated_until",
							"value": "2020-08-14T20:38:24Z",
							"disabled": true
						},
						{
							"key": "last_login_since",
							"value": "2020-05-01",
							"disabled": true
						},
						{
							"key": "last_login_until",
							"value": "2020-06-01T00:00:00Z",
							"disabled": true
						},
						{
							"key": "group_id",
							"value": "461331",
							"disabled": true
						},
						{
							"key": "state",
							"value": "3",
							"disabled": true
						},
						{
							"key": "status",
							"value": "3",
							"disabled": true
						},
						{
							"key": "username",
							"value": "",
							"disabled": true
						},
						{
							"key": "samaccountname",
							"value": "",
							"disabled": true
						},
						{
							"key": "directory_id",
							"value": "123",
							"disabled": true
						},
						{
							"key": "external_id",
							"value": "",
							"disabled": true
						},
						{
							"key": "app_id",
							"value": "123",
							"disabled": true
						},
						{
							"key": "user_ids",
							"value": "123,456",
							"disabled": true
						},
						{
							"key": "custom_attributes.{{custom_attribute_short_name}}",
							"value": "something",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "+firstname",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "id,firstname,lastname,profile_picture_url,last_login"
						}
					]
				},
				"description": "Get a list of users"
			},
			"response": []
		},
		{
			"name": "Get User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/users/:user_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"users",
						":user_id"
					],
					"variable": [
						{
							"key": "user_id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstname\": \"Steve\",\n  \"lastname\": \"Smith\",\n  \"username\": \"steve.smith\",\n  \"password\": \"a-new-password\",\n  \"password_confirmation\": \"a-new-password\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/users",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"users"
					],
					"query": [
						{
							"key": "mappings",
							"value": "sync",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\": \"a-new-password\",\n    \"password_confirmation\": \"a-new-password\"\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/users/:user_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"users",
						":user_id"
					],
					"query": [
						{
							"key": "mappings",
							"value": "sync",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "user_id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/users/:user_id",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"users",
						":user_id"
					],
					"variable": [
						{
							"key": "user_id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Apps",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer:{{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/users/{{user_id}}/apps",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"users",
						"{{user_id}}",
						"apps"
					],
					"query": [
						{
							"key": "ignore_visibility",
							"value": "true",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Track an Event",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \"verb\":\"log-in\",\n \"ip\" : \"125.238.248.246\",\n  \"user_agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\",\n  \"user\" : {\n    \"id\"     : \"US_112233\",\n    \"name\"   : \"Eve Smith\"\n  }\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/risk/events",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"risk",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Risk Score",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \"ip\" : \"125.238.248.246\",\n  \"user_agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\",\n  \"user\" : {\n    \"id\"     : \"US_112233\",\n    \"name\"   : \"Eve Smith\"\n  }\n}"
				},
				"url": {
					"raw": "https://{{api-domain}}/api/2/risk/verify",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"risk",
						"verify"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Score Summary",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://{{api-domain}}/api/2/risk/scores",
					"protocol": "https",
					"host": [
						"{{api-domain}}"
					],
					"path": [
						"api",
						"2",
						"risk",
						"scores"
					],
					"query": [
						{
							"key": "before",
							"value": "",
							"disabled": true
						},
						{
							"key": "after",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}