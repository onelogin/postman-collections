---
openapi: 3.0.3
info:
  title: Roles v2 - OneLogin API
  version: 2.0.0
  contact: {}
servers:
  - url: "https://{{api-domain}}/api/2"
security:
  - oAuth2ClientCredentials: []
paths:
  /roles:
    get:
      summary: List Roles
      description: 
        Use this API to return a list of roles.
        Pagination is supported on this endpoint.
      operationId: listRoles
      parameters:
        - name: name
          in: query
          description: Optional. Filters by role name.
          schema:
            type: string
        - name: app_id
          in: query
          description: Optional. Returns roles that contain this app ID.
          schema:
            type: integer
            example: "{{app_id}}"
        - name: app_name
          in: query
          description: Optional. Returns roles that contain this app name.
          schema:
            type: string
        - name: fields
          in: query
          description: 
            Optional. Comma delimited list of fields to return
            Valid options are apps, users, admins
          schema:
            type: string
      responses:
        "200":
          description: "Successfully the list of resources matching the requested criteria"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Role
      description: Use this API to create a new role.
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "201":
          description: "Successfully created role"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRole'
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/roles/:role_id":
    get:
      summary: Get Role
      description: Use this API to return the base role object. Role users, apps, and administrators are returned using sub endpoints.
      operationId: getRole
      parameters:
        - name: "id"
          in: query
          required: true
          schema:
            type: integer
          description: Set to the ID of the role you want to return.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Role
      description: Use this API to update a role. Partial role updates are supported.
      operationId: updateRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of the role.
            example:
              name: Updated Role Name
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRole'
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Role
      description: Delete Role
      operationId: deleteRole
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
          example: "{{role_id}}"
  "/roles/:role_id/admins":
    get:
      tags:
        - Admins
      summary: Get Role Admins
      description: Get Role Admins
      operationId: getRoleAdmins
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleAdmin'
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Admins
      summary: Add Role Admins
      description: Use this API to add administrators to a Role.
      operationId: addRoleAdmins
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: number
                example: 36216766
              example:
                - 36216766
            example:
              - 36216766
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Admins
      summary: Remove Role Admins
      description: Remove Role Admins
      operationId: removeRoleAdmins
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: number
                example: 36216766
              example:
                - 36216766
            example:
              - 36216766
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
          example: "{{role_id}}"
  "/roles/:role_id/apps":
    get:
      tags:
        - Apps
      summary: Get Role Apps
      description: Get Role Apps
      operationId: getRoleApps
      parameters:
        - name: assigned
          in: query
          schema:
            type: string
            example: "false"
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Apps
      summary: Set Role Apps
      description: "Supply the full list of apps that should be assigned to this role. Apps will either be added or removed based on their presence in this list."
      operationId: setRoleApps
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: {}
              example: []
            example: []
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
          example: "{{role_id}}"
  "/roles/:role_id/users":
    get:
      tags:
        - Users
      summary: Get Role Users
      description: Get Role Users
      operationId: getRoleUsers
      parameters:
        - name: name
          in: query
          schema:
            type: string
            example: Rich
        - name: include_unassigned
          in: query
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Users
      summary: Add Role Users
      description: Add Role Users
      operationId: addRoleUsers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: number
                example: 60231059
              example:
                - 60231059
                - 60231067
            example:
              - 60231059
              - 60231067
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Users
      summary: Remove Role Users
      description: Remove Role Users
      operationId: removeRoleUsers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: number
                example: 60231067
              example:
                - 60231067
            example:
              - 60231067
      responses:
        "200":
          description: ""
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
          example: "{{role_id}}"

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      description: See https://developers.onelogin.com/api-docs/1/oauth20-tokens/generate-tokens-2
      flows: 
        clientCredentials: 
          tokenUrl: https://api.{{region}}.onelogin.com/auth/oauth2/v2/token
          scopes: {} # Role APIs V2 do not use scopes.
  schemas:
    Role:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          description: The name of the role.
        apps:
          type: array
          description: A list of app IDs that will be assigned to the role.
          example: [234, 567, 777]
          items:
            type: integer
            format: int32
        users:
          type: array
          description: A list of user IDs to assign to the role.
          items:
            type: integer
            format: int32
        admins:
          type: array
          description: A list of user IDs to assign as role administrators.
          items:
            type: integer
            format: int32
    CreateUpdateRole:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    RoleAdmin:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        username:
          type: string
        assigned:
          type: boolean
        added_at:
          type: string
          format: date-time
        added_by:
          format: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              format: int32
            name:
              type: string
    Error:
      type: object
      required:
        - statusCode
        - message
        - name
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        name:
          type: string

tags:
  - name: Apps
  - name: Users
  - name: Admins