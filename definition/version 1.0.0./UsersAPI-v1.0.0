openapi: 3.0.3
info:
  title: Users v1 - OneLogin API
  version: 1.0.0
  contact: {}
servers:
  - url: "https://{{api-domain}}"
  - url: "https://{{subdomain}}.onelogin.com"
paths:
  /api/1/login/auth:
    post:
      summary: Create Session Login Token
      description: Create Session Login Token
      operationId: createSessionLoginToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "<password>"
                subdomain:
                  type: string
                  example: "<subdomain>"
                username_or_email:
                  type: string
                  example: "<username_or_email>"
            example:
              password: "<password>"
              subdomain: "<subdomain>"
              username_or_email: "<username_or_email>"
      responses:
        "200":
          description: ""
  /api/1/login/verify_factor:
    post:
      summary: Verify Factor
      description: Verify Factor
      operationId: verifyFactor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: string
                  example: "<device_id>"
                otp_token:
                  type: string
                  example: "<otp_token>"
                state_token:
                  type: string
                  example: "<state_token>"
            example:
              device_id: "<device_id>"
              otp_token: "<otp_token>"
              state_token: "<state_token>"
      responses:
        "200":
          description: ""
  /api/1/users:
    get:
      summary: Get User by sAMAccountName
      description: Get User by sAMAccountName
      operationId: getUserBySAmAccountName
      parameters:
        - name: samaccountname
          in: query
          schema:
            type: string
            example: "{{samaccountname}}"
      responses:
        "200":
          description: ""
    post:
      summary: Create a User
      description: Create a User
      operationId: createAUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "<email>"
                firstname:
                  type: string
                  example: "<firstname>"
                lastname:
                  type: string
                  example: "<lastname>"
                username:
                  type: string
                  example: "<username>"
            example:
              email: "<email>"
              firstname: "<firstname>"
              lastname: "<lastname>"
              username: "<username>"
      responses:
        "200":
          description: ""
  /api/1/users/custom_attributes:
    get:
      summary: Get Custom Attributes
      description: Get Custom Attributes
      operationId: getCustomAttributes
      responses:
        "200":
          description: ""
  "/api/1/users/set_password_clear_text/{user_id}":
    put:
      summary: Set Password Using ID in Cleartext
      description: Set Password Using ID in Cleartext
      operationId: setPasswordUsingIdInCleartext
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "<password>"
                password_confirmation:
                  type: string
                  example: "<password_confirmation>"
            example:
              password: "<password>"
              password_confirmation: "<password_confirmation>"
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/set_password_using_salt/{user_id}":
    put:
      summary: Set Password Using ID and SHA-256 and Salt
      description: Set Password Using ID and SHA-256 and Salt
      operationId: setPasswordUsingIdAndSha256AndSalt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "<sha-256-hashed-password>"
                password_algorithm:
                  type: string
                  example: salt+sha256
                password_confirmation:
                  type: string
                  example: "<sha-256-hashed-password-confirmation>"
                password_salt:
                  type: string
                  example: "<salt>"
            example:
              password: "<sha-256-hashed-password>"
              password_algorithm: salt+sha256
              password_confirmation: "<sha-256-hashed-password-confirmation>"
              password_salt: "<salt>"
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}":
    get:
      summary: Get User by ID
      description: Get User by ID
      operationId: getUserById
      responses:
        "200":
          description: ""
    put:
      summary: Update a User
      description: Update a User
      operationId: updateAUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lastname:
                  type: string
                  example: "<lastname>"
            example:
              lastname: "<lastname>"
      responses:
        "200":
          description: ""
    delete:
      summary: Delete a User
      description: Delete a User
      operationId: deleteAUser
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}/add_roles":
    put:
      summary: Add Roles for a User
      description: Add Roles for a User
      operationId: addRolesForAUser
      requestBody:
        content:
          text/plain:
            example: "{\n   \"role_id_array\":[ <role_id> , <role_id> ]\n}"
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}/apps":
    get:
      summary: Get Apps for a User
      description: Get Apps for a User
      operationId: getAppsForAUser
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}/lock_user":
    put:
      summary: Lock User Account
      description: Lock User Account
      operationId: lockUserAccount
      requestBody:
        content:
          text/plain:
            example: "{ \"locked_until\": <integer_in_minutes> }"
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}/logout":
    put:
      summary: Log User Out
      description: Log User Out
      operationId: logUserOut
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}/remove_roles":
    put:
      summary: Remove Roles for a User
      description: Remove Roles for a User
      operationId: removeRolesForAUser
      requestBody:
        content:
          text/plain:
            example: "{\n   \"role_id_array\":[ <role_id>, <role_id> ]\n}"
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}/roles":
    get:
      summary: Get Roles for a User
      description: Get Roles for a User
      operationId: getRolesForAUser
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/api/1/users/{user_id}/set_custom_attributes":
    put:
      summary: Set Custom Attributes for User
      description: Set Custom Attributes for User
      operationId: setCustomAttributesForUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                custom_attributes:
                  type: object
                  properties:
                    "<custom_attribute_shortname1>":
                      type: string
                      example: "<value>"
                    "<custom_attribute_shortname2>":
                      type: string
                      example: "<value>"
            example:
              custom_attributes:
                "<custom_attribute_shortname1>": "<value>"
                "<custom_attribute_shortname2>": "<value>"
      responses:
        "200":
          description: ""
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  /session_via_api_token:
    post:
      summary: Create Session
      description: Create Session
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session_token:
                  type: string
                  example: "<session_token>"
            example:
              session_token: "<session_token>"
      responses:
        "200":
          description: ""
tags: []