{
	"info": {
		"_postman_id": "92dc957d-9c54-4a12-a7f9-844dea7a729a",
		"name": "Mono_v2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20762171"
	},
	"item": [
		{
			"name": "Access Tokens - OneLogin API",
			"item": [
				{
					"name": "auth",
					"item": [
						{
							"name": "oauth2",
							"item": [
								{
									"name": "Generate Tokens (Url Encoded)",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "<Basic Auth Username>",
													"type": "string"
												},
												{
													"key": "password",
													"value": "<Basic Auth Password>",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"grant_type\": \"client_credentials\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/oauth2/v2/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"oauth2",
												"v2",
												"token"
											]
										},
										"description": "Generate Tokens (Url Encoded)"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"grant_type\": \"client_credentials\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/oauth2/v2/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"oauth2",
														"v2",
														"token"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Revoke Tokens",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"access_token\": \"{{access_token}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/oauth2/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"oauth2",
												"revoke"
											]
										},
										"description": "Revoke Tokens"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"access_token\": \"{{access_token}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/oauth2/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"oauth2",
														"revoke"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Rate Limit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/rate_limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"rate_limit"
									]
								},
								"description": "Get Rate Limit"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/rate_limit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"rate_limit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Account Branding - OneLogin API",
			"item": [
				{
					"name": "api/2/branding",
					"item": [
						{
							"name": "brands",
							"item": [
								{
									"name": "{brand id}",
									"item": [
										{
											"name": "Get Brand",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "{{brand_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieve a single brand via ID"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"branding",
																"brands",
																":brand_id"
															],
															"variable": [
																{
																	"key": "brand_id",
																	"value": "{{brand_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Brand",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_accent_color\": \"#feeeeb\",\n  \"custom_color\": \"#beeeef\",\n  \"custom_label_text_for_login_screen\": \"YOUR TRUE NAME\",\n  \"enable_custom_label_for_login_screen\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "{{brand_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Update Brand"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_accent_color\": \"#feeeeb\",\n  \"custom_color\": \"#beeeef\",\n  \"custom_label_text_for_login_screen\": \"YOUR TRUE NAME\",\n  \"enable_custom_label_for_login_screen\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"branding",
																"brands",
																":brand_id"
															],
															"variable": [
																{
																	"key": "brand_id",
																	"value": "{{brand_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Brand",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "{{brand_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete Brand"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"branding",
																"brands",
																":brand_id"
															],
															"variable": [
																{
																	"key": "brand_id",
																	"value": "{{brand_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Brand Apps",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id/apps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands",
														":brand_id",
														"apps"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "{{brand_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Get Brand Apps"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/branding/brands/:brand_id/apps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"branding",
																"brands",
																":brand_id",
																"apps"
															],
															"variable": [
																{
																	"key": "brand_id",
																	"value": "{{brand_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List Brands",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands"
											]
										},
										"description": "List Brands"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Brand",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"background\": \"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\",\n  \"custom_accent_color\": \"#7AC18E\",\n  \"custom_color\": \"#C31A0F\",\n  \"custom_label_text_for_login_screen\": \"Employee ID\",\n  \"custom_masking_color\": \"#EEFFEE\",\n  \"custom_masking_opacity\": 80,\n  \"custom_support_enabled\": true,\n  \"enable_custom_label_for_login_screen\": true,\n  \"enabled\": true,\n  \"hide_onelogin_footer\": true,\n  \"login_instruction\": \"Please log in!\",\n  \"login_instruction_title\": \"Welcome!\",\n  \"mfa_enrollment_message\": \"You need to enroll in MFA to continue to your portal\",\n  \"name\": \"Sample Brand\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/brands?=enim consequat sed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"brands"
											],
											"query": [
												{
													"key": "",
													"value": "enim consequat sed"
												}
											]
										},
										"description": "Create a new Account Brand"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"background\": \"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\",\n  \"custom_accent_color\": \"#7AC18E\",\n  \"custom_color\": \"#C31A0F\",\n  \"custom_label_text_for_login_screen\": \"Employee ID\",\n  \"custom_masking_color\": \"#EEFFEE\",\n  \"custom_masking_opacity\": 80,\n  \"custom_support_enabled\": true,\n  \"enable_custom_label_for_login_screen\": true,\n  \"enabled\": true,\n  \"hide_onelogin_footer\": true,\n  \"login_instruction\": \"Please log in!\",\n  \"login_instruction_title\": \"Welcome!\",\n  \"mfa_enrollment_message\": \"You need to enroll in MFA to continue to your portal\",\n  \"name\": \"Sample Brand\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/brands?=enim consequat sed",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"brands"
													],
													"query": [
														{
															"key": "",
															"value": "enim consequat sed"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "email settings",
							"item": [
								{
									"name": "Get Email Settings",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings"
											]
										},
										"description": "Get Email Settings"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/email_settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"email_settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Custom Email Settings",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"smtp.sendgrid.net\",\n  \"domain\": \"example.com\",\n  \"from\": \"email@example.com\",\n  \"password\": \"password\",\n  \"port\": 587,\n  \"use_tls\": true,\n  \"user_name\": \"user-name\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings"
											]
										},
										"description": "Create Custom Email Settings"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address\": \"smtp.sendgrid.net\",\n  \"domain\": \"example.com\",\n  \"from\": \"email@example.com\",\n  \"password\": \"password\",\n  \"port\": 587,\n  \"use_tls\": true,\n  \"user_name\": \"user-name\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/email_settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"email_settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Custom Email Settings",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings"
											]
										},
										"description": "Delete Custom Email Settings"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/email_settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"email_settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Test Email Settings Configuration",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/branding/email_settings/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"branding",
												"email_settings",
												"test"
											]
										},
										"description": "Test Email Settings Configuration"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/branding/email_settings/test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"branding",
														"email_settings",
														"test"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Apps API - OneLogin",
			"item": [
				{
					"name": "Rules",
					"item": [
						{
							"name": "List Rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules"
									],
									"query": [
										{
											"key": "has_condition",
											"value": "has_role:{{role_id}}",
											"disabled": true
										},
										{
											"key": "has_condition_type",
											"value": "none",
											"disabled": true
										},
										{
											"key": "has_action",
											"value": "set_status:*",
											"disabled": true
										},
										{
											"key": "has_action_type",
											"value": "none",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Response ID is not null\", function () {",
											"    pm.response.json().id.not.equal(null);",
											"});",
											"",
											"postman.setEnvironmentVariable(\"mapping_id\", pm.response.json().id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Suspend after 90 days inactive\",\n    \"match\": \"all\",\n    \"position\": null,\n    \"enabled\": true,\n    \"conditions\": [\n        {\n            \"source\": \"last_login\",\n            \"operator\": \">\",\n            \"value\": \"90\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_status\",\n            \"value\": [\"2\"]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/mappings",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"mappings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response ID is not null\", function () {",
											"    pm.response.json().id.not.equal(null);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Sample Rule Updated\",\n    \"match\": \"all\",\n    \"enabled\": true,\n    \"position\": 1,\n    \"conditions\": [\n        {\n            \"source\": \"has_role\",\n            \"operator\": \"ri\",\n            \"value\": \"272445\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_groups\",\n            \"value\": [\n                \"member_of\"\n            ],\n            \"expression\": \".*\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/{{rule_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Conditions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/conditions",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"conditions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Conditions Operators",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/conditions/{{rule_condition_value}}/operators",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"conditions",
										"{{rule_condition_value}}",
										"operators"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Conditions Values",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/conditions/{{rule_condition_value}}/values",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"conditions",
										"{{rule_condition_value}}",
										"values"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Actions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/actions",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"actions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Actions Values",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/actions/{{rule_action_value}}/values",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"actions",
										"{{rule_action_value}}",
										"values"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Sort",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t204500,\n    204499,\n    204503,\n    204502,\n    204501\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/rules/sort",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"apps",
										"{{app_id}}",
										"rules",
										"sort"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List Connectors",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/connectors",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"connectors"
							],
							"query": [
								{
									"key": "auth_method",
									"value": "2",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Apps",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps"
							],
							"query": [
								{
									"key": "connector_id",
									"value": "",
									"disabled": true
								},
								{
									"key": "auth_method",
									"value": "",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "policy_id",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "id,name,user_count",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get App",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "connector_id",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create App",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"connector_id\": 50534,\n  \"name\": \"Amazon Web Services (AWS) Multi Role\",\n  \"description\": \"\",\n  \"visible\": true,\n  \"sso\": {\n    \"certificate\": {\n      \"id\": 170216\n    }\n  },\n  \"configuration\": {\n    \"signature_algorithm\": \"SHA-1\"\n  },\n  \"parameters\": {\n    \"saml_username\": {\n      \"user_attribute_mappings\": \"email\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "connector_id",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update App",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"parameters\": {\n\t    \"saml_username\": {\n\t      \"user_attribute_mappings\": \"email\"\n\t    }\n    }\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "connector_id",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete App",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Parameter from App",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/parameters/{{parameter_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"parameters",
								"{{parameter_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "connector_id",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get App Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/apps/{{app_id}}/users",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"apps",
								"{{app_id}}",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization Servers - OneLogin API",
			"item": [
				{
					"name": "Scopes",
					"item": [
						{
							"name": "Get Api Auth Server Scopes",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"scopes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Api Auth Server Scope",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"value\": \"custom:scope\",\n\t\"description\": \"A custom scope\"\n}\n\n"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"scopes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Api Auth Server Scope",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"value\": \"write:contacts\",\n \"description\": \"Create some contacts\"\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes/{{scope_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"scopes",
										"{{scope_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Api Auth Server Scope",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/scopes/{{scope_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"scopes",
										"{{scope_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Claims",
					"item": [
						{
							"name": "Get Api Auth Server Claims",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"claims"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Api Auth Server Claim",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"email_address\"\n}\n"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"claims"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Api Auth Server Claim",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_attribute_mappings\": \"email\",\n    \"label\": \"email_address\",\n    \"name\": \"email_address\"\n}\n"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims/{{claim_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"claims",
										"{{claim_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Api Auth Server Claim",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/claims/{{claim_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"claims",
										"{{claim_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client Apps",
					"item": [
						{
							"name": "Get Api Auth Server Clients",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Api Auth Server Client",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"app_id\": 1026152,\n\t\"scopes\": [31]\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Api Auth Server Client",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"scopes\": [51,53]\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients/{{client_app_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"clients",
										"{{client_app_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Api Auth Server Client",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}/clients/{{client_app_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"api_authorizations",
										"{{api_auth_id}}",
										"clients",
										"{{client_app_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List Api Auth Servers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Api Auth Server",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"name\": \"Contacts API\",\n    \"description\": \"This is an api\",\n    \"configuration\": {\n      \"resource_identifier\": \"http://myapi.com/contacts2\",\n      \"audiences\": [\"http://myapi.com/contacts2\"],\n      \"access_token_expiration_minutes\": 10,\n      \"refresh_token_expiration_minutes\": 30\n    }\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Api Auth Server",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Api Auth Server",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"name\": \"Contacts API\",\n    \"description\": \"This is an api\",\n    \"configuration\": {\n      \"resource_identifier\": \"http://myapi.com/contacts2\",\n      \"audiences\": [\"http://myapi.com/contacts2\"],\n      \"access_token_expiration_minutes\": 15,\n      \"refresh_token_expiration_minutes\": 35\n    }\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Api Auth Server",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/api_authorizations/{{api_auth_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"api_authorizations",
								"{{api_auth_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Connectors API - OneLogin",
			"item": [
				{
					"name": "List Connectors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/2/connectors?auth_method=2&limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"2",
								"connectors"
							],
							"query": [
								{
									"key": "auth_method",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "List Connectors"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/connectors?auth_method=2&limit=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"connectors"
									],
									"query": [
										{
											"key": "auth_method",
											"value": "2"
										},
										{
											"key": "limit",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "MFA v2 - OneLogin API",
			"item": [
				{
					"name": "users/{user id}",
					"item": [
						{
							"name": "registrations",
							"item": [
								{
									"name": "{registration id}",
									"item": [
										{
											"name": "get user registration",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer: {{access_token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
													"protocol": "https",
													"host": [
														"{{api-domain}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) The user's id"
														},
														{
															"key": "registration_id",
															"value": "<UUID>",
															"description": "(Required) The id of a registration"
														}
													]
												},
												"description": "Get registration state by id"
											},
											"response": [
												{
													"name": "Get user registration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "bearer: {{access_token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
															"protocol": "https",
															"host": [
																"{{api-domain}}"
															],
															"path": [
																"api",
																"2",
																"mfa",
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{user_id}}",
																	"description": "(Required) The user's id"
																},
																{
																	"key": "registration_id",
																	"value": "<UUID>",
																	"description": "(Required) The id of a registration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Accept-Language",
															"value": "en-US,en;q=1"
														},
														{
															"key": "Cache-Control",
															"value": "no-cache, must-revalidate, no-store"
														},
														{
															"key": "Content-Length",
															"value": "64"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Content-Type-Options",
															"value": "nosniff"
														},
														{
															"key": "X-Request-Id",
															"value": "5F188C46-49E1609A-D47B-0A0B033A-01BB-11459E-43E7"
														},
														{
															"key": "Date",
															"value": "Wed, 22 Jul 2020 18:58:14 GMT"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"ca332b26-0d83-444f-956b-0dbf004a3f03\",\n    \"status\": \"pending\"\n}"
												}
											]
										},
										{
											"name": "verify user registration",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "bearer: {{access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"506C45\"\n}"
												},
												"url": {
													"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
													"protocol": "https",
													"host": [
														"{{api-domain}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}"
														},
														{
															"key": "registration_id",
															"value": "<UUID>",
															"description": "(Required) The id of a registration"
														}
													]
												},
												"description": "Submit an otp for verification."
											},
											"response": [
												{
													"name": "Verify user registration",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "bearer: {{access_token}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"otp\": \"506C45\"\n}"
														},
														"url": {
															"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations/:registration_id",
															"protocol": "https",
															"host": [
																"{{api-domain}}"
															],
															"path": [
																"api",
																"2",
																"mfa",
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{user_id}}"
																},
																{
																	"key": "registration_id",
																	"value": "<UUID>",
																	"description": "(Required) The id of a registration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Accept-Language",
															"value": "en-US,en;q=1"
														},
														{
															"key": "Cache-Control",
															"value": "no-cache, must-revalidate, no-store"
														},
														{
															"key": "Content-Length",
															"value": "87"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "X-Content-Type-Options",
															"value": "nosniff"
														},
														{
															"key": "X-Request-Id",
															"value": "5F188CDE-49E1609A-D480-0A0B0591-01BB-3589-0813"
														},
														{
															"key": "Date",
															"value": "Wed, 22 Jul 2020 19:00:47 GMT"
														}
													],
													"cookie": [],
													"body": "{\n    \"id\": \"44aa6883-5048-4cd5-8cb2-64d47784230c\",\n    \"status\": \"accepted\",\n    \"device_id\": \"3926157\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "create user factor registration",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"factor_id\": \"58959\",\n    \"display_name\": \"SMS\"\n}"
										},
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"registrations"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) The user's id"
												}
											]
										},
										"description": "Create a new registration process"
									},
									"response": [
										{
											"name": "Create user factor registration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "bearer: {{access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"factor_id\": \"58959\",\n    \"display_name\": \"SMS\"\n}"
												},
												"url": {
													"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/registrations",
													"protocol": "https",
													"host": [
														"{{api-domain}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) The user's id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Accept-Language",
													"value": "en-US,en;q=1"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, must-revalidate, no-store"
												},
												{
													"key": "Content-Length",
													"value": "186"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Request-Id",
													"value": "5F188C90-49E1609A-D47D-0A0B03ED-01BB-2869-1581"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jul 2020 18:59:30 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"44aa6883-5048-4cd5-8cb2-64d47784230c\",\n    \"status\": \"pending\",\n    \"auth_factor_name\": \"SMS\",\n    \"type_display_name\": \"OneLogin SMS\",\n    \"user_display_name\": \"SMS\",\n    \"expires_at\": \"2020-07-22T19:01:29Z\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "devices",
							"item": [
								{
									"name": "get user devices",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer:{{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/devices",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"devices"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												}
											]
										},
										"description": "Get a user authentication devices"
									},
									"response": [
										{
											"name": "A list of authentication devices",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"devices"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"type\": \"boolean\",\n  \"default\": \"<boolean>\"\n },\n {\n  \"type\": \"boolean\",\n  \"default\": \"<boolean>\"\n }\n]"
										}
									]
								},
								{
									"name": "delete user device",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/devices/:device_id",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"devices",
												":device_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "device_id",
													"value": "<integer>",
													"description": "(Required) ID of the device"
												}
											]
										},
										"description": "Delete a user\\'s authentication device"
									},
									"response": [
										{
											"name": "The device has been deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/devices/:device_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"devices",
														":device_id"
													],
													"variable": [
														{
															"key": "user_id"
														},
														{
															"key": "device_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "verifications",
							"item": [
								{
									"name": "{verification id}",
									"item": [
										{
											"name": "get user verification",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer: {{access_token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/verifications/:verification_id",
													"protocol": "https",
													"host": [
														"{{api-domain}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"verifications",
														":verification_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) The user's id"
														},
														{
															"key": "verification_id",
															"value": "<UUID>",
															"description": "(Required) The id of a verification"
														}
													]
												},
												"description": "Get verification state by id"
											},
											"response": [
												{
													"name": "Retrieved verification state",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/verifications/:verification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"verifications",
																":verification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "verification_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n \"status\": \"pending\",\n \"expires_at\": \"2020-07-11T22:24:50Z\",\n \"device_id\": \"331991\"\n}"
												}
											]
										},
										{
											"name": "verify user verification",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "bearer: {{access_token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"42CFA7\"\n}"
												},
												"url": {
													"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/verifications/:verification_id",
													"protocol": "https",
													"host": [
														"{{api-domain}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"verifications",
														":verification_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) The user's id"
														},
														{
															"key": "verification_id",
															"value": "<UUID>",
															"description": "(Required) The id of a verification"
														}
													]
												},
												"description": "Submit an otp for verification."
											},
											"response": [
												{
													"name": "Verification code received. State updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"otp\": \"213932\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/verifications/:verification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"verifications",
																":verification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "verification_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n \"status\": \"pending\",\n \"expires_at\": \"2020-07-11T22:24:50Z\",\n \"device_id\": \"331991\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "create user device verification",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "bearer: {{access_token}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"device_id\": \"3920371\",\n    \"expires_in\": 240\n}"
										},
										"url": {
											"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/verifications",
											"protocol": "https",
											"host": [
												"{{api-domain}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"verifications"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) The user's id"
												}
											]
										},
										"description": "Create a new verification process"
									},
									"response": [
										{
											"name": "Created verification flow",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"device_id\": \"113242\",\n    \"expires_in\": 120\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verifications"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"expires_at\": \"2020-07-11T22:24:50Z\",\n \"user_display_name\": \"Testing SMS DEMO\",\n \"type_display_name\": \"OneLogin SMS\",\n \"auth_factor_name\": \"SMS\",\n \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n \"status\": \"pending\",\n \"user_id\": 2323,\n \"device_id\": \"489339\",\n \"factor_data\": {\n  \"verification_token\": \"<string>\",\n  \"totp_url\": \"<string>\"\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "get user factors",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer: {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/factors",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"factors"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) ID of the user"
										}
									]
								},
								"description": "Get a user\\'s available authentication factors"
							},
							"response": [
								{
									"name": "A list of authentication factors",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/factors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"factors"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"factor_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"auth_factor_name\": \"<string>\"\n },\n {\n  \"factor_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"auth_factor_name\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "issue user temp otp",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer: {{access_token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expires_in\": 120,\n    \"reusable\": false\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/mfa/users/:user_id/mfa_token",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"mfa_token"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) The user's id"
										}
									]
								},
								"description": "Create new MFA token on the user's account"
							},
							"response": [
								{
									"name": "Created Mfa Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expires_in\": 120,\n    \"reusable\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/temp_otp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"temp_otp"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"mfa_token\": \"UIOWE787979\",\n \"reusable\": true,\n \"expires_at\": \"2020-06-26T21:52:56Z\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "MFA v2 - OneLogin API",
			"item": [
				{
					"name": "api/2/mfa/users/{user id}",
					"item": [
						{
							"name": "devices",
							"item": [
								{
									"name": "get user devices",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"devices"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a user authentication devices"
									},
									"response": [
										{
											"name": "A list of authentication devices",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"devices"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"default\": \"<boolean>\",\n    \"type\": \"boolean\"\n  },\n  {\n    \"default\": \"<boolean>\",\n    \"type\": \"boolean\"\n  }\n]"
										}
									]
								},
								{
									"name": "delete user device",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/devices/:device_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"devices",
												":device_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) "
												},
												{
													"key": "device_id",
													"value": "<integer>",
													"description": "(Required) (Required) ID of the device"
												}
											]
										},
										"description": "Delete a user\\'s authentication device"
									},
									"response": [
										{
											"name": "The device has been deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/devices/:device_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"devices",
														":device_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) "
														},
														{
															"key": "device_id",
															"value": "<integer>",
															"description": "(Required) (Required) ID of the device"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "registrations",
							"item": [
								{
									"name": "{registration id}",
									"item": [
										{
											"name": "get user registration",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/registrations/:registration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) "
														},
														{
															"key": "registration_id",
															"value": "<UUID>",
															"description": "(Required) (Required) The id of a registration"
														}
													]
												},
												"description": "Get registration state by id"
											},
											"response": [
												{
													"name": "Get user registration",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"mfa",
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{user_id}}",
																	"description": "(Required) "
																},
																{
																	"key": "registration_id",
																	"value": "<UUID>",
																	"description": "(Required) (Required) The id of a registration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Accept-Language",
															"value": "en-US,en;q=1",
															"description": ""
														},
														{
															"key": "Cache-Control",
															"value": "no-cache, must-revalidate, no-store",
															"description": ""
														},
														{
															"key": "Content-Length",
															"value": "64",
															"description": ""
														},
														{
															"key": "Date",
															"value": "Wed, 22 Jul 2020 18:58:14 GMT",
															"description": ""
														},
														{
															"key": "X-Content-Type-Options",
															"value": "nosniff",
															"description": ""
														},
														{
															"key": "X-Request-Id",
															"value": "5F188C46-49E1609A-D47B-0A0B033A-01BB-11459E-43E7",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"ca332b26-0d83-444f-956b-0dbf004a3f03\",\n  \"status\": \"pending\"\n}"
												}
											]
										},
										{
											"name": "verify user registration",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"otp\": \"506C45\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/registrations/:registration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) "
														},
														{
															"key": "registration_id",
															"value": "<UUID>",
															"description": "(Required) (Required) The id of a registration"
														}
													]
												},
												"description": "Submit an otp for verification."
											},
											"response": [
												{
													"name": "Verify user registration",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"otp\": \"506C45\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"mfa",
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{user_id}}",
																	"description": "(Required) "
																},
																{
																	"key": "registration_id",
																	"value": "<UUID>",
																	"description": "(Required) (Required) The id of a registration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Accept-Language",
															"value": "en-US,en;q=1",
															"description": ""
														},
														{
															"key": "Cache-Control",
															"value": "no-cache, must-revalidate, no-store",
															"description": ""
														},
														{
															"key": "Content-Length",
															"value": "87",
															"description": ""
														},
														{
															"key": "Date",
															"value": "Wed, 22 Jul 2020 19:00:47 GMT",
															"description": ""
														},
														{
															"key": "X-Content-Type-Options",
															"value": "nosniff",
															"description": ""
														},
														{
															"key": "X-Request-Id",
															"value": "5F188CDE-49E1609A-D480-0A0B0591-01BB-3589-0813",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"device_id\": \"3926157\",\n  \"id\": \"44aa6883-5048-4cd5-8cb2-64d47784230c\",\n  \"status\": \"accepted\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "create user factor registration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"display_name\": \"SMS\",\n  \"factor_id\": \"58959\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/registrations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"registrations"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) (Required) The user's id"
												}
											]
										},
										"description": "Create a new registration process"
									},
									"response": [
										{
											"name": "Create user factor registration",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"display_name\": \"SMS\",\n  \"factor_id\": \"58959\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/registrations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"registrations"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) (Required) The user's id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Accept-Language",
													"value": "en-US,en;q=1",
													"description": ""
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, must-revalidate, no-store",
													"description": ""
												},
												{
													"key": "Content-Length",
													"value": "186",
													"description": ""
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jul 2020 18:59:30 GMT",
													"description": ""
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff",
													"description": ""
												},
												{
													"key": "X-Request-Id",
													"value": "5F188C90-49E1609A-D47D-0A0B03ED-01BB-2869-1581",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"auth_factor_name\": \"SMS\",\n  \"expires_at\": \"2020-07-22T19:01:29Z\",\n  \"id\": \"44aa6883-5048-4cd5-8cb2-64d47784230c\",\n  \"status\": \"pending\",\n  \"type_display_name\": \"OneLogin SMS\",\n  \"user_display_name\": \"SMS\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "verifications",
							"item": [
								{
									"name": "{verification id}",
									"item": [
										{
											"name": "get user verification",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/verifications/:verification_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"verifications",
														":verification_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) (Required) The user's id"
														},
														{
															"key": "verification_id",
															"value": "<UUID>",
															"description": "(Required) (Required) The id of a verification"
														}
													]
												},
												"description": "Get verification state by id"
											},
											"response": [
												{
													"name": "Retrieved verification state",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/verifications/:verification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"mfa",
																"users",
																":user_id",
																"verifications",
																":verification_id"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{user_id}}",
																	"description": "(Required) (Required) The user's id"
																},
																{
																	"key": "verification_id",
																	"value": "<UUID>",
																	"description": "(Required) (Required) The id of a verification"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"device_id\": \"331991\",\n  \"expires_at\": \"2020-07-11T22:24:50Z\",\n  \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n  \"status\": \"pending\"\n}"
												}
											]
										},
										{
											"name": "verify user verification",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"otp\": \"42CFA7\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/verifications/:verification_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"verifications",
														":verification_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) (Required) The user's id"
														},
														{
															"key": "verification_id",
															"value": "<UUID>",
															"description": "(Required) (Required) The id of a verification"
														}
													]
												},
												"description": "Submit an otp for verification."
											},
											"response": [
												{
													"name": "Verification code received. State updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"otp\": \"42CFA7\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/verifications/:verification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"mfa",
																"users",
																":user_id",
																"verifications",
																":verification_id"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "{{user_id}}",
																	"description": "(Required) (Required) The user's id"
																},
																{
																	"key": "verification_id",
																	"value": "<UUID>",
																	"description": "(Required) (Required) The id of a verification"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"device_id\": \"331991\",\n  \"expires_at\": \"2020-07-11T22:24:50Z\",\n  \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n  \"status\": \"pending\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "create user device verification",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"device_id\": \"3920371\",\n  \"expires_in\": 240\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/verifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"verifications"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) (Required) The user's id"
												}
											]
										},
										"description": "Create a new verification process"
									},
									"response": [
										{
											"name": "Created verification flow",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"device_id\": \"3920371\",\n  \"expires_in\": 240\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/verifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mfa",
														"users",
														":user_id",
														"verifications"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}",
															"description": "(Required) (Required) The user's id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"auth_factor_name\": \"SMS\",\n  \"device_id\": \"489339\",\n  \"expires_at\": \"2020-07-11T22:24:50Z\",\n  \"factor_data\": {\n    \"totp_url\": \"<string>\",\n    \"verification_token\": \"<string>\"\n  },\n  \"id\": \"5a0ba80a-39a1-4627-9a8b-1273278b34ee\",\n  \"status\": \"pending\",\n  \"type_display_name\": \"OneLogin SMS\",\n  \"user_display_name\": \"Testing SMS DEMO\",\n  \"user_id\": 2323\n}"
										}
									]
								}
							]
						},
						{
							"name": "get user factors",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/factors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"factors"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) (Required) ID of the user"
										}
									]
								},
								"description": "Get a user\\'s available authentication factors"
							},
							"response": [
								{
									"name": "A list of authentication factors",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/factors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"factors"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) (Required) ID of the user"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"auth_factor_name\": \"<string>\",\n    \"factor_id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"auth_factor_name\": \"<string>\",\n    \"factor_id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "issue user temp otp",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"expires_in\": 120,\n  \"reusable\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/mfa_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"mfa",
										"users",
										":user_id",
										"mfa_token"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{user_id}}",
											"description": "(Required) (Required) The user's id"
										}
									]
								},
								"description": "Create new MFA token on the user's account"
							},
							"response": [
								{
									"name": "Created Mfa Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"expires_in\": 120,\n  \"reusable\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/mfa/users/:user_id/mfa_token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mfa",
												"users",
												":user_id",
												"mfa_token"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}",
													"description": "(Required) (Required) The user's id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"expires_at\": \"2020-06-26T21:52:56Z\",\n  \"mfa_token\": \"UIOWE787979\",\n  \"reusable\": true\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "OneLogin Branding API",
			"item": [
				{
					"name": "List Brandings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/branding",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"branding"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Branding",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/branding/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"branding",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Branding",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enabled\": true,\n  \"name\": \"<name>\",\n  \"custom_support_enabled\": false,\n  \"custom_color\": \"<#hex_code_for_primary_color>\",\n  \"custom_accent_color\": \"#hex_code_for_accent_color\",\n  \"custom_masking_color\": \"#hex_code_for_masking_color\",\n  \"custom_masking_opacity\": 0,\n  \"enable_custom_label_for_login_screen\": true,\n  \"custom_label_text_for_login_screen\": \"<label_text>\",\n  \"login_instruction_title\": \"<login_instruction_title>\",\n  \"login_instruction\": \"<login_instructions>\",\n  \"hide_onelogin_footer\": true,\n  \"mfa_enrollment_message\": \"<mfa_enroll_message>\",\n  \"background\": \"<base_64_encoded_image_as_string (cat path_to_jpg_or_png_5mb_max | base64)>\",\n  \"logo\": \"<base_64_encoded_image_as_string (cat path_to_png_1mb_max | base64)>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/branding/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"branding",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Branding",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enabled\": true,\n  \"name\": \"<name>\",\n  \"custom_support_enabled\": false,\n  \"custom_color\": \"<#hex_code_for_primary_color>\",\n  \"custom_accent_color\": \"#hex_code_for_accent_color\",\n  \"custom_masking_color\": \"#hex_code_for_masking_color\",\n  \"custom_masking_opacity\": 0,\n  \"enable_custom_label_for_login_screen\": true,\n  \"custom_label_text_for_login_screen\": \"<label_text>\",\n  \"login_instruction_title\": \"<login_instruction_title>\",\n  \"login_instruction\": \"<login_instructions>\",\n  \"hide_onelogin_footer\": true,\n  \"mfa_enrollment_message\": \"<mfa_enroll_message>\",\n  \"background\": \"<base_64_encoded_image_as_string (cat path_to_jpg_or_png_5mb_max | base64)>\",\n  \"logo\": \"<base_64_encoded_image_as_string (cat path_to_png_1mb_max | base64)>\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/branding",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"branding"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Branding",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/branding/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"branding",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Apps Associated to Branding",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/branding/:id/apps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"branding",
								":id",
								"apps"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OneLogin Roles API",
			"item": [
				{
					"name": "Create Role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<name of role>\",\n    \"apps\": [\"<app_id_1>\", \"<app_id_2>\"],\n    \"users\": [\"<user_id_1>\", \"<user_id_2>\"],\n    \"admins\": [\"<user_id_1>\", \"<user_id_2>\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles"
							]
						},
						"description": "Lists the roles for this account"
					},
					"response": []
				},
				{
					"name": "Update Role",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<updated name of role>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Apps to Role",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[app_id_1, app_id_2, app_id_3]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/apps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"apps"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Assigns apps to a role"
					},
					"response": []
				},
				{
					"name": "Get Apps For Role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/apps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"apps"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Lists the apps associated to a role"
					},
					"response": []
				},
				{
					"name": "Assign Users to Role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[user_id_1, user_id_2, user_id_3]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"users"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Assigns apps to a role"
					},
					"response": []
				},
				{
					"name": "Get Users For Role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"users"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Lists the apps associated to a role"
					},
					"response": []
				},
				{
					"name": "Remove Users From Role",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[user_id_1, user_id_2, user_id_3]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"users"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Assigns apps to a role"
					},
					"response": []
				},
				{
					"name": "Assign Admins to Role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[admin_user_id_1, admin_user_id_2, admin_user_id_3]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/admins",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"admins"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Assigns apps to a role"
					},
					"response": []
				},
				{
					"name": "Get Admin Users For Role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/admins",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"admins"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Lists the apps associated to a role"
					},
					"response": []
				},
				{
					"name": "Remove Admins From Role",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[admin_user_id_1, admin_user_id_2, admin_user_id_3]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id/admins",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id",
								"admins"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						},
						"description": "Assigns apps to a role"
					},
					"response": []
				},
				{
					"name": "Delete Role",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2/roles/:role_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OpenID Connect v2 - OneLogin API",
			"item": [
				{
					"name": "Implicit Flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/auth?client_id={{OIDC_client_id}}&nonce={{$guid}}&redirect_uri={{OIDC_redirect_uri}}&response_type=id_token&scope=openid&state=",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"auth"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{OIDC_client_id}}"
								},
								{
									"key": "nonce",
									"value": "{{$guid}}"
								},
								{
									"key": "redirect_uri",
									"value": "{{OIDC_redirect_uri}}"
								},
								{
									"key": "response_type",
									"value": "id_token"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "state",
									"value": ""
								}
							]
						},
						"description": "This GET call is part of the Implicit Flow and must be made via a web browser. The user will be redirected to login at OneLogin and then redirected back again to the registered redirect_uri."
					},
					"response": []
				},
				{
					"name": "Authorization Code Flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/auth?client_id={{OIDC_client_id}}&nonce={{$guid}}&redirect_uri={{OIDC_redirect_uri}}&response_type=code&scope=openid&state=",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"auth"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{OIDC_client_id}}"
								},
								{
									"key": "nonce",
									"value": "{{$guid}}"
								},
								{
									"key": "redirect_uri",
									"value": "{{OIDC_redirect_uri}}"
								},
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "state",
									"value": ""
								}
							]
						},
						"description": "This GET call is part of the Authentication Flow and must be made via a web browser. The user will be redirected to login at OneLogin and then redirected back again to the registered redirect_uri."
					},
					"response": []
				},
				{
					"name": "Get Access Token via Authorization Code",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{OIDC_client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{OIDC_client_secret}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "{{OIDC_authorization_code}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{OIDC_redirect_uri}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password Grant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"OIDC_access_token\", jsonData.access_token);",
									"postman.setEnvironmentVariable(\"OIDC_refresh_token\", jsonData.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{OIDC_client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{OIDC_client_secret}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{OIDC_client_id}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid profile email",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "id_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Client Credentials Grant",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{OIDC_client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{OIDC_client_id}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Introspect Token",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{OIDC_client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{OIDC_client_secret}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{OIDC_access_token}}",
									"type": "text"
								},
								{
									"key": "token_type_hint",
									"value": "access_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/token/introspection",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"token",
								"introspection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"OIDC_access_token\", jsonData.access_token);",
									"postman.setEnvironmentVariable(\"OIDC_refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{OIDC_client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{OIDC_client_secret}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{OIDC_refresh_token}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/token",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Token",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{OIDC_client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{OIDC_client_secret}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{OIDC_access_token}}",
									"type": "text"
								},
								{
									"key": "token_type_hint",
									"value": "access_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/token/revocation",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"token",
								"revocation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Configuration Metadata",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/.well-known/openid-configuration",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								".well-known",
								"openid-configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Info",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{OIDC_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.onelogin.com/oidc/2/me",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"onelogin",
								"com"
							],
							"path": [
								"oidc",
								"2",
								"me"
							]
						},
						"description": "Returns user information associated with the session"
					},
					"response": []
				}
			]
		},
		{
			"name": "Roles v2 - OneLogin API",
			"item": [
				{
					"name": "roles",
					"item": [
						{
							"name": ":role id",
							"item": [
								{
									"name": "admins",
									"item": [
										{
											"name": "Get Role Admins",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/admins?include_unassigned=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"admins"
													],
													"query": [
														{
															"key": "include_unassigned",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this API to return a list of role administrators. Pagination is supported on this endpoint."
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins?include_unassigned=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"query": [
																{
																	"key": "include_unassigned",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": 74871543,\n    \"name\": \"dolor laboris velit in Duis\",\n    \"email\": \"esse in Excepteur fugiat sint\",\n    \"username\": \"cupidatat in irure commodo officia\",\n    \"assigned\": true,\n    \"added_at\": \"2009-10-15T16:59:23.439Z\",\n    \"added_by\": {\n      \"id\": 81077329,\n      \"name\": \"e\"\n    }\n  },\n  {\n    \"id\": -81900644,\n    \"name\": \"adipisicing ma\",\n    \"email\": \"qui aliquip\",\n    \"username\": \"ea anim sed proident\",\n    \"assigned\": true,\n    \"added_at\": \"1994-05-04T20:29:26.019Z\",\n    \"added_by\": {\n      \"id\": 32438042,\n      \"name\": \"Duis sunt minim\"\n    }\n  }\n]"
												},
												{
													"name": "Typically, this error means that your access token value is invalid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins?include_unassigned=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"query": [
																{
																	"key": "include_unassigned",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												},
												{
													"name": "The requested user does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins?include_unassigned=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"query": [
																{
																	"key": "include_unassigned",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins?include_unassigned=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"query": [
																{
																	"key": "include_unassigned",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										},
										{
											"name": "Add Role Admins",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  -2526808,\n  -42101770\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/admins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"admins"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this API to add administrators to a Role."
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  -28117668,\n  -14334271\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Typically, this error means that your access token value is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  -28117668,\n  -14334271\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  -28117668,\n  -14334271\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										},
										{
											"name": "Remove Role Admins",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  -2020176\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/admins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"admins"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this API to delete a role administrator. BE CAREFUL. This operation is final and can't be undone."
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  -2020176\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  -2020176\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/admins",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"admins"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "apps",
									"item": [
										{
											"name": "Get Role Apps",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/apps?assigned=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"apps"
													],
													"query": [
														{
															"key": "assigned",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Get Role Apps"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/apps?assigned=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"apps"
															],
															"query": [
																{
																	"key": "assigned",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/apps?assigned=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"apps"
															],
															"query": [
																{
																	"key": "assigned",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										},
										{
											"name": "Set Role Apps",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/apps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"apps"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Supply the full list of apps that should be assigned to this role. Apps will either be added or removed based on their presence in this list."
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/apps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"apps"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/apps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"apps"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "users",
									"item": [
										{
											"name": "Get Role Users",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/users?name=Rich&include_unassigned=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"users"
													],
													"query": [
														{
															"key": "name",
															"value": "Rich"
														},
														{
															"key": "include_unassigned",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Get Role Users"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/users?name=Rich&include_unassigned=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"users"
															],
															"query": [
																{
																	"key": "name",
																	"value": "Rich"
																},
																{
																	"key": "include_unassigned",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/users?name=Rich&include_unassigned=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"users"
															],
															"query": [
																{
																	"key": "name",
																	"value": "Rich"
																},
																{
																	"key": "include_unassigned",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										},
										{
											"name": "Add Role Users",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  60231059,\n  60231067\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"users"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Add Role Users"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  60231059,\n  60231067\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"users"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  60231059,\n  60231067\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"users"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										},
										{
											"name": "Remove Role Users",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  60231067\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id",
														"users"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Remove Role Users"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  60231067\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"users"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  60231067\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/roles/:role_id/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"roles",
																":role_id",
																"users"
															],
															"variable": [
																{
																	"key": "role_id",
																	"value": "{{role_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Role",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles/:role_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"key": "role_id",
													"value": "{{role_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this API to return the base role object. Role users, apps, and administrators are returned using sub endpoints."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"pariatur non\",\n  \"id\": 16130675,\n  \"apps\": [\n    234,\n    567,\n    777\n  ],\n  \"users\": [\n    17882009,\n    -61124233\n  ],\n  \"admins\": [\n    80162688,\n    -10144233\n  ]\n}"
										},
										{
											"name": "Typically, this error means that your access token value is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										},
										{
											"name": "The requested role does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										}
									]
								},
								{
									"name": "Update Role",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"do sint\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/roles/:role_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"key": "role_id",
													"value": "{{role_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this API to update a role. Partial role updates are supported."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"do sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": -97774805\n}"
										},
										{
											"name": "Typically, this error means that your Authorization header value is missing or incorrectly formatted. The Authorization header value should use this format: bearer:<access_token>.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"do sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										},
										{
											"name": "Indicates that the syntax of the request is good but a value supplied is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"do sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"do sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										}
									]
								},
								{
									"name": "Delete Role",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles/:role_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"key": "role_id",
													"value": "{{role_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this API to delete a Role. BE CAREFUL. This operation is final and cannot be undone."
									},
									"response": [
										{
											"name": "Success. The role has been deleted. No content is returned",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Typically, this error means that your Authorization header value is missing or incorrectly formatted. The Authorization header value should use this format: bearer:<access_token>.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										},
										{
											"name": "You attempted to delete a role that does not exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/roles/:role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"roles",
														":role_id"
													],
													"variable": [
														{
															"key": "role_id",
															"value": "{{role_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Roles",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles?name=est mollit ipsum elit&app_id={{app_id}}&app_name=est mollit ipsum elit&fields=est mollit ipsum elit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "name",
											"value": "est mollit ipsum elit",
											"description": "Optional. Filters by role name."
										},
										{
											"key": "app_id",
											"value": "{{app_id}}",
											"description": "Optional. Returns roles that contain this app ID."
										},
										{
											"key": "app_name",
											"value": "est mollit ipsum elit",
											"description": "Optional. Returns roles that contain this app name."
										},
										{
											"key": "fields",
											"value": "est mollit ipsum elit",
											"description": "Optional. Comma delimited list of fields to return Valid options are apps, users, admins"
										}
									]
								},
								"description": "Use this API to return a list of roles. Pagination is supported on this endpoint."
							},
							"response": [
								{
									"name": "Successfully the list of resources matching the requested criteria",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles?name=est mollit ipsum elit&app_id={{app_id}}&app_name=est mollit ipsum elit&fields=est mollit ipsum elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "app_id",
													"value": "{{app_id}}"
												},
												{
													"key": "app_name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "fields",
													"value": "est mollit ipsum elit"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"sunt est in cupidatat\",\n    \"id\": -31645486,\n    \"apps\": [\n      234,\n      567,\n      777\n    ],\n    \"users\": [\n      -87891491,\n      -77623029\n    ],\n    \"admins\": [\n      -96824271,\n      21613434\n    ]\n  },\n  {\n    \"name\": \"ullamco culpa\",\n    \"id\": -62354662,\n    \"apps\": [\n      234,\n      567,\n      777\n    ],\n    \"users\": [\n      -24838198,\n      -78878571\n    ],\n    \"admins\": [\n      42888547,\n      -40716360\n    ]\n  }\n]"
								},
								{
									"name": "Usually describes that your request's payload is invalid. One or more validations failed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles?name=est mollit ipsum elit&app_id={{app_id}}&app_name=est mollit ipsum elit&fields=est mollit ipsum elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "app_id",
													"value": "{{app_id}}"
												},
												{
													"key": "app_name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "fields",
													"value": "est mollit ipsum elit"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
								},
								{
									"name": "Typically, this error means that your access token value is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles?name=est mollit ipsum elit&app_id={{app_id}}&app_name=est mollit ipsum elit&fields=est mollit ipsum elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "app_id",
													"value": "{{app_id}}"
												},
												{
													"key": "app_name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "fields",
													"value": "est mollit ipsum elit"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles?name=est mollit ipsum elit&app_id={{app_id}}&app_name=est mollit ipsum elit&fields=est mollit ipsum elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "app_id",
													"value": "{{app_id}}"
												},
												{
													"key": "app_name",
													"value": "est mollit ipsum elit"
												},
												{
													"key": "fields",
													"value": "est mollit ipsum elit"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
								}
							]
						},
						{
							"name": "Create Role",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"pariatur non\",\n  \"id\": 16130675,\n  \"apps\": [\n    234,\n    567,\n    777\n  ],\n  \"users\": [\n    17882009,\n    -61124233\n  ],\n  \"admins\": [\n    80162688,\n    -10144233\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								},
								"description": "Use this API to create a new role."
							},
							"response": [
								{
									"name": "Successfully created role",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"pariatur non\",\n  \"id\": 16130675,\n  \"apps\": [\n    234,\n    567,\n    777\n  ],\n  \"users\": [\n    17882009,\n    -61124233\n  ],\n  \"admins\": [\n    80162688,\n    -10144233\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": -97774805\n}"
								},
								{
									"name": "Typically, this error means that your access token value is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"pariatur non\",\n  \"id\": 16130675,\n  \"apps\": [\n    234,\n    567,\n    777\n  ],\n  \"users\": [\n    17882009,\n    -61124233\n  ],\n  \"admins\": [\n    80162688,\n    -10144233\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"pariatur non\",\n  \"id\": 16130675,\n  \"apps\": [\n    234,\n    567,\n    777\n  ],\n  \"users\": [\n    17882009,\n    -61124233\n  ],\n  \"admins\": [\n    80162688,\n    -10144233\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 89099085,\n  \"message\": \"eiusmod Ut\",\n  \"name\": \"dolore enim laboris adipisicing\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "SAML Assertion v2 - OneLogin API",
			"item": [
				{
					"name": "Generate SAML Assertion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "bearer:{{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username_or_email\": \"{{username_or_email}}\",\n    \"password\": \"{{password}}\",\n    \"app_id\": \"{{app_id}}\",\n    \"subdomain\":\"{{subdomain}}\"\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/saml_assertion",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"saml_assertion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Factor SAML",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer:{{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"app_id\": \"{{app_id}}\",\n    \"otp_token\": \"{{otp_token}}\",\n    \"device_id\": \"{{device_id}}\",\n    \"state_token\": \"{{state_token}}\"\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/saml_assertion/verify_factor",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"saml_assertion",
								"verify_factor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Smart Hooks - OneLogin API",
			"item": [
				{
					"name": "api/2/hooks",
					"item": [
						{
							"name": "envs",
							"item": [
								{
									"name": "{hook env var id}",
									"item": [
										{
											"name": "Update Variable",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"super-secret-updated\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														"envs",
														":hook_env_var_id"
													],
													"variable": [
														{
															"key": "hook_env_var_id",
															"value": "{{hook_env_var_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Update Variable"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "\"super-secret-updated\"",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"hooks",
																"envs",
																":hook_env_var_id"
															],
															"variable": [
																{
																	"key": "hook_env_var_id",
																	"value": "{{hook_env_var_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Variable",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														"envs",
														":hook_env_var_id"
													],
													"variable": [
														{
															"key": "hook_env_var_id",
															"value": "{{hook_env_var_id}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete Variable"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/hooks/envs/:hook_env_var_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"hooks",
																"envs",
																":hook_env_var_id"
															],
															"variable": [
																{
																	"key": "hook_env_var_id",
																	"value": "{{hook_env_var_id}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List Variables",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/envs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												"envs"
											]
										},
										"description": "List Variables"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/envs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														"envs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Variable",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"foobarbaz\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/envs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												"envs"
											]
										},
										"description": "Create Variable"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "\"foobarbaz\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/envs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														"envs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{hook id}",
							"item": [
								{
									"name": "Get Hook",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id"
											],
											"variable": [
												{
													"key": "hook_id",
													"value": "{{pre_authentication_hook_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get Hook"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														":hook_id"
													],
													"variable": [
														{
															"key": "hook_id",
															"value": "{{pre_authentication_hook_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Hook",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"disabled\": false,\n  \"env_vars\": [],\n  \"function\": \"{{base64Function}}\",\n  \"location_enabled\": false,\n  \"packages\": {},\n  \"retries\": 0,\n  \"risk_enabled\": false,\n  \"runtime\": \"nodejs12.x\",\n  \"timeout\": 1,\n  \"type\": \"pre-authentication\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id"
											],
											"variable": [
												{
													"key": "hook_id",
													"value": "{{pre_authentication_hook_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Update Hook"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"disabled\": false,\n  \"env_vars\": [],\n  \"function\": \"{{base64Function}}\",\n  \"location_enabled\": false,\n  \"packages\": {},\n  \"retries\": 0,\n  \"risk_enabled\": false,\n  \"runtime\": \"nodejs12.x\",\n  \"timeout\": 1,\n  \"type\": \"pre-authentication\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														":hook_id"
													],
													"variable": [
														{
															"key": "hook_id",
															"value": "{{pre_authentication_hook_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Hook",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id"
											],
											"variable": [
												{
													"key": "hook_id",
													"value": "{{pre_authentication_hook_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Hook"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/:hook_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														":hook_id"
													],
													"variable": [
														{
															"key": "hook_id",
															"value": "{{pre_authentication_hook_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Hook Logs",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks/:hook_id/logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks",
												":hook_id",
												"logs"
											],
											"variable": [
												{
													"key": "hook_id",
													"value": "{{pre_authentication_hook_id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get Hook Logs"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/hooks/:hook_id/logs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"hooks",
														":hook_id",
														"logs"
													],
													"variable": [
														{
															"key": "hook_id",
															"value": "{{pre_authentication_hook_id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List Hooks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks"
									]
								},
								"description": "List Hooks"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Hook",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"{\\n\\t\\\"type\\\": \\\"pre-authentication\\\",\\n\\t\\\"function\\\": \\\"{{base64Function}}\\\",\\n\\t\\\"disabled\\\": false,\\n    \\\"runtime\\\": \\\"nodejs12.x\\\",\\n\\t\\\"retries\\\": 0,\\n\\t\\\"timeout\\\": 1,\\n\\t\\\"risk_enabled\\\": false,\\n\\t\\\"location_enabled\\\": false,\\n    \\\"mfa_device_info_enabled\\\": true,\\n\\t\\\"env_vars\\\": [\\n\\t],\\n\\t\\\"packages\\\": {\\n\\t},\\n}\""
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"hooks"
									]
								},
								"description": "Create Hook"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"{\\n\\t\\\"type\\\": \\\"pre-authentication\\\",\\n\\t\\\"function\\\": \\\"{{base64Function}}\\\",\\n\\t\\\"disabled\\\": false,\\n    \\\"runtime\\\": \\\"nodejs12.x\\\",\\n\\t\\\"retries\\\": 0,\\n\\t\\\"timeout\\\": 1,\\n\\t\\\"risk_enabled\\\": false,\\n\\t\\\"location_enabled\\\": false,\\n    \\\"mfa_device_info_enabled\\\": true,\\n\\t\\\"env_vars\\\": [\\n\\t],\\n\\t\\\"packages\\\": {\\n\\t},\\n}\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/hooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"hooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "User Mappings - OneLogin API",
			"item": [
				{
					"name": "List Mappings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings"
							],
							"query": [
								{
									"key": "has_condition",
									"value": "has_role:{{role_id}}",
									"disabled": true
								},
								{
									"key": "has_condition_type",
									"value": "none",
									"disabled": true
								},
								{
									"key": "has_action",
									"value": "set_status:*",
									"disabled": true
								},
								{
									"key": "has_action_type",
									"value": "none",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/{{mapping_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"{{mapping_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Sort",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[196671,196670,196672,196676,197758]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/sort",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Actions Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/actions/{{mapping_action_value}}/values",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"actions",
								"{{mapping_action_value}}",
								"values"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Conditions Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/conditions/{{mapping_condition_value}}/values",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"conditions",
								"{{mapping_condition_value}}",
								"values"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response ID is not null\", function () {",
									"    pm.response.json().id.not.equal(null);",
									"});",
									"",
									"postman.setEnvironmentVariable(\"mapping_id\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Suspend after 90 days inactive\",\n    \"match\": \"all\",\n    \"position\": null,\n    \"enabled\": true,\n    \"conditions\": [\n        {\n            \"source\": \"last_login\",\n            \"operator\": \">\",\n            \"value\": \"90\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_status\",\n            \"value\": [\"2\"]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response ID is not null\", function () {",
									"    pm.response.json().id.not.equal(null);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Second Mapping\",\n    \"match\": \"all\",\n    \"enabled\": true,\n    \"position\": 1,\n    \"conditions\": [\n        {\n            \"source\": \"last_login\",\n            \"operator\": \">\",\n            \"value\": \"90\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"action\": \"set_status\",\n            \"value\": \"2\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/{{mapping_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"{{mapping_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/{{mapping_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"{{mapping_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Conditions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/conditions",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"conditions"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/actions",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"actions"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Conditions Operators",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{api-domain}}/api/2/mappings/conditions/{{mapping_condition_value}}/operators",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"mappings",
								"conditions",
								"{{mapping_condition_value}}",
								"operators"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Mappings - OneLogin API",
			"item": [
				{
					"name": "api/2/mappings",
					"item": [
						{
							"name": "actions",
							"item": [
								{
									"name": "List Actions",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings/actions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings",
												"actions"
											]
										},
										"description": "List Actions"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/actions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														"actions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "List Actions Values",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings/actions/:mapping_action_value/values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings",
												"actions",
												":mapping_action_value",
												"values"
											],
											"variable": [
												{
													"key": "mapping_action_value",
													"value": "proident consectetur nostrud culpa sit",
													"description": "(Required) "
												}
											]
										},
										"description": "List Actions Values"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/actions/:mapping_action_value/values",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														"actions",
														":mapping_action_value",
														"values"
													],
													"variable": [
														{
															"key": "mapping_action_value",
															"value": "proident consectetur nostrud culpa sit",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "conditions",
							"item": [
								{
									"name": "{mapping condition value}",
									"item": [
										{
											"name": "List Conditions Operators",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/conditions/:mapping_condition_value/operators",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														"conditions",
														":mapping_condition_value",
														"operators"
													],
													"variable": [
														{
															"key": "mapping_condition_value",
															"value": "proident consectetur nostrud culpa sit",
															"description": "(Required) "
														}
													]
												},
												"description": "List Conditions Operators"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/mappings/conditions/:mapping_condition_value/operators",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"mappings",
																"conditions",
																":mapping_condition_value",
																"operators"
															],
															"variable": [
																{
																	"key": "mapping_condition_value",
																	"value": "proident consectetur nostrud culpa sit",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "List Conditions Values",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/conditions/:mapping_condition_value/values",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														"conditions",
														":mapping_condition_value",
														"values"
													],
													"variable": [
														{
															"key": "mapping_condition_value",
															"value": "proident consectetur nostrud culpa sit",
															"description": "(Required) "
														}
													]
												},
												"description": "List Conditions Values"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/mappings/conditions/:mapping_condition_value/values",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"mappings",
																"conditions",
																":mapping_condition_value",
																"values"
															],
															"variable": [
																{
																	"key": "mapping_condition_value",
																	"value": "proident consectetur nostrud culpa sit",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List Conditions",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings/conditions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings",
												"conditions"
											]
										},
										"description": "List Conditions"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/conditions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														"conditions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{mapping id}",
							"item": [
								{
									"name": "Get Mapping",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings/:mapping_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings",
												":mapping_id"
											],
											"variable": [
												{
													"key": "mapping_id",
													"value": "proident consectetur nostrud culpa sit",
													"description": "(Required) "
												}
											]
										},
										"description": "Get Mapping"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/:mapping_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														":mapping_id"
													],
													"variable": [
														{
															"key": "mapping_id",
															"value": "proident consectetur nostrud culpa sit",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Mapping",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actions\": [\n    {\n      \"action\": \"set_status\",\n      \"value\": \"2\"\n    }\n  ],\n  \"conditions\": [\n    {\n      \"operator\": \">\",\n      \"source\": \"last_login\",\n      \"value\": \"90\"\n    }\n  ],\n  \"enabled\": true,\n  \"match\": \"all\",\n  \"name\": \"My Second Mapping\",\n  \"position\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings/:mapping_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings",
												":mapping_id"
											],
											"variable": [
												{
													"key": "mapping_id",
													"value": "proident consectetur nostrud culpa sit",
													"description": "(Required) "
												}
											]
										},
										"description": "Update Mapping"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actions\": [\n    {\n      \"action\": \"set_status\",\n      \"value\": \"2\"\n    }\n  ],\n  \"conditions\": [\n    {\n      \"operator\": \">\",\n      \"source\": \"last_login\",\n      \"value\": \"90\"\n    }\n  ],\n  \"enabled\": true,\n  \"match\": \"all\",\n  \"name\": \"My Second Mapping\",\n  \"position\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/:mapping_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														":mapping_id"
													],
													"variable": [
														{
															"key": "mapping_id",
															"value": "proident consectetur nostrud culpa sit",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Mapping",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings/:mapping_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings",
												":mapping_id"
											],
											"variable": [
												{
													"key": "mapping_id",
													"value": "proident consectetur nostrud culpa sit",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Mapping"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/mappings/:mapping_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"mappings",
														":mapping_id"
													],
													"variable": [
														{
															"key": "mapping_id",
															"value": "proident consectetur nostrud culpa sit",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List Mappings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/mappings?has_condition=has_role:{{role_id}}&has_condition_type=none&has_action=set_status:*&has_action_type=none",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"mappings"
									],
									"query": [
										{
											"key": "has_condition",
											"value": "has_role:{{role_id}}"
										},
										{
											"key": "has_condition_type",
											"value": "none"
										},
										{
											"key": "has_action",
											"value": "set_status:*"
										},
										{
											"key": "has_action_type",
											"value": "none"
										}
									]
								},
								"description": "List Mappings"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings?has_condition=has_role:{{role_id}}&has_condition_type=none&has_action=set_status:*&has_action_type=none",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings"
											],
											"query": [
												{
													"key": "has_condition",
													"value": "has_role:{{role_id}}"
												},
												{
													"key": "has_condition_type",
													"value": "none"
												},
												{
													"key": "has_action",
													"value": "set_status:*"
												},
												{
													"key": "has_action_type",
													"value": "none"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Mapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"actions\": [\n    {\n      \"action\": \"set_status\",\n      \"value\": [\n        \"2\"\n      ]\n    }\n  ],\n  \"conditions\": [\n    {\n      \"operator\": \">\",\n      \"source\": \"last_login\",\n      \"value\": \"90\"\n    }\n  ],\n  \"enabled\": true,\n  \"match\": \"all\",\n  \"name\": \"Suspend after 90 days inactive\",\n  \"position\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"mappings"
									]
								},
								"description": "Create Mapping"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actions\": [\n    {\n      \"action\": \"set_status\",\n      \"value\": [\n        \"2\"\n      ]\n    }\n  ],\n  \"conditions\": [\n    {\n      \"operator\": \">\",\n      \"source\": \"last_login\",\n      \"value\": \"90\"\n    }\n  ],\n  \"enabled\": true,\n  \"match\": \"all\",\n  \"name\": \"Suspend after 90 days inactive\",\n  \"position\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Bulk Sort",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  196671,\n  196670,\n  196672,\n  196676,\n  197758\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/mappings/sort",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"mappings",
										"sort"
									]
								},
								"description": "Bulk Sort"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n  196671,\n  196670,\n  196672,\n  196676,\n  197758\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/mappings/sort",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"mappings",
												"sort"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Users v2 - OneLogin API",
			"item": [
				{
					"name": "List Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer:{{access_token}}"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/users",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"users"
							],
							"query": [
								{
									"key": "firstname",
									"value": "",
									"disabled": true
								},
								{
									"key": "lastname",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_since",
									"value": "2018-01-01",
									"disabled": true
								},
								{
									"key": "created_until",
									"value": "2019-09-14",
									"disabled": true
								},
								{
									"key": "updated_since",
									"value": "2020-07-01T20:38:24Z",
									"disabled": true
								},
								{
									"key": "updated_until",
									"value": "2020-08-14T20:38:24Z",
									"disabled": true
								},
								{
									"key": "last_login_since",
									"value": "2020-05-01",
									"disabled": true
								},
								{
									"key": "last_login_until",
									"value": "2020-06-01T00:00:00Z",
									"disabled": true
								},
								{
									"key": "group_id",
									"value": "461331",
									"disabled": true
								},
								{
									"key": "state",
									"value": "3",
									"disabled": true
								},
								{
									"key": "status",
									"value": "3",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "id,firstname,lastname,profile_picture_url,last_login",
									"disabled": true
								},
								{
									"key": "username",
									"value": "",
									"disabled": true
								},
								{
									"key": "samaccountname",
									"value": "",
									"disabled": true
								},
								{
									"key": "directory_id",
									"value": "123",
									"disabled": true
								},
								{
									"key": "external_id",
									"value": "",
									"disabled": true
								},
								{
									"key": "app_id",
									"value": "123",
									"disabled": true
								},
								{
									"key": "user_ids",
									"value": "123,456",
									"disabled": true
								},
								{
									"key": "custom_attributes.{{custom_attribute_short_name}}",
									"value": "something",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "+firstname",
									"disabled": true
								}
							]
						},
						"description": "Get a list of users"
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer:{{access_token}}"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/users/{{user_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer:{{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstname\": \"Steve\",\n  \"lastname\": \"Smith\",\n  \"username\": \"steve.smith\",\n  \"password\": \"partytime123\",\n  \"password_confirmation\": \"partytime123\"\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/users",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"users"
							],
							"query": [
								{
									"key": "mappings",
									"value": "sync",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer:{{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"state\": 1\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/users/{{user_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"users",
								"{{user_id}}"
							],
							"query": [
								{
									"key": "mappings",
									"value": "sync",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer:{{access_token}}"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/users/{{user_id}}",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users v2 - OneLogin API",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "{user id}",
							"item": [
								{
									"name": "Get User",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "commodo",
													"description": "(Required) "
												}
											]
										},
										"description": "Get User"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "commodo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update User",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"state\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id?mappings=sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"query": [
												{
													"key": "mappings",
													"value": "sync"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "commodo",
													"description": "(Required) "
												}
											]
										},
										"description": "Update User"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"state\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id?mappings=sync",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"query": [
														{
															"key": "mappings",
															"value": "sync"
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "commodo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete User",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "commodo",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete User"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "commodo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?firstname=&lastname=&email=&created_since=mollit labore s&created_until=labore ut ea amet&updated_since=2020-07-01T20:38:24Z&updated_until=2020-08-14T20:38:24Z&last_login_since=dol&last_login_until=2020-06-01T00:00:00Z&group_id=461331&state=3&status=3&fields=id,firstname,lastname,profile_picture_url,last_login&username=commodo&samaccountname=commodo&directory_id=123&external_id=commodo&app_id=123&user_ids=123,456&custom_attributes.{{custom_attribute_short_name}}=something&sort=+firstname",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "firstname",
											"value": ""
										},
										{
											"key": "lastname",
											"value": ""
										},
										{
											"key": "email",
											"value": ""
										},
										{
											"key": "created_since",
											"value": "mollit labore s"
										},
										{
											"key": "created_until",
											"value": "labore ut ea amet"
										},
										{
											"key": "updated_since",
											"value": "2020-07-01T20:38:24Z"
										},
										{
											"key": "updated_until",
											"value": "2020-08-14T20:38:24Z"
										},
										{
											"key": "last_login_since",
											"value": "dol"
										},
										{
											"key": "last_login_until",
											"value": "2020-06-01T00:00:00Z"
										},
										{
											"key": "group_id",
											"value": "461331"
										},
										{
											"key": "state",
											"value": "3"
										},
										{
											"key": "status",
											"value": "3"
										},
										{
											"key": "fields",
											"value": "id,firstname,lastname,profile_picture_url,last_login"
										},
										{
											"key": "username",
											"value": "commodo"
										},
										{
											"key": "samaccountname",
											"value": "commodo"
										},
										{
											"key": "directory_id",
											"value": "123"
										},
										{
											"key": "external_id",
											"value": "commodo"
										},
										{
											"key": "app_id",
											"value": "123"
										},
										{
											"key": "user_ids",
											"value": "123,456"
										},
										{
											"key": "custom_attributes.{{custom_attribute_short_name}}",
											"value": "something"
										},
										{
											"key": "sort",
											"value": "+firstname"
										}
									]
								},
								"description": "Get a list of users"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users?firstname=&lastname=&email=&created_since=mollit labore s&created_until=labore ut ea amet&updated_since=2020-07-01T20:38:24Z&updated_until=2020-08-14T20:38:24Z&last_login_since=dol&last_login_until=2020-06-01T00:00:00Z&group_id=461331&state=3&status=3&fields=id,firstname,lastname,profile_picture_url,last_login&username=commodo&samaccountname=commodo&directory_id=123&external_id=commodo&app_id=123&user_ids=123,456&custom_attributes.{{custom_attribute_short_name}}=something&sort=+firstname",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "firstname",
													"value": ""
												},
												{
													"key": "lastname",
													"value": ""
												},
												{
													"key": "email",
													"value": ""
												},
												{
													"key": "created_since",
													"value": "mollit labore s"
												},
												{
													"key": "created_until",
													"value": "labore ut ea amet"
												},
												{
													"key": "updated_since",
													"value": "2020-07-01T20:38:24Z"
												},
												{
													"key": "updated_until",
													"value": "2020-08-14T20:38:24Z"
												},
												{
													"key": "last_login_since",
													"value": "dol"
												},
												{
													"key": "last_login_until",
													"value": "2020-06-01T00:00:00Z"
												},
												{
													"key": "group_id",
													"value": "461331"
												},
												{
													"key": "state",
													"value": "3"
												},
												{
													"key": "status",
													"value": "3"
												},
												{
													"key": "fields",
													"value": "id,firstname,lastname,profile_picture_url,last_login"
												},
												{
													"key": "username",
													"value": "commodo"
												},
												{
													"key": "samaccountname",
													"value": "commodo"
												},
												{
													"key": "directory_id",
													"value": "123"
												},
												{
													"key": "external_id",
													"value": "commodo"
												},
												{
													"key": "app_id",
													"value": "123"
												},
												{
													"key": "user_ids",
													"value": "123,456"
												},
												{
													"key": "custom_attributes.{{custom_attribute_short_name}}",
													"value": "something"
												},
												{
													"key": "sort",
													"value": "+firstname"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstname\": \"Steve\",\n  \"lastname\": \"Smith\",\n  \"password\": \"partytime123\",\n  \"password_confirmation\": \"partytime123\",\n  \"username\": \"steve.smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?mappings=sync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "mappings",
											"value": "sync"
										}
									]
								},
								"description": "Create User"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstname\": \"Steve\",\n  \"lastname\": \"Smith\",\n  \"password\": \"partytime123\",\n  \"password_confirmation\": \"partytime123\",\n  \"username\": \"steve.smith\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users?mappings=sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "mappings",
													"value": "sync"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Authenticate User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"reprehenderit ut nisi\",\n  \"email\": \"example@user.com\",\n  \"username\": \"my.username\",\n  \"samaccountname\": \"group/my.pc-username\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"authenticate"
									]
								},
								"description": "Authenticate a user using EMail, Username or SAMAccountName."
							},
							"response": [
								{
									"name": "Authentication successful",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"reprehenderit ut nisi\",\n  \"email\": \"example@user.com\",\n  \"username\": \"my.username\",\n  \"samaccountname\": \"group/my.pc-username\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"authenticate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"reprehenderit ut nisi\",\n  \"email\": \"example@user.com\",\n  \"username\": \"my.username\",\n  \"samaccountname\": \"group/my.pc-username\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"authenticate"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Vigilance AI - OneLogin API",
			"item": [
				{
					"name": "Rules",
					"item": [
						{
							"name": "List Rules",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/risk/rules",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"risk",
										"rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Rule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Geoblock\",\n  \"description\": \"Block access for users in these countries\",\n  \"type\": \"blacklist\",\n  \"target\": \"location.address.country_iso_code\",\n  \"source\": null,\n  \"filters\": [\"NZ\", \"AU\"]\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/risk/rules",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"risk",
										"rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Rule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filters\": [\"0.0.0.0/0\",\"::/0\"]\n}"
								},
								"url": {
									"raw": "https://{{api-domain}}/api/2/risk/rules/{{rule_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"risk",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Rule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{api-domain}}/api/2/risk/rules/{{rule_id}}",
									"protocol": "https",
									"host": [
										"{{api-domain}}"
									],
									"path": [
										"api",
										"2",
										"risk",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get a Risk Score",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"ip\" : \"125.238.248.246\",\n  \"user_agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\",\n  \"user\" : {\n    \"id\"     : \"US_112233\",\n    \"name\"   : \"Eve Smith\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/risk/verify",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"risk",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track an Event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"verb\":\"log-in\",\n \"ip\" : \"125.238.248.246\",\n  \"user_agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\",\n  \"user\" : {\n    \"id\"     : \"US_112233\",\n    \"name\"   : \"Eve Smith\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/risk/events",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"risk",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Score Summary",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{api-domain}}/api/2/risk/scores",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"risk",
								"scores"
							],
							"query": [
								{
									"key": "before",
									"value": "",
									"disabled": true
								},
								{
									"key": "after",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Vigilance AI - OneLogin API",
			"item": [
				{
					"name": "api/2/risk",
					"item": [
						{
							"name": "rules",
							"item": [
								{
									"name": "{rule id}",
									"item": [
										{
											"name": "Update Rule",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filters\": [\n    \"0.0.0.0/0\",\n    \"::/0\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/risk/rules/:rule_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"risk",
														"rules",
														":rule_id"
													],
													"variable": [
														{
															"key": "rule_id",
															"value": "dol",
															"description": "(Required) "
														}
													]
												},
												"description": "Update Rule"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"filters\": [\n    \"0.0.0.0/0\",\n    \"::/0\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/2/risk/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"risk",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "rule_id",
																	"value": "dol",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Rule",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/risk/rules/:rule_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"risk",
														"rules",
														":rule_id"
													],
													"variable": [
														{
															"key": "rule_id",
															"value": "dol",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete Rule"
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/2/risk/rules/:rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"2",
																"risk",
																"rules",
																":rule_id"
															],
															"variable": [
																{
																	"key": "rule_id",
																	"value": "dol",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List Rules",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/risk/rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"risk",
												"rules"
											]
										},
										"description": "List Rules"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/2/risk/rules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"risk",
														"rules"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Rule",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Block access for users in these countries\",\n  \"filters\": [\n    \"NZ\",\n    \"AU\"\n  ],\n  \"name\": \"Geoblock\",\n  \"source\": null,\n  \"target\": \"location.address.country_iso_code\",\n  \"type\": \"blacklist\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/risk/rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"risk",
												"rules"
											]
										},
										"description": "Create Rule"
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Block access for users in these countries\",\n  \"filters\": [\n    \"NZ\",\n    \"AU\"\n  ],\n  \"name\": \"Geoblock\",\n  \"source\": null,\n  \"target\": \"location.address.country_iso_code\",\n  \"type\": \"blacklist\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/2/risk/rules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"2",
														"risk",
														"rules"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Track an Event",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"125.238.248.246\",\n  \"user\": {\n    \"id\": \"US_112233\",\n    \"name\": \"Eve Smith\"\n  },\n  \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\",\n  \"verb\": \"log-in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/risk/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"risk",
										"events"
									]
								},
								"description": "Track an Event"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"125.238.248.246\",\n  \"user\": {\n    \"id\": \"US_112233\",\n    \"name\": \"Eve Smith\"\n  },\n  \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\",\n  \"verb\": \"log-in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/risk/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"risk",
												"events"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Score Summary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/2/risk/scores?before=dol&after=dol",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"risk",
										"scores"
									],
									"query": [
										{
											"key": "before",
											"value": "dol"
										},
										{
											"key": "after",
											"value": "dol"
										}
									]
								},
								"description": "Get Score Summary"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/2/risk/scores?before=dol&after=dol",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"risk",
												"scores"
											],
											"query": [
												{
													"key": "before",
													"value": "dol"
												},
												{
													"key": "after",
													"value": "dol"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a Risk Score",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ip\": \"125.238.248.246\",\n  \"user\": {\n    \"id\": \"US_112233\",\n    \"name\": \"Eve Smith\"\n  },\n  \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/2/risk/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"2",
										"risk",
										"verify"
									]
								},
								"description": "Get a Risk Score"
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"125.238.248.246\",\n  \"user\": {\n    \"id\": \"US_112233\",\n    \"name\": \"Eve Smith\"\n  },\n  \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/2/risk/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"2",
												"risk",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Smart MFA - OneLogin  API",
			"item": [
				{
					"name": "Validate / Register User via SMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Returns MFA\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.mfa.otp_sent).to.eql(true);",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"state_token\", jsonData.mfa.state_token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_identifier\": \"mike.tester\",\n  \"phone\": \"+155512341234\",\n  \"context\": {\n    \"ip\": \"120.118.218.225\",\n    \"user_agent\": \"Mozilla/5.0 (Windows; U; Windows NT 6.0) AppleWebKit/531.1.0 (KHTML, like Gecko) Chrome/21.0.843.0 Safari/531.1.0\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/smart-mfa/",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"smart-mfa",
								""
							]
						},
						"description": "This request uses minimum required information to validate a new or existing user. If the risk score is above the threshold a one time token will be sent to the users phone via SMS."
					},
					"response": []
				},
				{
					"name": "Validate / Register User via Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"state_token\", jsonData.mfa.state_token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_identifier\": \"mike.tester\",\n  \"email\": \"mike.tester@onelogin.com\",\n  \"context\": {\n    \"ip\": \"120.118.218.228\",\n    \"user_agent\": \"Mozilla/5.0 (Windows; U; Windows NT 6.0) AppleWebKit/531.1.0 (KHTML, like Gecko) Chrome/21.0.843.0 Safari/531.1.0\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/smart-mfa/",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"smart-mfa",
								""
							]
						},
						"description": "This request uses minimum required information to validate a new or existing user. If the risk score is above the threshold a one time token will be sent to the users phone via Email."
					},
					"response": []
				},
				{
					"name": "Verify Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"state_token\": \"{{state_token}}\",\n\t\"otp_token\": \"7F2164\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{api-domain}}/api/2/smart-mfa/verify",
							"protocol": "https",
							"host": [
								"{{api-domain}}"
							],
							"path": [
								"api",
								"2",
								"smart-mfa",
								"verify"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
